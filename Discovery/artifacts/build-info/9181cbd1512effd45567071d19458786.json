{
	"id": "9181cbd1512effd45567071d19458786",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"burnable-token/Discovery/Discovery.sol": {
				"content": "\n\n\npragma solidity ^0.8.10;\n\n\nimport \"./ERC20.sol\";\nimport \"./Ownable.sol\";\nimport \"./ERC20Burnable.sol\";\n\n contract DiscoveryCoin is ERC20, ERC20Burnable, Ownable {\n\nconstructor() ERC20(unicode\"Hammer Time\", unicode\"DISCOVERY\") Ownable(msg.sender) {\n        _mint(msg.sender, 666 * 10 ** decimals());\n   }\n }\n \n\n"
			},
			"burnable-token/Discovery/ERC20Burnable.sol": {
				"content": "/*\n\n ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n\nFind any smart contract, and build your project faster: https://www.cookbook.dev/?utm=code\nTwitter: https://twitter.com/cookbook_dev\nDiscord: https://discord.gg/cookbookdev\n\nFind this contract on Cookbook: https://www.cookbook.dev/contracts/burnable-token?utm=code\n*/\n\n// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ERC20.sol\";\nimport \"./Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        _spendAllowance(account, _msgSender(), amount);\n        _burn(account, amount);\n    }\n}\n"
			},
			"burnable-token/Discovery/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"./Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"burnable-token/Discovery/ERC20.sol": {
				"content": "/*\n\n ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n\nFind any smart contract, and build your project faster: https://www.cookbook.dev/?utm=code\nTwitter: https://twitter.com/cookbook_dev\nDiscord: https://discord.gg/cookbookdev\n\nFind this contract on Cookbook: https://www.cookbook.dev/contracts/burnable-token?utm=code\n*/\n\n// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./IERC20Metadata.sol\";\nimport \"./Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"
			},
			"burnable-token/Discovery/Context.sol": {
				"content": "/*\n\n ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n\nFind any smart contract, and build your project faster: https://www.cookbook.dev/?utm=code\nTwitter: https://twitter.com/cookbook_dev\nDiscord: https://discord.gg/cookbookdev\n\nFind this contract on Cookbook: https://www.cookbook.dev/contracts/burnable-token?utm=code\n*/\n\n// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"burnable-token/Discovery/IERC20Metadata.sol": {
				"content": "/*\n\n ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n\nFind any smart contract, and build your project faster: https://www.cookbook.dev/?utm=code\nTwitter: https://twitter.com/cookbook_dev\nDiscord: https://discord.gg/cookbookdev\n\nFind this contract on Cookbook: https://www.cookbook.dev/contracts/burnable-token?utm=code\n*/\n\n// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"burnable-token/Discovery/IERC20.sol": {
				"content": "/*\n\n ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n\nFind any smart contract, and build your project faster: https://www.cookbook.dev/?utm=code\nTwitter: https://twitter.com/cookbook_dev\nDiscord: https://discord.gg/cookbookdev\n\nFind this contract on Cookbook: https://www.cookbook.dev/contracts/burnable-token?utm=code\n*/\n\n// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 100
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"burnable-token/Discovery/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"burnable-token/Discovery/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"burnable-token/Discovery/Context.sol\":{\"keccak256\":\"0xc62564992cc32565eceb4520ec135acbef98399abe1f83c9133d86b631b64afe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d345ef4e0fa7ac043487966f12ac4523f1acbd8a4e2c92bfc8f4afc0a4bf1316\",\"dweb:/ipfs/QmWk48jHWKYoxq6pCDVyhCqeGyyaCqKvHE2WnjruFVjnth\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"burnable-token/Discovery/Discovery.sol": {
				"DiscoveryCoin": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"burnable-token/Discovery/Discovery.sol\":108:309  contract DiscoveryCoin is ERC20, ERC20Burnable, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"burnable-token/Discovery/Discovery.sol\":167:306  constructor() ERC20(unicode\"Hammer Time\", unicode\"DISCOVERY\") Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"burnable-token/Discovery/Discovery.sol\":237:247  msg.sender */\n  caller\n    /* \"burnable-token/Discovery/ERC20.sol\":3210:3323  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0b\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xa8, 0x48616d6d65722054696d65)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x09\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xb8, 0x444953434f56455259)\n  dup2\n  mstore\n  pop\n    /* \"burnable-token/Discovery/ERC20.sol\":3284:3289  name_ */\n  dup2\n    /* \"burnable-token/Discovery/ERC20.sol\":3276:3281  _name */\n  0x03\n    /* \"burnable-token/Discovery/ERC20.sol\":3276:3289  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"burnable-token/Discovery/ERC20.sol\":3299:3306  _symbol */\n  0x04\n    /* \"burnable-token/Discovery/ERC20.sol\":3299:3316  _symbol = symbol_ */\n  tag_8\n    /* \"burnable-token/Discovery/ERC20.sol\":3309:3316  symbol_ */\n  dup3\n    /* \"burnable-token/Discovery/ERC20.sol\":3299:3306  _symbol */\n  dup3\n    /* \"burnable-token/Discovery/ERC20.sol\":3299:3316  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"burnable-token/Discovery/Ownable.sol\":1266:1292  initialOwner == address(0) */\n  dup2\n  and\n    /* \"burnable-token/Discovery/Ownable.sol\":1262:1357  if (initialOwner == address(0)) {... */\n  tag_10\n  jumpi\n    /* \"burnable-token/Discovery/Ownable.sol\":1315:1346  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"burnable-token/Discovery/Ownable.sol\":1343:1344  0 */\n  0x00\n    /* \"burnable-token/Discovery/Ownable.sol\":1315:1346  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2881:2932   */\n  mstore\n    /* \"#utility.yul\":2854:2872   */\n  0x24\n  add\n    /* \"burnable-token/Discovery/Ownable.sol\":1315:1346  OwnableInvalidOwner(address(0)) */\ntag_11:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"burnable-token/Discovery/Ownable.sol\":1262:1357  if (initialOwner == address(0)) {... */\ntag_10:\n    /* \"burnable-token/Discovery/Ownable.sol\":1366:1398  _transferOwnership(initialOwner) */\n  tag_13\n    /* \"burnable-token/Discovery/Ownable.sol\":1385:1397  initialOwner */\n  dup2\n    /* \"burnable-token/Discovery/Ownable.sol\":1366:1384  _transferOwnership */\n  tag_14\n    /* \"burnable-token/Discovery/Ownable.sol\":1366:1398  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_13:\n  pop\n    /* \"burnable-token/Discovery/Discovery.sol\":259:300  _mint(msg.sender, 666 * 10 ** decimals()) */\n  tag_16\n    /* \"burnable-token/Discovery/Discovery.sol\":265:275  msg.sender */\n  caller\n    /* \"burnable-token/Discovery/Discovery.sol\":283:299  10 ** decimals() */\n  tag_19\n    /* \"burnable-token/Discovery/ERC20.sol\":4407:4409  18 */\n  0x12\n    /* \"burnable-token/Discovery/Discovery.sol\":283:285  10 */\n  0x0a\n    /* \"burnable-token/Discovery/Discovery.sol\":283:299  10 ** decimals() */\n  tag_20\n  jump\t// in\ntag_19:\n    /* \"burnable-token/Discovery/Discovery.sol\":277:299  666 * 10 ** decimals() */\n  tag_21\n  swap1\n    /* \"burnable-token/Discovery/Discovery.sol\":277:280  666 */\n  0x029a\n    /* \"burnable-token/Discovery/Discovery.sol\":277:299  666 * 10 ** decimals() */\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"burnable-token/Discovery/Discovery.sol\":259:264  _mint */\n  tag_23\n    /* \"burnable-token/Discovery/Discovery.sol\":259:300  _mint(msg.sender, 666 * 10 ** decimals()) */\n  jump\t// in\ntag_16:\n    /* \"burnable-token/Discovery/Discovery.sol\":108:309  contract DiscoveryCoin is ERC20, ERC20Burnable, Ownable {... */\n  jump(tag_50)\n    /* \"burnable-token/Discovery/Ownable.sol\":2905:3092  function _transferOwnership(address newOwner) internal virtual {... */\ntag_14:\n    /* \"burnable-token/Discovery/Ownable.sol\":2997:3003  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"burnable-token/Discovery/Ownable.sol\":3013:3030  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"burnable-token/Discovery/Ownable.sol\":3045:3085  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"burnable-token/Discovery/Ownable.sol\":2997:3003  _owner */\n  swap2\n  and\n  swap2\n    /* \"burnable-token/Discovery/Ownable.sol\":3013:3030  _owner = newOwner */\n  swap1\n    /* \"burnable-token/Discovery/Ownable.sol\":2997:3003  _owner */\n  dup3\n  swap1\n    /* \"burnable-token/Discovery/Ownable.sol\":3045:3085  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"burnable-token/Discovery/Ownable.sol\":2978:2994  address oldOwner */\n  0x00\n  swap1\n    /* \"burnable-token/Discovery/Ownable.sol\":3045:3085  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"burnable-token/Discovery/Ownable.sol\":2968:3092  {... */\n  pop\n    /* \"burnable-token/Discovery/Ownable.sol\":2905:3092  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"burnable-token/Discovery/ERC20.sol\":9634:10023  function _mint(address account, uint256 amount) internal virtual {... */\ntag_23:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"burnable-token/Discovery/ERC20.sol\":9717:9738  account != address(0) */\n  dup3\n  and\n    /* \"burnable-token/Discovery/ERC20.sol\":9709:9774  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_28\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":4833:4835   */\n  0x20\n    /* \"burnable-token/Discovery/ERC20.sol\":9709:9774  require(account != address(0), \"ERC20: mint to the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4815:4836   */\n  mstore\n    /* \"#utility.yul\":4872:4874   */\n  0x1f\n    /* \"#utility.yul\":4852:4870   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":4845:4875   */\n  mstore\n    /* \"#utility.yul\":4911:4944   */\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n    /* \"#utility.yul\":4891:4909   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":4884:4945   */\n  mstore\n    /* \"#utility.yul\":4962:4980   */\n  0x64\n  add\n    /* \"burnable-token/Discovery/ERC20.sol\":9709:9774  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_11\n    /* \"#utility.yul\":4631:4986   */\n  jump\n    /* \"burnable-token/Discovery/ERC20.sol\":9709:9774  require(account != address(0), \"ERC20: mint to the zero address\") */\ntag_28:\n    /* \"burnable-token/Discovery/ERC20.sol\":9861:9867  amount */\n  dup1\n    /* \"burnable-token/Discovery/ERC20.sol\":9845:9857  _totalSupply */\n  0x02\n  0x00\n    /* \"burnable-token/Discovery/ERC20.sol\":9845:9867  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_33\n  swap2\n  swap1\n  tag_34\n  jump\t// in\ntag_33:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"burnable-token/Discovery/ERC20.sol\":9877:9895  _balances[account] */\n  dup3\n  and\n    /* \"burnable-token/Discovery/ERC20.sol\":9877:9886  _balances */\n  0x00\n    /* \"burnable-token/Discovery/ERC20.sol\":9877:9895  _balances[account] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  dup2\n  keccak256\n    /* \"burnable-token/Discovery/ERC20.sol\":9877:9905  _balances[account] += amount */\n  dup1\n  sload\n    /* \"burnable-token/Discovery/ERC20.sol\":9899:9905  amount */\n  dup4\n  swap3\n    /* \"burnable-token/Discovery/ERC20.sol\":9877:9886  _balances */\n  swap1\n    /* \"burnable-token/Discovery/ERC20.sol\":9877:9905  _balances[account] += amount */\n  tag_35\n  swap1\n    /* \"burnable-token/Discovery/ERC20.sol\":9899:9905  amount */\n  dup5\n  swap1\n    /* \"burnable-token/Discovery/ERC20.sol\":9877:9905  _balances[account] += amount */\n  tag_34\n  jump\t// in\ntag_35:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n    /* \"burnable-token/Discovery/ERC20.sol\":9920:9957  Transfer(address(0), account, amount) */\n  mload(0x40)\n    /* \"#utility.yul\":5267:5292   */\n  dup2\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"burnable-token/Discovery/ERC20.sol\":9920:9957  Transfer(address(0), account, amount) */\n  dup4\n  and\n  swap1\n    /* \"burnable-token/Discovery/ERC20.sol\":9937:9938  0 */\n  0x00\n  swap1\n    /* \"burnable-token/Discovery/ERC20.sol\":9920:9957  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap1\n    /* \"#utility.yul\":5255:5257   */\n  0x20\n    /* \"#utility.yul\":5240:5258   */\n  add\n    /* \"burnable-token/Discovery/ERC20.sol\":9920:9957  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"burnable-token/Discovery/ERC20.sol\":9634:10023  function _mint(address account, uint256 amount) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"burnable-token/Discovery/ERC20.sol\":13018:13139  function _beforeTokenTransfer(... */\ntag_32:\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_42:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_43:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_53\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_53:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_54\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_54:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1202   */\ntag_45:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1196   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":795:796   */\n  0x00\n    /* \"#utility.yul\":820:825   */\n  dup2\n    /* \"#utility.yul\":816:818   */\n  dup2\n    /* \"#utility.yul\":809:826   */\n  mstore\n    /* \"#utility.yul\":865:869   */\n  0x20\n    /* \"#utility.yul\":861:863   */\n  dup2\n    /* \"#utility.yul\":851:870   */\n  keccak256\n    /* \"#utility.yul\":935:937   */\n  0x1f\n    /* \"#utility.yul\":923:933   */\n  dup6\n    /* \"#utility.yul\":919:938   */\n  add\n    /* \"#utility.yul\":916:917   */\n  0x05\n    /* \"#utility.yul\":912:939   */\n  shr\n    /* \"#utility.yul\":906:910   */\n  dup2\n    /* \"#utility.yul\":902:940   */\n  add\n    /* \"#utility.yul\":971:975   */\n  0x20\n    /* \"#utility.yul\":959:969   */\n  dup7\n    /* \"#utility.yul\":956:976   */\n  lt\n    /* \"#utility.yul\":953:1000   */\n  iszero\n  tag_58\n  jumpi\n  pop\n    /* \"#utility.yul\":994:998   */\n  dup1\n    /* \"#utility.yul\":953:1000   */\ntag_58:\n    /* \"#utility.yul\":1049:1051   */\n  0x1f\n    /* \"#utility.yul\":1044:1047   */\n  dup6\n    /* \"#utility.yul\":1040:1052   */\n  add\n    /* \"#utility.yul\":1037:1038   */\n  0x05\n    /* \"#utility.yul\":1033:1053   */\n  shr\n    /* \"#utility.yul\":1027:1031   */\n  dup3\n    /* \"#utility.yul\":1023:1054   */\n  add\n    /* \"#utility.yul\":1013:1054   */\n  swap2\n  pop\n    /* \"#utility.yul\":1104:1186   */\ntag_59:\n    /* \"#utility.yul\":1122:1124   */\n  dup2\n    /* \"#utility.yul\":1115:1120   */\n  dup2\n    /* \"#utility.yul\":1112:1125   */\n  lt\n    /* \"#utility.yul\":1104:1186   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":1167:1184   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":1148:1149   */\n  0x01\n    /* \"#utility.yul\":1137:1150   */\n  add\n    /* \"#utility.yul\":1104:1186   */\n  jump(tag_59)\ntag_61:\n    /* \"#utility.yul\":1108:1111   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":657:1202   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1378:2730   */\ntag_7:\n    /* \"#utility.yul\":1498:1508   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1520:1550   */\n  dup2\n  gt\n    /* \"#utility.yul\":1517:1573   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":1553:1571   */\n  tag_65\n  tag_42\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1582:1679   */\n  tag_66\n    /* \"#utility.yul\":1672:1678   */\n  dup2\n    /* \"#utility.yul\":1632:1670   */\n  tag_67\n    /* \"#utility.yul\":1664:1668   */\n  dup5\n    /* \"#utility.yul\":1658:1669   */\n  sload\n    /* \"#utility.yul\":1632:1670   */\n  tag_43\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1626:1630   */\n  dup5\n    /* \"#utility.yul\":1582:1679   */\n  tag_45\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1734:1738   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1798:1800   */\n  0x1f\n    /* \"#utility.yul\":1787:1801   */\n  dup4\n  gt\n    /* \"#utility.yul\":1815:1816   */\n  0x01\n    /* \"#utility.yul\":1810:2473   */\n  dup2\n  eq\n  tag_69\n  jumpi\n    /* \"#utility.yul\":2517:2518   */\n  0x00\n    /* \"#utility.yul\":2534:2540   */\n  dup5\n    /* \"#utility.yul\":2531:2620   */\n  iszero\n  tag_70\n  jumpi\n  pop\n    /* \"#utility.yul\":2586:2605   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2580:2606   */\n  mload\n    /* \"#utility.yul\":2531:2620   */\ntag_70:\n  not(0x00)\n    /* \"#utility.yul\":1335:1336   */\n  0x03\n    /* \"#utility.yul\":1331:1342   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1327:1351   */\n  shr\n    /* \"#utility.yul\":1323:1352   */\n  not\n    /* \"#utility.yul\":1313:1353   */\n  and\n    /* \"#utility.yul\":1359:1360   */\n  0x01\n    /* \"#utility.yul\":1355:1366   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1310:1367   */\n  or\n    /* \"#utility.yul\":2633:2714   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1780:2724   */\n  jump(tag_61)\n    /* \"#utility.yul\":1810:2473   */\ntag_69:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1846:1866   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1964:2200   */\ntag_73:\n    /* \"#utility.yul\":1978:1985   */\n  dup3\n    /* \"#utility.yul\":1975:1976   */\n  dup2\n    /* \"#utility.yul\":1972:1986   */\n  lt\n    /* \"#utility.yul\":1964:2200   */\n  iszero\n  tag_75\n  jumpi\n    /* \"#utility.yul\":2067:2086   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2061:2087   */\n  mload\n    /* \"#utility.yul\":2046:2088   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2159:2186   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2127:2128   */\n  0x01\n    /* \"#utility.yul\":2115:2129   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1994:2013   */\n  dup5\n  add\n    /* \"#utility.yul\":1964:2200   */\n  jump(tag_73)\ntag_75:\n    /* \"#utility.yul\":1968:1971   */\n  pop\n    /* \"#utility.yul\":2228:2234   */\n  dup6\n    /* \"#utility.yul\":2219:2226   */\n  dup3\n    /* \"#utility.yul\":2216:2235   */\n  lt\n    /* \"#utility.yul\":2213:2414   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":2289:2308   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2283:2309   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2372:2373   */\n  0x03\n    /* \"#utility.yul\":2368:2382   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2384:2387   */\n  0xf8\n    /* \"#utility.yul\":2364:2388   */\n  and\n    /* \"#utility.yul\":2360:2397   */\n  shr\n    /* \"#utility.yul\":2356:2398   */\n  not\n    /* \"#utility.yul\":2341:2399   */\n  and\n    /* \"#utility.yul\":2326:2400   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2213:2414   */\ntag_76:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2460:2461   */\n  0x01\n    /* \"#utility.yul\":2444:2458   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2440:2462   */\n  add\n    /* \"#utility.yul\":2427:2463   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1378:2730   */\n  jump\t// out\n    /* \"#utility.yul\":2943:3070   */\ntag_47:\n    /* \"#utility.yul\":3004:3014   */\n  0x4e487b71\n    /* \"#utility.yul\":2999:3002   */\n  0xe0\n    /* \"#utility.yul\":2995:3015   */\n  shl\n    /* \"#utility.yul\":2992:2993   */\n  0x00\n    /* \"#utility.yul\":2985:3016   */\n  mstore\n    /* \"#utility.yul\":3035:3039   */\n  0x11\n    /* \"#utility.yul\":3032:3033   */\n  0x04\n    /* \"#utility.yul\":3025:3040   */\n  mstore\n    /* \"#utility.yul\":3059:3063   */\n  0x24\n    /* \"#utility.yul\":3056:3057   */\n  0x00\n    /* \"#utility.yul\":3049:3064   */\n  revert\n    /* \"#utility.yul\":3075:3497   */\ntag_48:\n    /* \"#utility.yul\":3164:3165   */\n  0x01\n    /* \"#utility.yul\":3207:3212   */\n  dup2\n    /* \"#utility.yul\":3164:3165   */\n  dup2\n    /* \"#utility.yul\":3221:3491   */\ntag_80:\n    /* \"#utility.yul\":3242:3249   */\n  dup1\n    /* \"#utility.yul\":3232:3240   */\n  dup6\n    /* \"#utility.yul\":3229:3250   */\n  gt\n    /* \"#utility.yul\":3221:3491   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":3301:3305   */\n  dup2\n    /* \"#utility.yul\":3297:3298   */\n  0x00\n    /* \"#utility.yul\":3293:3299   */\n  not\n    /* \"#utility.yul\":3289:3306   */\n  div\n    /* \"#utility.yul\":3283:3287   */\n  dup3\n    /* \"#utility.yul\":3280:3307   */\n  gt\n    /* \"#utility.yul\":3277:3330   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":3310:3328   */\n  tag_84\n  tag_47\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3360:3367   */\n  dup1\n    /* \"#utility.yul\":3350:3358   */\n  dup6\n    /* \"#utility.yul\":3346:3368   */\n  and\n    /* \"#utility.yul\":3343:3398   */\n  iszero\n  tag_85\n  jumpi\n    /* \"#utility.yul\":3380:3396   */\n  swap2\n  dup2\n  mul\n  swap2\n    /* \"#utility.yul\":3343:3398   */\ntag_85:\n    /* \"#utility.yul\":3459:3481   */\n  swap4\n  dup5\n  shr\n  swap4\n    /* \"#utility.yul\":3419:3434   */\n  swap1\n  dup1\n  mul\n  swap1\n    /* \"#utility.yul\":3221:3491   */\n  jump(tag_80)\ntag_82:\n    /* \"#utility.yul\":3225:3228   */\n  pop\n    /* \"#utility.yul\":3075:3497   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3502:4308   */\ntag_49:\n    /* \"#utility.yul\":3551:3556   */\n  0x00\n    /* \"#utility.yul\":3581:3589   */\n  dup3\n    /* \"#utility.yul\":3571:3651   */\n  tag_87\n  jumpi\n  pop\n    /* \"#utility.yul\":3622:3623   */\n  0x01\n    /* \"#utility.yul\":3636:3641   */\n  jump(tag_86)\n    /* \"#utility.yul\":3571:3651   */\ntag_87:\n    /* \"#utility.yul\":3670:3674   */\n  dup2\n    /* \"#utility.yul\":3660:3736   */\n  tag_88\n  jumpi\n  pop\n    /* \"#utility.yul\":3707:3708   */\n  0x00\n    /* \"#utility.yul\":3721:3726   */\n  jump(tag_86)\n    /* \"#utility.yul\":3660:3736   */\ntag_88:\n    /* \"#utility.yul\":3752:3756   */\n  dup2\n    /* \"#utility.yul\":3770:3771   */\n  0x01\n    /* \"#utility.yul\":3765:3824   */\n  dup2\n  eq\n  tag_90\n  jumpi\n    /* \"#utility.yul\":3838:3839   */\n  0x02\n    /* \"#utility.yul\":3833:3963   */\n  dup2\n  eq\n  tag_91\n  jumpi\n    /* \"#utility.yul\":3745:3963   */\n  jump(tag_89)\n    /* \"#utility.yul\":3765:3824   */\ntag_90:\n    /* \"#utility.yul\":3795:3796   */\n  0x01\n    /* \"#utility.yul\":3786:3796   */\n  swap2\n  pop\n    /* \"#utility.yul\":3809:3814   */\n  pop\n  jump(tag_86)\n    /* \"#utility.yul\":3833:3963   */\ntag_91:\n    /* \"#utility.yul\":3870:3873   */\n  0xff\n    /* \"#utility.yul\":3860:3868   */\n  dup5\n    /* \"#utility.yul\":3857:3874   */\n  gt\n    /* \"#utility.yul\":3854:3897   */\n  iszero\n  tag_93\n  jumpi\n    /* \"#utility.yul\":3877:3895   */\n  tag_93\n  tag_47\n  jump\t// in\ntag_93:\n  pop\n  pop\n    /* \"#utility.yul\":3933:3934   */\n  0x01\n    /* \"#utility.yul\":3919:3935   */\n  dup3\n  shl\n    /* \"#utility.yul\":3948:3953   */\n  jump(tag_86)\n    /* \"#utility.yul\":3745:3963   */\ntag_89:\n  pop\n    /* \"#utility.yul\":4047:4049   */\n  0x20\n    /* \"#utility.yul\":4037:4045   */\n  dup4\n    /* \"#utility.yul\":4034:4050   */\n  lt\n    /* \"#utility.yul\":4028:4031   */\n  0x0133\n    /* \"#utility.yul\":4022:4026   */\n  dup4\n    /* \"#utility.yul\":4019:4032   */\n  lt\n    /* \"#utility.yul\":4015:4051   */\n  and\n    /* \"#utility.yul\":4009:4011   */\n  0x4e\n    /* \"#utility.yul\":3999:4007   */\n  dup5\n    /* \"#utility.yul\":3996:4012   */\n  lt\n    /* \"#utility.yul\":3991:3993   */\n  0x0b\n    /* \"#utility.yul\":3985:3989   */\n  dup5\n    /* \"#utility.yul\":3982:3994   */\n  lt\n    /* \"#utility.yul\":3978:4013   */\n  and\n    /* \"#utility.yul\":3975:4052   */\n  or\n    /* \"#utility.yul\":3972:4131   */\n  iszero\n  tag_94\n  jumpi\n  pop\n    /* \"#utility.yul\":4084:4103   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":4116:4121   */\n  jump(tag_86)\n    /* \"#utility.yul\":3972:4131   */\ntag_94:\n    /* \"#utility.yul\":4163:4197   */\n  tag_95\n    /* \"#utility.yul\":4188:4196   */\n  dup4\n    /* \"#utility.yul\":4182:4186   */\n  dup4\n    /* \"#utility.yul\":4163:4197   */\n  tag_48\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":4233:4239   */\n  dup1\n    /* \"#utility.yul\":4229:4230   */\n  0x00\n    /* \"#utility.yul\":4225:4231   */\n  not\n    /* \"#utility.yul\":4221:4240   */\n  div\n    /* \"#utility.yul\":4212:4219   */\n  dup3\n    /* \"#utility.yul\":4209:4241   */\n  gt\n    /* \"#utility.yul\":4206:4264   */\n  iszero\n  tag_97\n  jumpi\n    /* \"#utility.yul\":4244:4262   */\n  tag_97\n  tag_47\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4282:4302   */\n  mul\n  swap1\n  pop\n    /* \"#utility.yul\":3502:4308   */\ntag_86:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4313:4453   */\ntag_20:\n    /* \"#utility.yul\":4371:4376   */\n  0x00\n    /* \"#utility.yul\":4400:4447   */\n  tag_99\n    /* \"#utility.yul\":4441:4445   */\n  0xff\n    /* \"#utility.yul\":4431:4439   */\n  dup5\n    /* \"#utility.yul\":4427:4446   */\n  and\n    /* \"#utility.yul\":4421:4425   */\n  dup4\n    /* \"#utility.yul\":4400:4447   */\n  tag_49\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":4391:4447   */\n  swap4\n    /* \"#utility.yul\":4313:4453   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4458:4626   */\ntag_22:\n    /* \"#utility.yul\":4531:4540   */\n  dup1\n  dup3\n  mul\n    /* \"#utility.yul\":4562:4571   */\n  dup2\n  iszero\n    /* \"#utility.yul\":4579:4594   */\n  dup3\n  dup3\n  div\n    /* \"#utility.yul\":4573:4595   */\n  dup5\n  eq\n    /* \"#utility.yul\":4559:4596   */\n  or\n    /* \"#utility.yul\":4549:4620   */\n  tag_86\n  jumpi\n    /* \"#utility.yul\":4600:4618   */\n  tag_86\n  tag_47\n  jump\t// in\n    /* \"#utility.yul\":4991:5116   */\ntag_34:\n    /* \"#utility.yul\":5056:5065   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":5077:5087   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":5074:5110   */\n  iszero\n  tag_86\n  jumpi\n    /* \"#utility.yul\":5090:5108   */\n  tag_86\n  tag_47\n  jump\t// in\n    /* \"#utility.yul\":5121:5298   */\ntag_50:\n    /* \"burnable-token/Discovery/Discovery.sol\":108:309  contract DiscoveryCoin is ERC20, ERC20Burnable, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"burnable-token/Discovery/Discovery.sol\":108:309  contract DiscoveryCoin is ERC20, ERC20Burnable, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"burnable-token/Discovery/ERC20.sol\":3388:3486  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"burnable-token/Discovery/ERC20.sol\":5665:5862  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"burnable-token/Discovery/ERC20.sol\":5665:5862  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_22\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"burnable-token/Discovery/ERC20.sol\":4476:4582  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"burnable-token/Discovery/ERC20.sol\":4563:4575  _totalSupply */\n      sload(0x02)\n        /* \"burnable-token/Discovery/ERC20.sol\":4476:4582  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_30:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"burnable-token/Discovery/ERC20.sol\":4476:4582  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_22\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"burnable-token/Discovery/ERC20.sol\":6424:6710  function transferFrom(... */\n    tag_6:\n      tag_24\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n        /* \"burnable-token/Discovery/ERC20.sol\":4325:4416  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"burnable-token/Discovery/ERC20.sol\":4407:4409  18 */\n      0x12\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"burnable-token/Discovery/ERC20.sol\":4325:4416  function decimals() public view virtual override returns (uint8) {... */\n      tag_22\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"burnable-token/Discovery/ERC20.sol\":7105:7339  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_24\n      tag_44\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n        /* \"burnable-token/Discovery/ERC20Burnable.sol\":1817:1906  function burn(uint256 amount) public virtual {... */\n    tag_9:\n      tag_47\n      tag_48\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"burnable-token/Discovery/ERC20.sol\":4640:4765  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_10:\n      tag_30\n      tag_52\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_52:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"burnable-token/Discovery/ERC20.sol\":4740:4758  _balances[account] */\n      and\n        /* \"burnable-token/Discovery/ERC20.sol\":4714:4721  uint256 */\n      0x00\n        /* \"burnable-token/Discovery/ERC20.sol\":4740:4758  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"burnable-token/Discovery/ERC20.sol\":4640:4765  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"burnable-token/Discovery/Ownable.sol\":2286:2387  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_47\n      tag_57\n      jump\t// in\n        /* \"burnable-token/Discovery/ERC20Burnable.sol\":2212:2373  function burnFrom(address account, uint256 amount) public virtual {... */\n    tag_12:\n      tag_47\n      tag_59\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n        /* \"burnable-token/Discovery/Ownable.sol\":1631:1716  function owner() public view virtual returns (address) {... */\n    tag_13:\n        /* \"burnable-token/Discovery/Ownable.sol\":1703:1709  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"burnable-token/Discovery/Ownable.sol\":1631:1716  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n        /* \"burnable-token/Discovery/ERC20.sol\":3599:3701  function symbol() public view virtual override returns (string memory) {... */\n    tag_14:\n      tag_20\n      tag_66\n      jump\t// in\n        /* \"burnable-token/Discovery/ERC20.sol\":7826:8253  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_15:\n      tag_24\n      tag_69\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n        /* \"burnable-token/Discovery/ERC20.sol\":4961:5150  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_16:\n      tag_24\n      tag_73\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n        /* \"burnable-token/Discovery/ERC20.sol\":5208:5357  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_17:\n      tag_30\n      tag_77\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n        /* \"burnable-token/Discovery/Ownable.sol\":2536:2751  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n      tag_47\n      tag_82\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n        /* \"burnable-token/Discovery/ERC20.sol\":3388:3486  function name() public view virtual override returns (string memory) {... */\n    tag_21:\n        /* \"burnable-token/Discovery/ERC20.sol\":3442:3455  string memory */\n      0x60\n        /* \"burnable-token/Discovery/ERC20.sol\":3474:3479  _name */\n      0x03\n        /* \"burnable-token/Discovery/ERC20.sol\":3467:3479  return _name */\n      dup1\n      sload\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_87\n      swap1\n      tag_86\n      jump\t// in\n    tag_87:\n      dup1\n      iszero\n      tag_88\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_89\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_88)\n    tag_89:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_90:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_90\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_88:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"burnable-token/Discovery/ERC20.sol\":3388:3486  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"burnable-token/Discovery/ERC20.sol\":5665:5862  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_27:\n        /* \"burnable-token/Discovery/ERC20.sol\":5748:5752  bool */\n      0x00\n        /* \"burnable-token/Discovery/Context.sol\":1972:1982  msg.sender */\n      caller\n        /* \"burnable-token/Discovery/ERC20.sol\":5802:5834  _approve(owner, spender, amount) */\n      tag_94\n        /* \"burnable-token/Discovery/Context.sol\":1972:1982  msg.sender */\n      dup2\n        /* \"burnable-token/Discovery/ERC20.sol\":5818:5825  spender */\n      dup6\n        /* \"burnable-token/Discovery/ERC20.sol\":5827:5833  amount */\n      dup6\n        /* \"burnable-token/Discovery/ERC20.sol\":5802:5810  _approve */\n      tag_95\n        /* \"burnable-token/Discovery/ERC20.sol\":5802:5834  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_94:\n        /* \"burnable-token/Discovery/ERC20.sol\":5851:5855  true */\n      0x01\n        /* \"burnable-token/Discovery/ERC20.sol\":5844:5855  return true */\n      swap2\n      pop\n      pop\n        /* \"burnable-token/Discovery/ERC20.sol\":5665:5862  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_91:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"burnable-token/Discovery/ERC20.sol\":6424:6710  function transferFrom(... */\n    tag_37:\n        /* \"burnable-token/Discovery/ERC20.sol\":6551:6555  bool */\n      0x00\n        /* \"burnable-token/Discovery/Context.sol\":1972:1982  msg.sender */\n      caller\n        /* \"burnable-token/Discovery/ERC20.sol\":6607:6645  _spendAllowance(from, spender, amount) */\n      tag_99\n        /* \"burnable-token/Discovery/ERC20.sol\":6623:6627  from */\n      dup6\n        /* \"burnable-token/Discovery/Context.sol\":1972:1982  msg.sender */\n      dup3\n        /* \"burnable-token/Discovery/ERC20.sol\":6638:6644  amount */\n      dup6\n        /* \"burnable-token/Discovery/ERC20.sol\":6607:6622  _spendAllowance */\n      tag_100\n        /* \"burnable-token/Discovery/ERC20.sol\":6607:6645  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_99:\n        /* \"burnable-token/Discovery/ERC20.sol\":6655:6682  _transfer(from, to, amount) */\n      tag_101\n        /* \"burnable-token/Discovery/ERC20.sol\":6665:6669  from */\n      dup6\n        /* \"burnable-token/Discovery/ERC20.sol\":6671:6673  to */\n      dup6\n        /* \"burnable-token/Discovery/ERC20.sol\":6675:6681  amount */\n      dup6\n        /* \"burnable-token/Discovery/ERC20.sol\":6655:6664  _transfer */\n      tag_102\n        /* \"burnable-token/Discovery/ERC20.sol\":6655:6682  _transfer(from, to, amount) */\n      jump\t// in\n    tag_101:\n      pop\n        /* \"burnable-token/Discovery/ERC20.sol\":6699:6703  true */\n      0x01\n      swap5\n        /* \"burnable-token/Discovery/ERC20.sol\":6424:6710  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"burnable-token/Discovery/ERC20.sol\":7105:7339  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_45:\n        /* \"burnable-token/Discovery/ERC20.sol\":7193:7197  bool */\n      0x00\n        /* \"burnable-token/Discovery/Context.sol\":1972:1982  msg.sender */\n      caller\n        /* \"burnable-token/Discovery/ERC20.sol\":7247:7311  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_94\n        /* \"burnable-token/Discovery/Context.sol\":1972:1982  msg.sender */\n      dup2\n        /* \"burnable-token/Discovery/ERC20.sol\":7263:7270  spender */\n      dup6\n        /* \"burnable-token/Discovery/ERC20.sol\":7300:7310  addedValue */\n      dup6\n        /* \"burnable-token/Discovery/ERC20.sol\":7272:7297  allowance(owner, spender) */\n      tag_107\n        /* \"burnable-token/Discovery/Context.sol\":1972:1982  msg.sender */\n      dup4\n        /* \"burnable-token/Discovery/ERC20.sol\":7263:7270  spender */\n      dup4\n        /* \"burnable-token/Discovery/ERC20.sol\":7272:7281  allowance */\n      tag_79\n        /* \"burnable-token/Discovery/ERC20.sol\":7272:7297  allowance(owner, spender) */\n      jump\t// in\n    tag_107:\n        /* \"burnable-token/Discovery/ERC20.sol\":7272:7310  allowance(owner, spender) + addedValue */\n      tag_108\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n        /* \"burnable-token/Discovery/ERC20.sol\":7247:7255  _approve */\n      tag_95\n        /* \"burnable-token/Discovery/ERC20.sol\":7247:7311  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"burnable-token/Discovery/ERC20Burnable.sol\":1817:1906  function burn(uint256 amount) public virtual {... */\n    tag_50:\n        /* \"burnable-token/Discovery/ERC20Burnable.sol\":1872:1899  _burn(_msgSender(), amount) */\n      tag_111\n        /* \"burnable-token/Discovery/Context.sol\":1972:1982  msg.sender */\n      caller\n        /* \"burnable-token/Discovery/ERC20Burnable.sol\":1892:1898  amount */\n      dup3\n        /* \"burnable-token/Discovery/ERC20Burnable.sol\":1872:1877  _burn */\n      tag_113\n        /* \"burnable-token/Discovery/ERC20Burnable.sol\":1872:1899  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_111:\n        /* \"burnable-token/Discovery/ERC20Burnable.sol\":1817:1906  function burn(uint256 amount) public virtual {... */\n      pop\n      jump\t// out\n        /* \"burnable-token/Discovery/Ownable.sol\":2286:2387  function renounceOwnership() public virtual onlyOwner {... */\n    tag_57:\n        /* \"burnable-token/Discovery/Ownable.sol\":1524:1537  _checkOwner() */\n      tag_116\n        /* \"burnable-token/Discovery/Ownable.sol\":1524:1535  _checkOwner */\n      tag_117\n        /* \"burnable-token/Discovery/Ownable.sol\":1524:1537  _checkOwner() */\n      jump\t// in\n    tag_116:\n        /* \"burnable-token/Discovery/Ownable.sol\":2350:2380  _transferOwnership(address(0)) */\n      tag_119\n        /* \"burnable-token/Discovery/Ownable.sol\":2377:2378  0 */\n      0x00\n        /* \"burnable-token/Discovery/Ownable.sol\":2350:2368  _transferOwnership */\n      tag_120\n        /* \"burnable-token/Discovery/Ownable.sol\":2350:2380  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_119:\n        /* \"burnable-token/Discovery/Ownable.sol\":2286:2387  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"burnable-token/Discovery/ERC20Burnable.sol\":2212:2373  function burnFrom(address account, uint256 amount) public virtual {... */\n    tag_60:\n        /* \"burnable-token/Discovery/ERC20Burnable.sol\":2288:2334  _spendAllowance(account, _msgSender(), amount) */\n      tag_122\n        /* \"burnable-token/Discovery/ERC20Burnable.sol\":2304:2311  account */\n      dup3\n        /* \"burnable-token/Discovery/Context.sol\":1972:1982  msg.sender */\n      caller\n        /* \"burnable-token/Discovery/ERC20Burnable.sol\":2327:2333  amount */\n      dup4\n        /* \"burnable-token/Discovery/ERC20Burnable.sol\":2288:2303  _spendAllowance */\n      tag_100\n        /* \"burnable-token/Discovery/ERC20Burnable.sol\":2288:2334  _spendAllowance(account, _msgSender(), amount) */\n      jump\t// in\n    tag_122:\n        /* \"burnable-token/Discovery/ERC20Burnable.sol\":2344:2366  _burn(account, amount) */\n      tag_124\n        /* \"burnable-token/Discovery/ERC20Burnable.sol\":2350:2357  account */\n      dup3\n        /* \"burnable-token/Discovery/ERC20Burnable.sol\":2359:2365  amount */\n      dup3\n        /* \"burnable-token/Discovery/ERC20Burnable.sol\":2344:2349  _burn */\n      tag_113\n        /* \"burnable-token/Discovery/ERC20Burnable.sol\":2344:2366  _burn(account, amount) */\n      jump\t// in\n    tag_124:\n        /* \"burnable-token/Discovery/ERC20Burnable.sol\":2212:2373  function burnFrom(address account, uint256 amount) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"burnable-token/Discovery/ERC20.sol\":3599:3701  function symbol() public view virtual override returns (string memory) {... */\n    tag_66:\n        /* \"burnable-token/Discovery/ERC20.sol\":3655:3668  string memory */\n      0x60\n        /* \"burnable-token/Discovery/ERC20.sol\":3687:3694  _symbol */\n      0x04\n        /* \"burnable-token/Discovery/ERC20.sol\":3680:3694  return _symbol */\n      dup1\n      sload\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n        /* \"burnable-token/Discovery/ERC20.sol\":7826:8253  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_70:\n        /* \"burnable-token/Discovery/ERC20.sol\":7919:7923  bool */\n      0x00\n        /* \"burnable-token/Discovery/Context.sol\":1972:1982  msg.sender */\n      caller\n        /* \"burnable-token/Discovery/ERC20.sol\":7919:7923  bool */\n      dup2\n        /* \"burnable-token/Discovery/ERC20.sol\":8000:8025  allowance(owner, spender) */\n      tag_134\n        /* \"burnable-token/Discovery/Context.sol\":1972:1982  msg.sender */\n      dup3\n        /* \"burnable-token/Discovery/ERC20.sol\":8017:8024  spender */\n      dup7\n        /* \"burnable-token/Discovery/ERC20.sol\":8000:8009  allowance */\n      tag_79\n        /* \"burnable-token/Discovery/ERC20.sol\":8000:8025  allowance(owner, spender) */\n      jump\t// in\n    tag_134:\n        /* \"burnable-token/Discovery/ERC20.sol\":7973:8025  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"burnable-token/Discovery/ERC20.sol\":8063:8078  subtractedValue */\n      dup4\n        /* \"burnable-token/Discovery/ERC20.sol\":8043:8059  currentAllowance */\n      dup2\n        /* \"burnable-token/Discovery/ERC20.sol\":8043:8078  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"burnable-token/Discovery/ERC20.sol\":8035:8120  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3598:3600   */\n      0x20\n        /* \"burnable-token/Discovery/ERC20.sol\":8035:8120  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3580:3601   */\n      mstore\n        /* \"#utility.yul\":3637:3639   */\n      0x25\n        /* \"#utility.yul\":3617:3635   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3610:3640   */\n      mstore\n        /* \"#utility.yul\":3676:3710   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3656:3674   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3649:3711   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3727:3745   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3720:3755   */\n      mstore\n        /* \"#utility.yul\":3772:3791   */\n      0x84\n      add\n        /* \"burnable-token/Discovery/ERC20.sol\":8035:8120  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"burnable-token/Discovery/ERC20.sol\":8154:8214  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_101\n        /* \"burnable-token/Discovery/ERC20.sol\":8163:8168  owner */\n      dup3\n        /* \"burnable-token/Discovery/ERC20.sol\":8170:8177  spender */\n      dup7\n        /* \"burnable-token/Discovery/ERC20.sol\":8198:8213  subtractedValue */\n      dup7\n        /* \"burnable-token/Discovery/ERC20.sol\":8179:8195  currentAllowance */\n      dup5\n        /* \"burnable-token/Discovery/ERC20.sol\":8179:8213  currentAllowance - subtractedValue */\n      sub\n        /* \"burnable-token/Discovery/ERC20.sol\":8154:8162  _approve */\n      tag_95\n        /* \"burnable-token/Discovery/ERC20.sol\":8154:8214  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"burnable-token/Discovery/ERC20.sol\":4961:5150  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_74:\n        /* \"burnable-token/Discovery/ERC20.sol\":5040:5044  bool */\n      0x00\n        /* \"burnable-token/Discovery/Context.sol\":1972:1982  msg.sender */\n      caller\n        /* \"burnable-token/Discovery/ERC20.sol\":5094:5122  _transfer(owner, to, amount) */\n      tag_94\n        /* \"burnable-token/Discovery/Context.sol\":1972:1982  msg.sender */\n      dup2\n        /* \"burnable-token/Discovery/ERC20.sol\":5111:5113  to */\n      dup6\n        /* \"burnable-token/Discovery/ERC20.sol\":5115:5121  amount */\n      dup6\n        /* \"burnable-token/Discovery/ERC20.sol\":5094:5103  _transfer */\n      tag_102\n        /* \"burnable-token/Discovery/ERC20.sol\":5094:5122  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"burnable-token/Discovery/ERC20.sol\":5208:5357  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_79:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"burnable-token/Discovery/ERC20.sol\":5323:5341  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"burnable-token/Discovery/ERC20.sol\":5297:5304  uint256 */\n      0x00\n        /* \"burnable-token/Discovery/ERC20.sol\":5323:5341  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"burnable-token/Discovery/ERC20.sol\":5323:5334  _allowances */\n      0x01\n        /* \"burnable-token/Discovery/ERC20.sol\":5323:5341  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"burnable-token/Discovery/ERC20.sol\":5323:5350  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"burnable-token/Discovery/ERC20.sol\":5208:5357  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"burnable-token/Discovery/Ownable.sol\":2536:2751  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_83:\n        /* \"burnable-token/Discovery/Ownable.sol\":1524:1537  _checkOwner() */\n      tag_144\n        /* \"burnable-token/Discovery/Ownable.sol\":1524:1535  _checkOwner */\n      tag_117\n        /* \"burnable-token/Discovery/Ownable.sol\":1524:1537  _checkOwner() */\n      jump\t// in\n    tag_144:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"burnable-token/Discovery/Ownable.sol\":2620:2642  newOwner == address(0) */\n      dup2\n      and\n        /* \"burnable-token/Discovery/Ownable.sol\":2616:2707  if (newOwner == address(0)) {... */\n      tag_146\n      jumpi\n        /* \"burnable-token/Discovery/Ownable.sol\":2693:2694  0 */\n      0x00\n        /* \"burnable-token/Discovery/Ownable.sol\":2665:2696  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n        /* \"burnable-token/Discovery/Ownable.sol\":2616:2707  if (newOwner == address(0)) {... */\n    tag_146:\n        /* \"burnable-token/Discovery/Ownable.sol\":2716:2744  _transferOwnership(newOwner) */\n      tag_111\n        /* \"burnable-token/Discovery/Ownable.sol\":2735:2743  newOwner */\n      dup2\n        /* \"burnable-token/Discovery/Ownable.sol\":2716:2734  _transferOwnership */\n      tag_120\n        /* \"burnable-token/Discovery/Ownable.sol\":2716:2744  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"burnable-token/Discovery/ERC20.sol\":11342:11712  function _approve(... */\n    tag_95:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"burnable-token/Discovery/ERC20.sol\":11473:11492  owner != address(0) */\n      dup4\n      and\n        /* \"burnable-token/Discovery/ERC20.sol\":11465:11533  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4004:4006   */\n      0x20\n        /* \"burnable-token/Discovery/ERC20.sol\":11465:11533  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3986:4007   */\n      mstore\n        /* \"#utility.yul\":4043:4045   */\n      0x24\n        /* \"#utility.yul\":4023:4041   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4016:4046   */\n      mstore\n        /* \"#utility.yul\":4082:4116   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4062:4080   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4055:4117   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":4133:4151   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4126:4160   */\n      mstore\n        /* \"#utility.yul\":4177:4196   */\n      0x84\n      add\n        /* \"burnable-token/Discovery/ERC20.sol\":11465:11533  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_136\n        /* \"#utility.yul\":3802:4202   */\n      jump\n        /* \"burnable-token/Discovery/ERC20.sol\":11465:11533  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_151:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"burnable-token/Discovery/ERC20.sol\":11551:11572  spender != address(0) */\n      dup3\n      and\n        /* \"burnable-token/Discovery/ERC20.sol\":11543:11611  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_154\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4409:4411   */\n      0x20\n        /* \"burnable-token/Discovery/ERC20.sol\":11543:11611  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4391:4412   */\n      mstore\n        /* \"#utility.yul\":4448:4450   */\n      0x22\n        /* \"#utility.yul\":4428:4446   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4421:4451   */\n      mstore\n        /* \"#utility.yul\":4487:4521   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4467:4485   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4460:4522   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4538:4556   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4531:4563   */\n      mstore\n        /* \"#utility.yul\":4580:4599   */\n      0x84\n      add\n        /* \"burnable-token/Discovery/ERC20.sol\":11543:11611  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_136\n        /* \"#utility.yul\":4207:4605   */\n      jump\n        /* \"burnable-token/Discovery/ERC20.sol\":11543:11611  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_154:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"burnable-token/Discovery/ERC20.sol\":11622:11640  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"burnable-token/Discovery/ERC20.sol\":11622:11633  _allowances */\n      0x01\n        /* \"burnable-token/Discovery/ERC20.sol\":11622:11640  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"burnable-token/Discovery/ERC20.sol\":11622:11649  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"burnable-token/Discovery/ERC20.sol\":11622:11658  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"burnable-token/Discovery/ERC20.sol\":11673:11705  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"burnable-token/Discovery/ERC20.sol\":11673:11705  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"burnable-token/Discovery/ERC20.sol\":11673:11705  Approval(owner, spender, amount) */\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"burnable-token/Discovery/ERC20.sol\":11342:11712  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"burnable-token/Discovery/ERC20.sol\":11993:12434  function _spendAllowance(... */\n    tag_100:\n        /* \"burnable-token/Discovery/ERC20.sol\":12123:12147  uint256 currentAllowance */\n      0x00\n        /* \"burnable-token/Discovery/ERC20.sol\":12150:12175  allowance(owner, spender) */\n      tag_159\n        /* \"burnable-token/Discovery/ERC20.sol\":12160:12165  owner */\n      dup5\n        /* \"burnable-token/Discovery/ERC20.sol\":12167:12174  spender */\n      dup5\n        /* \"burnable-token/Discovery/ERC20.sol\":12150:12159  allowance */\n      tag_79\n        /* \"burnable-token/Discovery/ERC20.sol\":12150:12175  allowance(owner, spender) */\n      jump\t// in\n    tag_159:\n        /* \"burnable-token/Discovery/ERC20.sol\":12123:12175  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"burnable-token/Discovery/ERC20.sol\":12189:12205  currentAllowance */\n      dup2\n        /* \"burnable-token/Discovery/ERC20.sol\":12189:12226  currentAllowance != type(uint256).max */\n      eq\n        /* \"burnable-token/Discovery/ERC20.sol\":12185:12428  if (currentAllowance != type(uint256).max) {... */\n      tag_164\n      jumpi\n        /* \"burnable-token/Discovery/ERC20.sol\":12270:12276  amount */\n      dup2\n        /* \"burnable-token/Discovery/ERC20.sol\":12250:12266  currentAllowance */\n      dup2\n        /* \"burnable-token/Discovery/ERC20.sol\":12250:12276  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"burnable-token/Discovery/ERC20.sol\":12242:12310  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4812:4814   */\n      0x20\n        /* \"burnable-token/Discovery/ERC20.sol\":12242:12310  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4794:4815   */\n      mstore\n        /* \"#utility.yul\":4851:4853   */\n      0x1d\n        /* \"#utility.yul\":4831:4849   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4824:4854   */\n      mstore\n        /* \"#utility.yul\":4890:4921   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4870:4888   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4863:4922   */\n      mstore\n        /* \"#utility.yul\":4939:4957   */\n      0x64\n      add\n        /* \"burnable-token/Discovery/ERC20.sol\":12242:12310  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_136\n        /* \"#utility.yul\":4610:4963   */\n      jump\n        /* \"burnable-token/Discovery/ERC20.sol\":12242:12310  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_161:\n        /* \"burnable-token/Discovery/ERC20.sol\":12352:12403  _approve(owner, spender, currentAllowance - amount) */\n      tag_164\n        /* \"burnable-token/Discovery/ERC20.sol\":12361:12366  owner */\n      dup5\n        /* \"burnable-token/Discovery/ERC20.sol\":12368:12375  spender */\n      dup5\n        /* \"burnable-token/Discovery/ERC20.sol\":12396:12402  amount */\n      dup5\n        /* \"burnable-token/Discovery/ERC20.sol\":12377:12393  currentAllowance */\n      dup5\n        /* \"burnable-token/Discovery/ERC20.sol\":12377:12402  currentAllowance - amount */\n      sub\n        /* \"burnable-token/Discovery/ERC20.sol\":12352:12360  _approve */\n      tag_95\n        /* \"burnable-token/Discovery/ERC20.sol\":12352:12403  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_164:\n        /* \"burnable-token/Discovery/ERC20.sol\":12113:12434  {... */\n      pop\n        /* \"burnable-token/Discovery/ERC20.sol\":11993:12434  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"burnable-token/Discovery/ERC20.sol\":8707:9358  function _transfer(... */\n    tag_102:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"burnable-token/Discovery/ERC20.sol\":8833:8851  from != address(0) */\n      dup4\n      and\n        /* \"burnable-token/Discovery/ERC20.sol\":8825:8893  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5170:5172   */\n      0x20\n        /* \"burnable-token/Discovery/ERC20.sol\":8825:8893  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5152:5173   */\n      mstore\n        /* \"#utility.yul\":5209:5211   */\n      0x25\n        /* \"#utility.yul\":5189:5207   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5182:5212   */\n      mstore\n        /* \"#utility.yul\":5248:5282   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":5228:5246   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5221:5283   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":5299:5317   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5292:5327   */\n      mstore\n        /* \"#utility.yul\":5344:5363   */\n      0x84\n      add\n        /* \"burnable-token/Discovery/ERC20.sol\":8825:8893  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_136\n        /* \"#utility.yul\":4968:5369   */\n      jump\n        /* \"burnable-token/Discovery/ERC20.sol\":8825:8893  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_166:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"burnable-token/Discovery/ERC20.sol\":8911:8927  to != address(0) */\n      dup3\n      and\n        /* \"burnable-token/Discovery/ERC20.sol\":8903:8967  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5576:5578   */\n      0x20\n        /* \"burnable-token/Discovery/ERC20.sol\":8903:8967  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5558:5579   */\n      mstore\n        /* \"#utility.yul\":5615:5617   */\n      0x23\n        /* \"#utility.yul\":5595:5613   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5588:5618   */\n      mstore\n        /* \"#utility.yul\":5654:5688   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5634:5652   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5627:5689   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5705:5723   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5698:5731   */\n      mstore\n        /* \"#utility.yul\":5748:5767   */\n      0x84\n      add\n        /* \"burnable-token/Discovery/ERC20.sol\":8903:8967  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_136\n        /* \"#utility.yul\":5374:5773   */\n      jump\n        /* \"burnable-token/Discovery/ERC20.sol\":8903:8967  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_169:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"burnable-token/Discovery/ERC20.sol\":9049:9064  _balances[from] */\n      dup4\n      and\n        /* \"burnable-token/Discovery/ERC20.sol\":9027:9046  uint256 fromBalance */\n      0x00\n        /* \"burnable-token/Discovery/ERC20.sol\":9049:9064  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"burnable-token/Discovery/ERC20.sol\":9082:9103  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"burnable-token/Discovery/ERC20.sol\":9074:9146  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5980:5982   */\n      0x20\n        /* \"burnable-token/Discovery/ERC20.sol\":9074:9146  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5962:5983   */\n      mstore\n        /* \"#utility.yul\":6019:6021   */\n      0x26\n        /* \"#utility.yul\":5999:6017   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5992:6022   */\n      mstore\n        /* \"#utility.yul\":6058:6092   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":6038:6056   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6031:6093   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":6109:6127   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6102:6138   */\n      mstore\n        /* \"#utility.yul\":6155:6174   */\n      0x84\n      add\n        /* \"burnable-token/Discovery/ERC20.sol\":9074:9146  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_136\n        /* \"#utility.yul\":5778:6180   */\n      jump\n        /* \"burnable-token/Discovery/ERC20.sol\":9074:9146  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_174:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"burnable-token/Discovery/ERC20.sol\":9180:9195  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"burnable-token/Discovery/ERC20.sol\":9180:9189  _balances */\n      0x00\n        /* \"burnable-token/Discovery/ERC20.sol\":9180:9195  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"burnable-token/Discovery/ERC20.sol\":9198:9218  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"burnable-token/Discovery/ERC20.sol\":9180:9218  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"burnable-token/Discovery/ERC20.sol\":9238:9251  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"burnable-token/Discovery/ERC20.sol\":9238:9261  _balances[to] += amount */\n      dup1\n      sload\n        /* \"burnable-token/Discovery/ERC20.sol\":9212:9218  amount */\n      dup5\n      swap3\n        /* \"burnable-token/Discovery/ERC20.sol\":9180:9189  _balances */\n      swap1\n        /* \"burnable-token/Discovery/ERC20.sol\":9238:9261  _balances[to] += amount */\n      tag_177\n      swap1\n        /* \"burnable-token/Discovery/ERC20.sol\":9212:9218  amount */\n      dup5\n      swap1\n        /* \"burnable-token/Discovery/ERC20.sol\":9238:9261  _balances[to] += amount */\n      tag_109\n      jump\t// in\n    tag_177:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"burnable-token/Discovery/ERC20.sol\":9292:9294  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"burnable-token/Discovery/ERC20.sol\":9277:9303  Transfer(from, to, amount) */\n      and\n        /* \"burnable-token/Discovery/ERC20.sol\":9286:9290  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"burnable-token/Discovery/ERC20.sol\":9277:9303  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"burnable-token/Discovery/ERC20.sol\":9296:9302  amount */\n      dup5\n        /* \"burnable-token/Discovery/ERC20.sol\":9277:9303  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_178\n      swap2\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"burnable-token/Discovery/ERC20.sol\":9277:9303  Transfer(from, to, amount) */\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"burnable-token/Discovery/ERC20.sol\":9314:9351  _afterTokenTransfer(from, to, amount) */\n      tag_164\n        /* \"burnable-token/Discovery/ERC20.sol\":10343:10919  function _burn(address account, uint256 amount) internal virtual {... */\n      jump\n    tag_113:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"burnable-token/Discovery/ERC20.sol\":10426:10447  account != address(0) */\n      dup3\n      and\n        /* \"burnable-token/Discovery/ERC20.sol\":10418:10485  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6387:6389   */\n      0x20\n        /* \"burnable-token/Discovery/ERC20.sol\":10418:10485  require(account != address(0), \"ERC20: burn from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6369:6390   */\n      mstore\n        /* \"#utility.yul\":6426:6428   */\n      0x21\n        /* \"#utility.yul\":6406:6424   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6399:6429   */\n      mstore\n        /* \"#utility.yul\":6465:6499   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":6445:6463   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6438:6500   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":6516:6534   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6509:6540   */\n      mstore\n        /* \"#utility.yul\":6557:6576   */\n      0x84\n      add\n        /* \"burnable-token/Discovery/ERC20.sol\":10418:10485  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_136\n        /* \"#utility.yul\":6185:6582   */\n      jump\n        /* \"burnable-token/Discovery/ERC20.sol\":10418:10485  require(account != address(0), \"ERC20: burn from the zero address\") */\n    tag_182:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"burnable-token/Discovery/ERC20.sol\":10581:10599  _balances[account] */\n      dup3\n      and\n        /* \"burnable-token/Discovery/ERC20.sol\":10556:10578  uint256 accountBalance */\n      0x00\n        /* \"burnable-token/Discovery/ERC20.sol\":10581:10599  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"burnable-token/Discovery/ERC20.sol\":10617:10641  accountBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"burnable-token/Discovery/ERC20.sol\":10609:10680  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6789:6791   */\n      0x20\n        /* \"burnable-token/Discovery/ERC20.sol\":10609:10680  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6771:6792   */\n      mstore\n        /* \"#utility.yul\":6828:6830   */\n      0x22\n        /* \"#utility.yul\":6808:6826   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6801:6831   */\n      mstore\n        /* \"#utility.yul\":6867:6901   */\n      0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e\n        /* \"#utility.yul\":6847:6865   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6840:6902   */\n      mstore\n      shl(0xf0, 0x6365)\n        /* \"#utility.yul\":6918:6936   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6911:6943   */\n      mstore\n        /* \"#utility.yul\":6960:6979   */\n      0x84\n      add\n        /* \"burnable-token/Discovery/ERC20.sol\":10609:10680  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_136\n        /* \"#utility.yul\":6587:6985   */\n      jump\n        /* \"burnable-token/Discovery/ERC20.sol\":10609:10680  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n    tag_186:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"burnable-token/Discovery/ERC20.sol\":10714:10732  _balances[account] */\n      dup4\n      and\n        /* \"burnable-token/Discovery/ERC20.sol\":10714:10723  _balances */\n      0x00\n        /* \"burnable-token/Discovery/ERC20.sol\":10714:10732  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"burnable-token/Discovery/ERC20.sol\":10735:10758  accountBalance - amount */\n      dup4\n      dup4\n      sub\n        /* \"burnable-token/Discovery/ERC20.sol\":10714:10758  _balances[account] = accountBalance - amount */\n      swap1\n      sstore\n        /* \"burnable-token/Discovery/ERC20.sol\":10778:10790  _totalSupply */\n      0x02\n        /* \"burnable-token/Discovery/ERC20.sol\":10778:10800  _totalSupply -= amount */\n      dup1\n      sload\n        /* \"burnable-token/Discovery/ERC20.sol\":10752:10758  amount */\n      dup5\n      swap3\n        /* \"burnable-token/Discovery/ERC20.sol\":10714:10723  _balances */\n      swap1\n        /* \"burnable-token/Discovery/ERC20.sol\":10778:10800  _totalSupply -= amount */\n      tag_189\n      swap1\n        /* \"burnable-token/Discovery/ERC20.sol\":10752:10758  amount */\n      dup5\n      swap1\n        /* \"burnable-token/Discovery/ERC20.sol\":10778:10800  _totalSupply -= amount */\n      tag_190\n      jump\t// in\n    tag_189:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"burnable-token/Discovery/ERC20.sol\":10816:10853  Transfer(account, address(0), amount) */\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      dup3\n      dup2\n      mstore\n        /* \"burnable-token/Discovery/ERC20.sol\":10842:10843  0 */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"burnable-token/Discovery/ERC20.sol\":10816:10853  Transfer(account, address(0), amount) */\n      dup6\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"burnable-token/Discovery/ERC20.sol\":10816:10853  Transfer(account, address(0), amount) */\n      tag_157\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"burnable-token/Discovery/Ownable.sol\":1789:1951  function _checkOwner() internal view virtual {... */\n    tag_117:\n        /* \"burnable-token/Discovery/Ownable.sol\":1703:1709  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"burnable-token/Discovery/Context.sol\":1972:1982  msg.sender */\n      caller\n        /* \"burnable-token/Discovery/Ownable.sol\":1848:1871  owner() != _msgSender() */\n      eq\n        /* \"burnable-token/Discovery/Ownable.sol\":1844:1945  if (owner() != _msgSender()) {... */\n      tag_119\n      jumpi\n        /* \"burnable-token/Discovery/Context.sol\":1972:1982  msg.sender */\n      caller\n        /* \"burnable-token/Discovery/Ownable.sol\":1894:1934  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n        /* \"burnable-token/Discovery/Ownable.sol\":2905:3092  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_120:\n        /* \"burnable-token/Discovery/Ownable.sol\":2997:3003  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"burnable-token/Discovery/Ownable.sol\":3013:3030  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"burnable-token/Discovery/Ownable.sol\":3045:3085  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"burnable-token/Discovery/Ownable.sol\":2997:3003  _owner */\n      swap2\n      and\n      swap2\n        /* \"burnable-token/Discovery/Ownable.sol\":3013:3030  _owner = newOwner */\n      swap1\n        /* \"burnable-token/Discovery/Ownable.sol\":2997:3003  _owner */\n      dup3\n      swap1\n        /* \"burnable-token/Discovery/Ownable.sol\":3045:3085  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"burnable-token/Discovery/Ownable.sol\":2978:2994  address oldOwner */\n      0x00\n      swap1\n        /* \"burnable-token/Discovery/Ownable.sol\":3045:3085  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"burnable-token/Discovery/Ownable.sol\":2968:3092  {... */\n      pop\n        /* \"burnable-token/Discovery/Ownable.sol\":2905:3092  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:562   */\n    tag_23:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_206:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_208\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_206)\n    tag_208:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_202:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_210\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_210:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_26:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_212\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_212:\n        /* \"#utility.yul\":913:942   */\n      tag_213\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_202\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_36:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_217\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_217:\n        /* \"#utility.yul\":1563:1592   */\n      tag_218\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_202\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_219\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_202\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2080   */\n    tag_49:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_222\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_222:\n      pop\n        /* \"#utility.yul\":2051:2074   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1900:2080   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2085:2271   */\n    tag_53:\n        /* \"#utility.yul\":2144:2150   */\n      0x00\n        /* \"#utility.yul\":2197:2199   */\n      0x20\n        /* \"#utility.yul\":2185:2194   */\n      dup3\n        /* \"#utility.yul\":2176:2183   */\n      dup5\n        /* \"#utility.yul\":2172:2195   */\n      sub\n        /* \"#utility.yul\":2168:2200   */\n      slt\n        /* \"#utility.yul\":2165:2217   */\n      iszero\n      tag_224\n      jumpi\n        /* \"#utility.yul\":2213:2214   */\n      0x00\n        /* \"#utility.yul\":2210:2211   */\n      dup1\n        /* \"#utility.yul\":2203:2215   */\n      revert\n        /* \"#utility.yul\":2165:2217   */\n    tag_224:\n        /* \"#utility.yul\":2236:2265   */\n      tag_225\n        /* \"#utility.yul\":2255:2264   */\n      dup3\n        /* \"#utility.yul\":2236:2265   */\n      tag_202\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":2226:2265   */\n      swap4\n        /* \"#utility.yul\":2085:2271   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2276:2479   */\n    tag_64:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2440:2472   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2422:2473   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2410:2412   */\n      0x20\n        /* \"#utility.yul\":2395:2413   */\n      add\n      swap1\n        /* \"#utility.yul\":2276:2479   */\n      jump\t// out\n        /* \"#utility.yul\":2484:2744   */\n    tag_78:\n        /* \"#utility.yul\":2552:2558   */\n      0x00\n        /* \"#utility.yul\":2560:2566   */\n      dup1\n        /* \"#utility.yul\":2613:2615   */\n      0x40\n        /* \"#utility.yul\":2601:2610   */\n      dup4\n        /* \"#utility.yul\":2592:2599   */\n      dup6\n        /* \"#utility.yul\":2588:2611   */\n      sub\n        /* \"#utility.yul\":2584:2616   */\n      slt\n        /* \"#utility.yul\":2581:2633   */\n      iszero\n      tag_228\n      jumpi\n        /* \"#utility.yul\":2629:2630   */\n      0x00\n        /* \"#utility.yul\":2626:2627   */\n      dup1\n        /* \"#utility.yul\":2619:2631   */\n      revert\n        /* \"#utility.yul\":2581:2633   */\n    tag_228:\n        /* \"#utility.yul\":2652:2681   */\n      tag_229\n        /* \"#utility.yul\":2671:2680   */\n      dup4\n        /* \"#utility.yul\":2652:2681   */\n      tag_202\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":2642:2681   */\n      swap2\n      pop\n        /* \"#utility.yul\":2700:2738   */\n      tag_230\n        /* \"#utility.yul\":2734:2736   */\n      0x20\n        /* \"#utility.yul\":2723:2732   */\n      dup5\n        /* \"#utility.yul\":2719:2737   */\n      add\n        /* \"#utility.yul\":2700:2738   */\n      tag_202\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":2690:2738   */\n      swap1\n      pop\n        /* \"#utility.yul\":2484:2744   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2749:3129   */\n    tag_86:\n        /* \"#utility.yul\":2828:2829   */\n      0x01\n        /* \"#utility.yul\":2824:2836   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2871:2883   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2892:2953   */\n      tag_232\n      jumpi\n        /* \"#utility.yul\":2946:2950   */\n      0x7f\n        /* \"#utility.yul\":2938:2944   */\n      dup3\n        /* \"#utility.yul\":2934:2951   */\n      and\n        /* \"#utility.yul\":2924:2951   */\n      swap2\n      pop\n        /* \"#utility.yul\":2892:2953   */\n    tag_232:\n        /* \"#utility.yul\":2999:3001   */\n      0x20\n        /* \"#utility.yul\":2991:2997   */\n      dup3\n        /* \"#utility.yul\":2988:3002   */\n      lt\n        /* \"#utility.yul\":2968:2986   */\n      dup2\n        /* \"#utility.yul\":2965:3003   */\n      sub\n        /* \"#utility.yul\":2962:3123   */\n      tag_233\n      jumpi\n        /* \"#utility.yul\":3045:3055   */\n      0x4e487b71\n        /* \"#utility.yul\":3040:3043   */\n      0xe0\n        /* \"#utility.yul\":3036:3056   */\n      shl\n        /* \"#utility.yul\":3033:3034   */\n      0x00\n        /* \"#utility.yul\":3026:3057   */\n      mstore\n        /* \"#utility.yul\":3080:3084   */\n      0x22\n        /* \"#utility.yul\":3077:3078   */\n      0x04\n        /* \"#utility.yul\":3070:3085   */\n      mstore\n        /* \"#utility.yul\":3108:3112   */\n      0x24\n        /* \"#utility.yul\":3105:3106   */\n      0x00\n        /* \"#utility.yul\":3098:3113   */\n      revert\n        /* \"#utility.yul\":2962:3123   */\n    tag_233:\n      pop\n        /* \"#utility.yul\":2749:3129   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3134:3261   */\n    tag_203:\n        /* \"#utility.yul\":3195:3205   */\n      0x4e487b71\n        /* \"#utility.yul\":3190:3193   */\n      0xe0\n        /* \"#utility.yul\":3186:3206   */\n      shl\n        /* \"#utility.yul\":3183:3184   */\n      0x00\n        /* \"#utility.yul\":3176:3207   */\n      mstore\n        /* \"#utility.yul\":3226:3230   */\n      0x11\n        /* \"#utility.yul\":3223:3224   */\n      0x04\n        /* \"#utility.yul\":3216:3231   */\n      mstore\n        /* \"#utility.yul\":3250:3254   */\n      0x24\n        /* \"#utility.yul\":3247:3248   */\n      0x00\n        /* \"#utility.yul\":3240:3255   */\n      revert\n        /* \"#utility.yul\":3266:3391   */\n    tag_109:\n        /* \"#utility.yul\":3331:3340   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3352:3362   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3349:3385   */\n      iszero\n      tag_91\n      jumpi\n        /* \"#utility.yul\":3365:3383   */\n      tag_91\n      tag_203\n      jump\t// in\n        /* \"#utility.yul\":6990:7118   */\n    tag_190:\n        /* \"#utility.yul\":7057:7066   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":7078:7089   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":7075:7112   */\n      iszero\n      tag_91\n      jumpi\n        /* \"#utility.yul\":7092:7110   */\n      tag_91\n      tag_203\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220ddb11a8dec5c9c487958cb29a455c38ca4441e2a9733681f2c128d4c140d53b064736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_101": {
									"entryPoint": null,
									"id": 101,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_55": {
									"entryPoint": null,
									"id": 55,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_840": {
									"entryPoint": null,
									"id": 840,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_641": {
									"entryPoint": null,
									"id": 641,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_630": {
									"entryPoint": 534,
									"id": 630,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_459": {
									"entryPoint": 308,
									"id": 459,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_936": {
									"entryPoint": 227,
									"id": 936,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_131": {
									"entryPoint": null,
									"id": 131,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 918,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 1169,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 617,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 898,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 539,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5300:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "201:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "211:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "225:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "268:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "246:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "319:31:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "321:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "343:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:26:7"
															},
															"nodeType": "YulIf",
															"src": "289:61:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "430:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "437:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "442:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "474:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "477:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "502:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "505:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "396:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "362:38:7"
															},
															"nodeType": "YulIf",
															"src": "359:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "181:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "190:6:7",
														"type": ""
													}
												],
												"src": "146:380:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "604:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:14:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:14:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "620:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "638:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "641:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "628:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "570:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "578:4:7",
														"type": ""
													}
												],
												"src": "531:121:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "738:464:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "771:425:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "785:11:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "795:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "789:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "816:2:7"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "820:5:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "809:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "809:17:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "809:17:7"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "839:31:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "861:2:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "865:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "851:9:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "851:19:7"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "843:4:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "883:57:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "906:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "916:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "923:10:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "935:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "919:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "919:19:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "912:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "912:27:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "902:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "902:38:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "887:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "977:23:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "979:19:7",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "994:4:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "979:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "959:10:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "971:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "956:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:20:7"
																		},
																		"nodeType": "YulIf",
																		"src": "953:47:7"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1013:41:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1027:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1037:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "1044:3:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1049:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1040:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1040:12:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1033:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1033:20:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1023:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1023:31:7"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "1017:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1067:24:7",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "1080:11:7"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "1071:5:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1165:21:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1174:5:7"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1181:2:7"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "1167:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1167:17:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1167:17:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "1115:5:7"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1122:2:7"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "1112:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1112:13:7"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "1126:26:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1128:22:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1141:5:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1148:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1137:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1137:13:7"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "1128:5:7"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "1108:3:7",
																			"statements": []
																		},
																		"src": "1104:82:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "759:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:11:7"
															},
															"nodeType": "YulIf",
															"src": "748:448:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "710:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "717:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "722:10:7",
														"type": ""
													}
												],
												"src": "657:545:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1292:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1302:65:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "1317:4:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1335:1:7",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "1338:3:7"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1331:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1331:11:7"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1348:1:7",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "1344:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1344:6:7"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "1327:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1327:24:7"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1323:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1323:29:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1313:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1313:40:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1359:1:7",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "1362:3:7"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1355:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1355:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1310:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1310:57:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "1302:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1269:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1275:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "1283:4:7",
														"type": ""
													}
												],
												"src": "1207:166:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1474:1256:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1484:24:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1504:3:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1498:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1498:10:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "1488:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1551:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1553:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1553:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1553:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1523:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1539:2:7",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1543:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1535:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1535:10:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1547:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1531:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1531:18:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1520:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1520:30:7"
															},
															"nodeType": "YulIf",
															"src": "1517:56:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "1626:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "1664:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "1658:5:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1658:11:7"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "1632:25:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1632:38:7"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1672:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "1582:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:97:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1582:97:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1688:18:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1705:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "1692:9:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1715:23:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1734:4:7",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "1719:11:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1747:24:7",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "1760:11:7"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "1747:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1817:656:7",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1831:35:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "1850:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1862:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "1858:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1858:7:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1846:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1846:20:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "1835:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1879:49:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "1923:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "1893:29:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1893:35:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "1883:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1941:10:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1950:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "1945:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2028:172:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2053:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "2071:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "2076:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "2067:3:7"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2067:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "2061:5:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2061:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2046:6:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2046:42:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2046:42:7"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2105:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2119:6:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2127:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2115:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2115:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "2105:6:7"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2146:40:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "2163:9:7"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2174:11:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2159:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2159:27:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "2146:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1975:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "1978:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "1972:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1972:14:7"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "1987:28:7",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "1989:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "1998:1:7"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2001:11:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1994:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1994:19:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1989:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "1968:3:7",
																					"statements": []
																				},
																				"src": "1964:236:7"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2248:166:7",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "2266:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2293:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2298:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2289:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2289:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2283:5:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2283:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "2270:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2333:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "2345:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "2372:1:7",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "2375:6:7"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "2368:3:7"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "2368:14:7"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2384:3:7",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "2364:3:7"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2364:24:7"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2394:1:7",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "2390:3:7"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2390:6:7"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "2360:3:7"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "2360:37:7"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "2356:3:7"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2356:42:7"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "2341:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2341:58:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2326:6:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2326:74:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2326:74:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "2219:7:7"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2228:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2216:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2216:19:7"
																				},
																				"nodeType": "YulIf",
																				"src": "2213:201:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2434:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2448:1:7",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "2451:6:7"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2444:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2444:14:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2460:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2440:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2440:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2427:6:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2427:36:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2427:36:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1810:663:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1815:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2490:234:7",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2504:14:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2517:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "2508:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2553:67:7",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2571:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2590:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2595:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2586:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2586:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2580:5:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2580:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2571:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "2534:6:7"
																				},
																				"nodeType": "YulIf",
																				"src": "2531:89:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2640:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2699:5:7"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "2706:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "2646:52:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2646:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2633:6:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2633:81:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2633:81:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2482:242:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1790:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1798:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1787:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1787:14:7"
															},
															"nodeType": "YulSwitch",
															"src": "1780:944:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1459:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1465:3:7",
														"type": ""
													}
												],
												"src": "1378:1352:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2836:102:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2846:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2858:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2869:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2854:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2854:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2846:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2888:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2903:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2919:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2924:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2915:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2915:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2928:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2911:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2911:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2899:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2899:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2881:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2881:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2881:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2805:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2816:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2827:4:7",
														"type": ""
													}
												],
												"src": "2735:203:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2975:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2992:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2999:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3004:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2995:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2995:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2985:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2985:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2985:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3032:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3035:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3025:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3025:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3025:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3056:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3059:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3049:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3049:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3049:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2943:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3139:358:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3149:16:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3164:1:7",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "3153:7:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3174:16:7",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "3183:7:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "3174:5:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3199:13:7",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "3207:5:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "3199:4:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3263:228:7",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3308:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "3310:16:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3310:18:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "3310:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "3283:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3297:1:7",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3293:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3293:6:7"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "3301:4:7"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "3289:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3289:17:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "3280:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3280:27:7"
																		},
																		"nodeType": "YulIf",
																		"src": "3277:53:7"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3369:29:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3371:25:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "3384:5:7"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "3391:4:7"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "3380:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3380:16:7"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "3371:5:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "3350:8:7"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "3360:7:7"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3346:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3346:22:7"
																		},
																		"nodeType": "YulIf",
																		"src": "3343:55:7"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3411:23:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "3423:4:7"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "3429:4:7"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "3419:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3419:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "3411:4:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3447:34:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "3463:7:7"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "3472:8:7"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "3459:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3459:22:7"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "3447:8:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "3232:8:7"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "3242:7:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3229:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3229:21:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3251:3:7",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3225:3:7",
																"statements": []
															},
															"src": "3221:270:7"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "3103:5:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "3110:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "3123:5:7",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "3130:4:7",
														"type": ""
													}
												],
												"src": "3075:422:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3561:747:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3599:52:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3613:10:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "3622:1:7",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "3613:5:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "3636:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "3581:8:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3574:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3574:16:7"
															},
															"nodeType": "YulIf",
															"src": "3571:80:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3684:52:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3698:10:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "3707:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "3698:5:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "3721:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "3670:4:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3663:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3663:12:7"
															},
															"nodeType": "YulIf",
															"src": "3660:76:7"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3772:52:7",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "3786:10:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3795:1:7",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "3786:5:7"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "3809:5:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3765:59:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3770:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3840:123:7",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3875:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "3877:16:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3877:18:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3877:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "3860:8:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3870:3:7",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "3857:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3857:17:7"
																				},
																				"nodeType": "YulIf",
																				"src": "3854:43:7"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "3910:25:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "3923:8:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3933:1:7",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3919:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3919:16:7"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "3910:5:7"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "3948:5:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3833:130:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3838:1:7",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "3752:4:7"
															},
															"nodeType": "YulSwitch",
															"src": "3745:218:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4061:70:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4075:28:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "4088:4:7"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "4094:8:7"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "4084:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4084:19:7"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "4075:5:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "4116:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "3985:4:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3991:2:7",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "3982:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3982:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "3999:8:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4009:2:7",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "3996:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3996:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3978:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3978:35:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "4022:4:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4028:3:7",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "4019:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4019:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "4037:8:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4047:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "4034:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4034:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4015:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4015:36:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3975:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3975:77:7"
															},
															"nodeType": "YulIf",
															"src": "3972:159:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4140:57:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "4182:4:7"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "4188:8:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "4163:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4163:34:7"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "4144:7:7",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "4153:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4242:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4244:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4244:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4244:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "4212:7:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4229:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4225:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4225:6:7"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "4233:6:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4221:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4221:19:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4209:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4209:32:7"
															},
															"nodeType": "YulIf",
															"src": "4206:58:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4273:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "4286:7:7"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "4295:6:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4282:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4282:20:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "4273:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "3532:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "3538:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "3551:5:7",
														"type": ""
													}
												],
												"src": "3502:806:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4381:72:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4391:56:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "4421:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "4431:8:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4441:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4427:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4427:19:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "4400:20:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4400:47:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "4391:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "4352:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "4358:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "4371:5:7",
														"type": ""
													}
												],
												"src": "4313:140:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4510:116:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4520:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4535:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4538:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4531:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4531:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "4520:7:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4598:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4600:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4600:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4600:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4569:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4562:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4562:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "4576:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "4583:7:7"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "4592:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "4579:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4579:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "4573:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4573:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "4559:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4559:37:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4552:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4552:45:7"
															},
															"nodeType": "YulIf",
															"src": "4549:71:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4489:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4492:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "4498:7:7",
														"type": ""
													}
												],
												"src": "4458:168:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4805:181:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4822:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4833:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4815:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4815:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4815:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4856:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4867:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4852:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4852:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4872:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4845:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4845:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4845:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4895:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4906:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4891:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4891:18:7"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4911:33:7",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4884:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4884:61:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4884:61:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4954:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4966:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4977:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4962:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4962:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4954:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4782:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4796:4:7",
														"type": ""
													}
												],
												"src": "4631:355:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5039:77:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5049:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5060:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5063:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5056:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5056:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5049:3:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5088:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5090:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5090:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5090:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5080:1:7"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "5083:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5077:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5077:10:7"
															},
															"nodeType": "YulIf",
															"src": "5074:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5022:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5025:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5031:3:7",
														"type": ""
													}
												],
												"src": "4991:125:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5222:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5232:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5244:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5255:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5240:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5240:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5232:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5274:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5285:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5267:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5267:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5267:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5191:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5202:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5213:4:7",
														"type": ""
													}
												],
												"src": "5121:177:7"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b50336040518060400160405280600b81526020016a48616d6d65722054696d6560a81b81525060405180604001604052806009815260200168444953434f5645525960b81b8152508160039081620000699190620002ba565b506004620000788282620002ba565b5050506001600160a01b038116620000aa57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b620000b581620000e3565b50620000dd33620000c96012600a62000491565b620000d79061029a620004a8565b62000134565b620004d8565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0382166200018c5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401620000a1565b8060025f8282546200019f9190620004c2565b90915550506001600160a01b0382165f9081526020819052604081208054839290620001cd908490620004c2565b90915550506040518181526001600160a01b038316905f907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b505050565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806200024457607f821691505b6020821081036200026357634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111562000216575f81815260208120601f850160051c81016020861015620002915750805b601f850160051c820191505b81811015620002b2578281556001016200029d565b505050505050565b81516001600160401b03811115620002d657620002d66200021b565b620002ee81620002e784546200022f565b8462000269565b602080601f83116001811462000324575f84156200030c5750858301515b5f19600386901b1c1916600185901b178555620002b2565b5f85815260208120601f198616915b82811015620003545788860151825594840194600190910190840162000333565b50858210156200037257878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b5f52601160045260245ffd5b600181815b80851115620003d657815f1904821115620003ba57620003ba62000382565b80851615620003c857918102915b93841c93908002906200039b565b509250929050565b5f82620003ee575060016200048b565b81620003fc57505f6200048b565b8160018114620004155760028114620004205762000440565b60019150506200048b565b60ff84111562000434576200043462000382565b50506001821b6200048b565b5060208310610133831016604e8410600b841016171562000465575081810a6200048b565b62000471838362000396565b805f190482111562000487576200048762000382565b0290505b92915050565b5f620004a160ff841683620003de565b9392505050565b80820281158282048414176200048b576200048b62000382565b808201808211156200048b576200048b62000382565b610b6780620004e65f395ff3fe608060405234801561000f575f80fd5b50600436106100dd575f3560e01c8063715018a611610084578063715018a6146101a657806379cc6790146101ae5780638da5cb5b146101c157806395d89b41146101da578063a457c2d7146101e2578063a9059cbb146101f5578063dd62ed3e14610208578063f2fde38b1461021b575f80fd5b806306fdde03146100e1578063095ea7b3146100ff57806318160ddd1461012257806323b872dd14610134578063313ce56714610147578063395093511461015657806342966c681461016957806370a082311461017e575b5f80fd5b6100e961022e565b6040516100f6919061097c565b60405180910390f35b61011261010d3660046109e2565b6102be565b60405190151581526020016100f6565b6002545b6040519081526020016100f6565b610112610142366004610a0a565b6102d7565b604051601281526020016100f6565b6101126101643660046109e2565b6102fa565b61017c610177366004610a43565b61031b565b005b61012661018c366004610a5a565b6001600160a01b03165f9081526020819052604090205490565b61017c610328565b61017c6101bc3660046109e2565b61033b565b6005546001600160a01b03166040516100f69190610a7a565b6100e9610354565b6101126101f03660046109e2565b610363565b6101126102033660046109e2565b6103e2565b610126610216366004610a8e565b6103ef565b61017c610229366004610a5a565b610419565b60606003805461023d90610abf565b80601f016020809104026020016040519081016040528092919081815260200182805461026990610abf565b80156102b45780601f1061028b576101008083540402835291602001916102b4565b820191905f5260205f20905b81548152906001019060200180831161029757829003601f168201915b5050505050905090565b5f336102cb818585610453565b60019150505b92915050565b5f336102e4858285610577565b6102ef8585856105ef565b506001949350505050565b5f336102cb81858561030c83836103ef565b6103169190610b0b565b610453565b61032533826107bb565b50565b6103306108fe565b6103395f61092b565b565b610346823383610577565b61035082826107bb565b5050565b60606004805461023d90610abf565b5f338161037082866103ef565b9050838110156103d55760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102ef8286868403610453565b5f336102cb8185856105ef565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6104216108fe565b6001600160a01b03811661044a575f604051631e4fbdf760e01b81526004016103cc9190610a7a565b6103258161092b565b6001600160a01b0383166104b55760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103cc565b6001600160a01b0382166105165760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103cc565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b5f61058284846103ef565b90505f1981146105e957818110156105dc5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103cc565b6105e98484848403610453565b50505050565b6001600160a01b0383166106535760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103cc565b6001600160a01b0382166106b55760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103cc565b6001600160a01b0383165f908152602081905260409020548181101561072c5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103cc565b6001600160a01b038085165f90815260208190526040808220858503905591851681529081208054849290610762908490610b0b565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107ae91815260200190565b60405180910390a36105e9565b6001600160a01b03821661081b5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103cc565b6001600160a01b0382165f908152602081905260409020548181101561088e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103cc565b6001600160a01b0383165f9081526020819052604081208383039055600280548492906108bc908490610b1e565b90915550506040518281525f906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161056a565b6005546001600160a01b03163314610339573360405163118cdaa760e01b81526004016103cc9190610a7a565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f6020808352835180828501525f5b818110156109a75785810183015185820160400152820161098b565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146109dd575f80fd5b919050565b5f80604083850312156109f3575f80fd5b6109fc836109c7565b946020939093013593505050565b5f805f60608486031215610a1c575f80fd5b610a25846109c7565b9250610a33602085016109c7565b9150604084013590509250925092565b5f60208284031215610a53575f80fd5b5035919050565b5f60208284031215610a6a575f80fd5b610a73826109c7565b9392505050565b6001600160a01b0391909116815260200190565b5f8060408385031215610a9f575f80fd5b610aa8836109c7565b9150610ab6602084016109c7565b90509250929050565b600181811c90821680610ad357607f821691505b602082108103610af157634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b808201808211156102d1576102d1610af7565b818103818111156102d1576102d1610af756fea2646970667358221220ddb11a8dec5c9c487958cb29a455c38ca4441e2a9733681f2c128d4c140d53b064736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x48616D6D65722054696D65 PUSH1 0xA8 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x444953434F56455259 PUSH1 0xB8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x69 SWAP2 SWAP1 PUSH3 0x2BA JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x78 DUP3 DUP3 PUSH3 0x2BA JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xAA JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xB5 DUP2 PUSH3 0xE3 JUMP JUMPDEST POP PUSH3 0xDD CALLER PUSH3 0xC9 PUSH1 0x12 PUSH1 0xA PUSH3 0x491 JUMP JUMPDEST PUSH3 0xD7 SWAP1 PUSH2 0x29A PUSH3 0x4A8 JUMP JUMPDEST PUSH3 0x134 JUMP JUMPDEST PUSH3 0x4D8 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x18C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xA1 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x19F SWAP2 SWAP1 PUSH3 0x4C2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH3 0x1CD SWAP1 DUP5 SWAP1 PUSH3 0x4C2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x244 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x263 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x216 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x291 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x2B2 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x29D JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x2D6 JUMPI PUSH3 0x2D6 PUSH3 0x21B JUMP JUMPDEST PUSH3 0x2EE DUP2 PUSH3 0x2E7 DUP5 SLOAD PUSH3 0x22F JUMP JUMPDEST DUP5 PUSH3 0x269 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x324 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x30C JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x2B2 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x354 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x333 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x372 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x3D6 JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH3 0x3BA JUMPI PUSH3 0x3BA PUSH3 0x382 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x3C8 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x39B JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH3 0x3EE JUMPI POP PUSH1 0x1 PUSH3 0x48B JUMP JUMPDEST DUP2 PUSH3 0x3FC JUMPI POP PUSH0 PUSH3 0x48B JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x415 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x420 JUMPI PUSH3 0x440 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x48B JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x434 JUMPI PUSH3 0x434 PUSH3 0x382 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x48B JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x465 JUMPI POP DUP2 DUP2 EXP PUSH3 0x48B JUMP JUMPDEST PUSH3 0x471 DUP4 DUP4 PUSH3 0x396 JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH3 0x487 JUMPI PUSH3 0x487 PUSH3 0x382 JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x4A1 PUSH1 0xFF DUP5 AND DUP4 PUSH3 0x3DE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH3 0x48B JUMPI PUSH3 0x48B PUSH3 0x382 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x48B JUMPI PUSH3 0x48B PUSH3 0x382 JUMP JUMPDEST PUSH2 0xB67 DUP1 PUSH3 0x4E6 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x84 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x21B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x17E JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE9 PUSH2 0x22E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0x97C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x112 PUSH2 0x10D CALLDATASIZE PUSH1 0x4 PUSH2 0x9E2 JUMP JUMPDEST PUSH2 0x2BE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF6 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF6 JUMP JUMPDEST PUSH2 0x112 PUSH2 0x142 CALLDATASIZE PUSH1 0x4 PUSH2 0xA0A JUMP JUMPDEST PUSH2 0x2D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF6 JUMP JUMPDEST PUSH2 0x112 PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E2 JUMP JUMPDEST PUSH2 0x2FA JUMP JUMPDEST PUSH2 0x17C PUSH2 0x177 CALLDATASIZE PUSH1 0x4 PUSH2 0xA43 JUMP JUMPDEST PUSH2 0x31B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x126 PUSH2 0x18C CALLDATASIZE PUSH1 0x4 PUSH2 0xA5A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x328 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0x9E2 JUMP JUMPDEST PUSH2 0x33B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0xA7A JUMP JUMPDEST PUSH2 0xE9 PUSH2 0x354 JUMP JUMPDEST PUSH2 0x112 PUSH2 0x1F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E2 JUMP JUMPDEST PUSH2 0x363 JUMP JUMPDEST PUSH2 0x112 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E2 JUMP JUMPDEST PUSH2 0x3E2 JUMP JUMPDEST PUSH2 0x126 PUSH2 0x216 CALLDATASIZE PUSH1 0x4 PUSH2 0xA8E JUMP JUMPDEST PUSH2 0x3EF JUMP JUMPDEST PUSH2 0x17C PUSH2 0x229 CALLDATASIZE PUSH1 0x4 PUSH2 0xA5A JUMP JUMPDEST PUSH2 0x419 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x23D SWAP1 PUSH2 0xABF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x269 SWAP1 PUSH2 0xABF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2B4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x28B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2B4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x297 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2CB DUP2 DUP6 DUP6 PUSH2 0x453 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2E4 DUP6 DUP3 DUP6 PUSH2 0x577 JUMP JUMPDEST PUSH2 0x2EF DUP6 DUP6 DUP6 PUSH2 0x5EF JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2CB DUP2 DUP6 DUP6 PUSH2 0x30C DUP4 DUP4 PUSH2 0x3EF JUMP JUMPDEST PUSH2 0x316 SWAP2 SWAP1 PUSH2 0xB0B JUMP JUMPDEST PUSH2 0x453 JUMP JUMPDEST PUSH2 0x325 CALLER DUP3 PUSH2 0x7BB JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x330 PUSH2 0x8FE JUMP JUMPDEST PUSH2 0x339 PUSH0 PUSH2 0x92B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x346 DUP3 CALLER DUP4 PUSH2 0x577 JUMP JUMPDEST PUSH2 0x350 DUP3 DUP3 PUSH2 0x7BB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x23D SWAP1 PUSH2 0xABF JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x370 DUP3 DUP7 PUSH2 0x3EF JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2EF DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x453 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2CB DUP2 DUP6 DUP6 PUSH2 0x5EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x421 PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x44A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CC SWAP2 SWAP1 PUSH2 0xA7A JUMP JUMPDEST PUSH2 0x325 DUP2 PUSH2 0x92B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x516 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x582 DUP5 DUP5 PUSH2 0x3EF JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x5E9 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x5DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CC JUMP JUMPDEST PUSH2 0x5E9 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x453 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x653 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x72C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x762 SWAP1 DUP5 SWAP1 PUSH2 0xB0B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x7AE SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x81B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x88E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x8BC SWAP1 DUP5 SWAP1 PUSH2 0xB1E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0x56A JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x339 JUMPI CALLER PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CC SWAP2 SWAP1 PUSH2 0xA7A JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9A7 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x98B JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x9DD JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9FC DUP4 PUSH2 0x9C7 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA1C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA25 DUP5 PUSH2 0x9C7 JUMP JUMPDEST SWAP3 POP PUSH2 0xA33 PUSH1 0x20 DUP6 ADD PUSH2 0x9C7 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA53 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA6A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA73 DUP3 PUSH2 0x9C7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA9F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xAA8 DUP4 PUSH2 0x9C7 JUMP JUMPDEST SWAP2 POP PUSH2 0xAB6 PUSH1 0x20 DUP5 ADD PUSH2 0x9C7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xAD3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xAF1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2D1 JUMPI PUSH2 0x2D1 PUSH2 0xAF7 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x2D1 JUMPI PUSH2 0x2D1 PUSH2 0xAF7 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD 0xB1 BYTE DUP14 0xEC 0x5C SWAP13 BASEFEE PUSH26 0x58CB29A455C38CA4441E2A9733681F2C128D4C140D53B064736F PUSH13 0x63430008140033000000000000 ",
							"sourceMap": "108:201:1:-:0;;;167:139;;;;;;;;;;237:10;3210:113:2;;;;;;;;;;;;;-1:-1:-1;;;3210:113:2;;;;;;;;;;;;;;;;-1:-1:-1;;;3210:113:2;;;3284:5;3276;:13;;;;;;:::i;:::-;-1:-1:-1;3299:7:2;:17;3309:7;3299;:17;:::i;:::-;-1:-1:-1;;;;;;;;1266:26:6;;1262:95;;1315:31;;-1:-1:-1;;;1315:31:6;;1343:1;1315:31;;;2881:51:7;2854:18;;1315:31:6;;;;;;;;1262:95;1366:32;1385:12;1366:18;:32::i;:::-;-1:-1:-1;259:41:1::2;265:10;283:16;4407:2:2::0;283::1::2;:16;:::i;:::-;277:22;::::0;:3:::2;:22;:::i;:::-;259:5;:41::i;:::-;108:201:::0;;2905:187:6;2997:6;;;-1:-1:-1;;;;;3013:17:6;;;-1:-1:-1;;;;;;3013:17:6;;;;;;;3045:40;;2997:6;;;3013:17;2997:6;;3045:40;;2978:16;;3045:40;2968:124;2905:187;:::o;9634:389:2:-;-1:-1:-1;;;;;9717:21:2;;9709:65;;;;-1:-1:-1;;;9709:65:2;;4833:2:7;9709:65:2;;;4815:21:7;4872:2;4852:18;;;4845:30;4911:33;4891:18;;;4884:61;4962:18;;9709:65:2;4631:355:7;9709:65:2;9861:6;9845:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9877:18:2;;:9;:18;;;;;;;;;;:28;;9899:6;;9877:9;:28;;9899:6;;9877:28;:::i;:::-;;;;-1:-1:-1;;9920:37:2;;5267:25:7;;;-1:-1:-1;;;;;9920:37:2;;;9937:1;;9920:37;;5255:2:7;5240:18;9920:37:2;;;;;;;9634:389;;:::o;13018:121::-;;;;:::o;14:127:7:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:7;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:7;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:7;;;2580:26;2531:89;-1:-1:-1;;1335:1:7;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:7;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:7;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:7;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:7:o;2943:127::-;3004:10;2999:3;2995:20;2992:1;2985:31;3035:4;3032:1;3025:15;3059:4;3056:1;3049:15;3075:422;3164:1;3207:5;3164:1;3221:270;3242:7;3232:8;3229:21;3221:270;;;3301:4;3297:1;3293:6;3289:17;3283:4;3280:27;3277:53;;;3310:18;;:::i;:::-;3360:7;3350:8;3346:22;3343:55;;;3380:16;;;;3343:55;3459:22;;;;3419:15;;;;3221:270;;;3225:3;3075:422;;;;;:::o;3502:806::-;3551:5;3581:8;3571:80;;-1:-1:-1;3622:1:7;3636:5;;3571:80;3670:4;3660:76;;-1:-1:-1;3707:1:7;3721:5;;3660:76;3752:4;3770:1;3765:59;;;;3838:1;3833:130;;;;3745:218;;3765:59;3795:1;3786:10;;3809:5;;;3833:130;3870:3;3860:8;3857:17;3854:43;;;3877:18;;:::i;:::-;-1:-1:-1;;3933:1:7;3919:16;;3948:5;;3745:218;;4047:2;4037:8;4034:16;4028:3;4022:4;4019:13;4015:36;4009:2;3999:8;3996:16;3991:2;3985:4;3982:12;3978:35;3975:77;3972:159;;;-1:-1:-1;4084:19:7;;;4116:5;;3972:159;4163:34;4188:8;4182:4;4163:34;:::i;:::-;4233:6;4229:1;4225:6;4221:19;4212:7;4209:32;4206:58;;;4244:18;;:::i;:::-;4282:20;;-1:-1:-1;3502:806:7;;;;;:::o;4313:140::-;4371:5;4400:47;4441:4;4431:8;4427:19;4421:4;4400:47;:::i;:::-;4391:56;4313:140;-1:-1:-1;;;4313:140:7:o;4458:168::-;4531:9;;;4562;;4579:15;;;4573:22;;4559:37;4549:71;;4600:18;;:::i;4991:125::-;5056:9;;;5077:10;;;5074:36;;;5090:18;;:::i;5121:177::-;108:201:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_641": {
									"entryPoint": null,
									"id": 641,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_576": {
									"entryPoint": 1107,
									"id": 576,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_630": {
									"entryPoint": null,
									"id": 630,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_531": {
									"entryPoint": 1979,
									"id": 531,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_874": {
									"entryPoint": 2302,
									"id": 874,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_619": {
									"entryPoint": 1399,
									"id": 619,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_936": {
									"entryPoint": 2347,
									"id": 936,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_403": {
									"entryPoint": 1519,
									"id": 403,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_198": {
									"entryPoint": 1007,
									"id": 198,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_223": {
									"entryPoint": 702,
									"id": 223,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_155": {
									"entryPoint": null,
									"id": 155,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_685": {
									"entryPoint": 827,
									"id": 685,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_664": {
									"entryPoint": 795,
									"id": 664,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_131": {
									"entryPoint": null,
									"id": 131,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_326": {
									"entryPoint": 867,
									"id": 326,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_285": {
									"entryPoint": 762,
									"id": 285,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_111": {
									"entryPoint": 558,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_857": {
									"entryPoint": null,
									"id": 857,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_888": {
									"entryPoint": 808,
									"id": 888,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_121": {
									"entryPoint": 852,
									"id": 121,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_141": {
									"entryPoint": null,
									"id": 141,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_256": {
									"entryPoint": 727,
									"id": 256,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_916": {
									"entryPoint": 1049,
									"id": 916,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_180": {
									"entryPoint": 994,
									"id": 180,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2503,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2702,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2530,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2627,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2428,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2827,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2751,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2807,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7120:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:427:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:7",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:7",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:7"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:7"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:7"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:7"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:7",
																"statements": []
															},
															"src": "294:140:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:7"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "483:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "443:42:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "443:42:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "494:62:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "537:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "546:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "553:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:54:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:7",
														"type": ""
													}
												],
												"src": "14:548:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "616:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "626:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "718:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "727:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "730:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "703:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "708:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "712:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "667:50:7"
															},
															"nodeType": "YulIf",
															"src": "664:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "595:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "606:5:7",
														"type": ""
													}
												],
												"src": "567:173:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "832:167:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "878:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "887:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "890:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "874:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:32:7"
															},
															"nodeType": "YulIf",
															"src": "842:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "903:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "913:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "951:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "989:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "961:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "790:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "801:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "813:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "821:6:7",
														"type": ""
													}
												],
												"src": "745:254:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1099:92:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1109:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1090:4:7",
														"type": ""
													}
												],
												"src": "1004:187:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1297:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1307:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1266:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1277:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1288:4:7",
														"type": ""
													}
												],
												"src": "1196:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1482:224:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1528:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1495:32:7"
															},
															"nodeType": "YulIf",
															"src": "1492:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1553:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1563:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1601:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1658:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:32:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1432:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1443:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1455:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1463:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1471:6:7",
														"type": ""
													}
												],
												"src": "1378:328:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1808:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1818:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1826:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1777:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1788:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1799:4:7",
														"type": ""
													}
												],
												"src": "1711:184:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1970:110:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2016:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1983:32:7"
															},
															"nodeType": "YulIf",
															"src": "1980:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2041:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2064:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2051:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1936:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1947:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1959:6:7",
														"type": ""
													}
												],
												"src": "1900:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2155:116:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2201:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2210:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2213:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2203:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2203:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2203:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2176:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2185:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2172:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2172:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2197:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2168:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2168:32:7"
															},
															"nodeType": "YulIf",
															"src": "2165:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2226:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2255:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2236:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2236:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2226:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2121:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2132:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2144:6:7",
														"type": ""
													}
												],
												"src": "2085:186:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2377:102:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2387:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2399:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2410:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2395:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2395:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2387:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2429:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2444:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2460:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2465:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2456:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2456:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2469:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2452:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2452:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2440:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2440:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2422:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2422:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2422:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2346:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2357:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2368:4:7",
														"type": ""
													}
												],
												"src": "2276:203:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2571:173:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2617:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2626:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2629:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2619:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2619:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2619:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2592:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2601:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2588:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2588:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2613:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2584:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2584:32:7"
															},
															"nodeType": "YulIf",
															"src": "2581:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2642:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2671:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2652:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2652:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2642:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2690:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2723:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2734:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2719:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2719:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2700:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2700:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2690:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2529:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2540:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2552:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2560:6:7",
														"type": ""
													}
												],
												"src": "2484:260:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2804:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2814:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2828:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2831:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2824:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2824:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2814:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2845:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2875:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2881:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2871:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2871:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2849:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2922:31:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2924:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2938:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2946:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2934:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2934:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2924:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2902:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2895:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2895:26:7"
															},
															"nodeType": "YulIf",
															"src": "2892:61:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3012:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3033:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3040:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3045:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3036:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3036:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3026:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3026:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3026:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3077:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3080:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3070:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3070:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3070:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3105:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3108:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3098:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3098:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3098:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2968:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2991:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2999:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2988:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2988:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2965:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2965:38:7"
															},
															"nodeType": "YulIf",
															"src": "2962:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2784:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2793:6:7",
														"type": ""
													}
												],
												"src": "2749:380:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3166:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3183:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3190:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3195:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3186:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3186:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3176:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3176:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3176:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3223:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3226:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3216:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3216:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3216:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3247:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3250:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3240:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3240:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3240:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3134:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3314:77:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3324:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3335:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3338:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3331:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3331:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3324:3:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3363:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3365:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3365:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3365:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3355:1:7"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "3358:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3352:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3352:10:7"
															},
															"nodeType": "YulIf",
															"src": "3349:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3297:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3300:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3306:3:7",
														"type": ""
													}
												],
												"src": "3266:125:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3570:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3587:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3598:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3580:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3580:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3580:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3621:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3632:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3617:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3617:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3637:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3610:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3610:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3610:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3660:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3671:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3656:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3656:18:7"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3676:34:7",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3649:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3649:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3649:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3731:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3742:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3727:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3727:18:7"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3747:7:7",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3720:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3720:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3720:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3764:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3776:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3787:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3772:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3772:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3764:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3547:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3561:4:7",
														"type": ""
													}
												],
												"src": "3396:401:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3976:226:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3993:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4004:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3986:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3986:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3986:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4027:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4038:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4023:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4023:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4043:2:7",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4016:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4016:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4016:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4066:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4077:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4062:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4062:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4082:34:7",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4055:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4055:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4055:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4137:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4148:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4133:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4133:18:7"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4153:6:7",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4126:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4126:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4126:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4169:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4181:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4192:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4177:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4177:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4169:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3953:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3967:4:7",
														"type": ""
													}
												],
												"src": "3802:400:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4381:224:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4398:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4409:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4391:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4391:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4391:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4432:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4443:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4428:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4428:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4448:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4421:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4421:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4421:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4471:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4482:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4467:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4467:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4487:34:7",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4460:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4460:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4460:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4542:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4553:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4538:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4538:18:7"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4558:4:7",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4531:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4531:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4531:32:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4572:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4584:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4595:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4580:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4580:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4572:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4358:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4372:4:7",
														"type": ""
													}
												],
												"src": "4207:398:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4784:179:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4801:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4812:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4794:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4794:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4794:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4835:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4846:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4831:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4831:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4851:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4824:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4824:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4824:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4874:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4885:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4870:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4870:18:7"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4890:31:7",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4863:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4863:59:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4863:59:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4931:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4943:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4954:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4939:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4939:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4931:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4761:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4775:4:7",
														"type": ""
													}
												],
												"src": "4610:353:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5142:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5159:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5170:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5152:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5152:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5152:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5193:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5204:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5189:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5189:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5209:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5182:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5182:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5182:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5232:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5243:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5228:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5228:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5248:34:7",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5221:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5221:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5221:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5303:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5314:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5299:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5299:18:7"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5319:7:7",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5292:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5292:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5292:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5336:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5348:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5359:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5344:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5344:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5336:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5119:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5133:4:7",
														"type": ""
													}
												],
												"src": "4968:401:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5548:225:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5565:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5576:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5558:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5558:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5558:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5599:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5610:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5595:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5595:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5615:2:7",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5588:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5588:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5588:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5638:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5649:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5634:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5634:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5654:34:7",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5627:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5627:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5627:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5709:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5720:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5705:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5705:18:7"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5725:5:7",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5698:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5698:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5698:33:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5740:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5752:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5763:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5748:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5748:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5740:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5525:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5539:4:7",
														"type": ""
													}
												],
												"src": "5374:399:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5952:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5969:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5980:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5962:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5962:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5962:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6003:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6014:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5999:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5999:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6019:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5992:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5992:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5992:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6042:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6053:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6038:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6038:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6058:34:7",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6031:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6031:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6031:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6113:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6124:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6109:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6109:18:7"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6129:8:7",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6102:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6102:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6102:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6147:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6159:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6170:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6155:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6155:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6147:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5929:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5943:4:7",
														"type": ""
													}
												],
												"src": "5778:402:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6359:223:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6376:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6387:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6369:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6369:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6369:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6410:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6421:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6406:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6406:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6426:2:7",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6399:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6399:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6399:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6449:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6460:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6445:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6445:18:7"
																	},
																	{
																		"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6465:34:7",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6438:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6438:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6438:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6520:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6531:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6516:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6516:18:7"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6536:3:7",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6509:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6509:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6509:31:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6549:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6561:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6572:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6557:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6557:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6549:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6336:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6350:4:7",
														"type": ""
													}
												],
												"src": "6185:397:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6761:224:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6778:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6789:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6771:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6771:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6771:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6812:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6823:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6808:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6808:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6828:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6801:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6801:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6801:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6851:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6862:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6847:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6847:18:7"
																	},
																	{
																		"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6867:34:7",
																		"type": "",
																		"value": "ERC20: burn amount exceeds balan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6840:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6840:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6840:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6922:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6933:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6918:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6918:18:7"
																	},
																	{
																		"hexValue": "6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6938:4:7",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6911:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6911:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6911:32:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6952:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6964:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6975:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6960:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6960:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6952:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6738:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6752:4:7",
														"type": ""
													}
												],
												"src": "6587:398:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7039:79:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7049:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7061:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7064:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7057:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7057:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "7049:4:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7090:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7092:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7092:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7092:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "7081:4:7"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7087:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7078:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7078:11:7"
															},
															"nodeType": "YulIf",
															"src": "7075:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7021:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7024:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "7030:4:7",
														"type": ""
													}
												],
												"src": "6990:128:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100dd575f3560e01c8063715018a611610084578063715018a6146101a657806379cc6790146101ae5780638da5cb5b146101c157806395d89b41146101da578063a457c2d7146101e2578063a9059cbb146101f5578063dd62ed3e14610208578063f2fde38b1461021b575f80fd5b806306fdde03146100e1578063095ea7b3146100ff57806318160ddd1461012257806323b872dd14610134578063313ce56714610147578063395093511461015657806342966c681461016957806370a082311461017e575b5f80fd5b6100e961022e565b6040516100f6919061097c565b60405180910390f35b61011261010d3660046109e2565b6102be565b60405190151581526020016100f6565b6002545b6040519081526020016100f6565b610112610142366004610a0a565b6102d7565b604051601281526020016100f6565b6101126101643660046109e2565b6102fa565b61017c610177366004610a43565b61031b565b005b61012661018c366004610a5a565b6001600160a01b03165f9081526020819052604090205490565b61017c610328565b61017c6101bc3660046109e2565b61033b565b6005546001600160a01b03166040516100f69190610a7a565b6100e9610354565b6101126101f03660046109e2565b610363565b6101126102033660046109e2565b6103e2565b610126610216366004610a8e565b6103ef565b61017c610229366004610a5a565b610419565b60606003805461023d90610abf565b80601f016020809104026020016040519081016040528092919081815260200182805461026990610abf565b80156102b45780601f1061028b576101008083540402835291602001916102b4565b820191905f5260205f20905b81548152906001019060200180831161029757829003601f168201915b5050505050905090565b5f336102cb818585610453565b60019150505b92915050565b5f336102e4858285610577565b6102ef8585856105ef565b506001949350505050565b5f336102cb81858561030c83836103ef565b6103169190610b0b565b610453565b61032533826107bb565b50565b6103306108fe565b6103395f61092b565b565b610346823383610577565b61035082826107bb565b5050565b60606004805461023d90610abf565b5f338161037082866103ef565b9050838110156103d55760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102ef8286868403610453565b5f336102cb8185856105ef565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6104216108fe565b6001600160a01b03811661044a575f604051631e4fbdf760e01b81526004016103cc9190610a7a565b6103258161092b565b6001600160a01b0383166104b55760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103cc565b6001600160a01b0382166105165760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103cc565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b5f61058284846103ef565b90505f1981146105e957818110156105dc5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103cc565b6105e98484848403610453565b50505050565b6001600160a01b0383166106535760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103cc565b6001600160a01b0382166106b55760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103cc565b6001600160a01b0383165f908152602081905260409020548181101561072c5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103cc565b6001600160a01b038085165f90815260208190526040808220858503905591851681529081208054849290610762908490610b0b565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107ae91815260200190565b60405180910390a36105e9565b6001600160a01b03821661081b5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103cc565b6001600160a01b0382165f908152602081905260409020548181101561088e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103cc565b6001600160a01b0383165f9081526020819052604081208383039055600280548492906108bc908490610b1e565b90915550506040518281525f906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161056a565b6005546001600160a01b03163314610339573360405163118cdaa760e01b81526004016103cc9190610a7a565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f6020808352835180828501525f5b818110156109a75785810183015185820160400152820161098b565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146109dd575f80fd5b919050565b5f80604083850312156109f3575f80fd5b6109fc836109c7565b946020939093013593505050565b5f805f60608486031215610a1c575f80fd5b610a25846109c7565b9250610a33602085016109c7565b9150604084013590509250925092565b5f60208284031215610a53575f80fd5b5035919050565b5f60208284031215610a6a575f80fd5b610a73826109c7565b9392505050565b6001600160a01b0391909116815260200190565b5f8060408385031215610a9f575f80fd5b610aa8836109c7565b9150610ab6602084016109c7565b90509250929050565b600181811c90821680610ad357607f821691505b602082108103610af157634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b808201808211156102d1576102d1610af7565b818103818111156102d1576102d1610af756fea2646970667358221220ddb11a8dec5c9c487958cb29a455c38ca4441e2a9733681f2c128d4c140d53b064736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x84 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x21B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x17E JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE9 PUSH2 0x22E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0x97C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x112 PUSH2 0x10D CALLDATASIZE PUSH1 0x4 PUSH2 0x9E2 JUMP JUMPDEST PUSH2 0x2BE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF6 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF6 JUMP JUMPDEST PUSH2 0x112 PUSH2 0x142 CALLDATASIZE PUSH1 0x4 PUSH2 0xA0A JUMP JUMPDEST PUSH2 0x2D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF6 JUMP JUMPDEST PUSH2 0x112 PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E2 JUMP JUMPDEST PUSH2 0x2FA JUMP JUMPDEST PUSH2 0x17C PUSH2 0x177 CALLDATASIZE PUSH1 0x4 PUSH2 0xA43 JUMP JUMPDEST PUSH2 0x31B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x126 PUSH2 0x18C CALLDATASIZE PUSH1 0x4 PUSH2 0xA5A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x328 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0x9E2 JUMP JUMPDEST PUSH2 0x33B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0xA7A JUMP JUMPDEST PUSH2 0xE9 PUSH2 0x354 JUMP JUMPDEST PUSH2 0x112 PUSH2 0x1F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E2 JUMP JUMPDEST PUSH2 0x363 JUMP JUMPDEST PUSH2 0x112 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E2 JUMP JUMPDEST PUSH2 0x3E2 JUMP JUMPDEST PUSH2 0x126 PUSH2 0x216 CALLDATASIZE PUSH1 0x4 PUSH2 0xA8E JUMP JUMPDEST PUSH2 0x3EF JUMP JUMPDEST PUSH2 0x17C PUSH2 0x229 CALLDATASIZE PUSH1 0x4 PUSH2 0xA5A JUMP JUMPDEST PUSH2 0x419 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x23D SWAP1 PUSH2 0xABF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x269 SWAP1 PUSH2 0xABF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2B4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x28B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2B4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x297 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2CB DUP2 DUP6 DUP6 PUSH2 0x453 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2E4 DUP6 DUP3 DUP6 PUSH2 0x577 JUMP JUMPDEST PUSH2 0x2EF DUP6 DUP6 DUP6 PUSH2 0x5EF JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2CB DUP2 DUP6 DUP6 PUSH2 0x30C DUP4 DUP4 PUSH2 0x3EF JUMP JUMPDEST PUSH2 0x316 SWAP2 SWAP1 PUSH2 0xB0B JUMP JUMPDEST PUSH2 0x453 JUMP JUMPDEST PUSH2 0x325 CALLER DUP3 PUSH2 0x7BB JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x330 PUSH2 0x8FE JUMP JUMPDEST PUSH2 0x339 PUSH0 PUSH2 0x92B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x346 DUP3 CALLER DUP4 PUSH2 0x577 JUMP JUMPDEST PUSH2 0x350 DUP3 DUP3 PUSH2 0x7BB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x23D SWAP1 PUSH2 0xABF JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x370 DUP3 DUP7 PUSH2 0x3EF JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2EF DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x453 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2CB DUP2 DUP6 DUP6 PUSH2 0x5EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x421 PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x44A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CC SWAP2 SWAP1 PUSH2 0xA7A JUMP JUMPDEST PUSH2 0x325 DUP2 PUSH2 0x92B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x516 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x582 DUP5 DUP5 PUSH2 0x3EF JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x5E9 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x5DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CC JUMP JUMPDEST PUSH2 0x5E9 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x453 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x653 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x72C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x762 SWAP1 DUP5 SWAP1 PUSH2 0xB0B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x7AE SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x81B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x88E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x8BC SWAP1 DUP5 SWAP1 PUSH2 0xB1E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0x56A JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x339 JUMPI CALLER PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CC SWAP2 SWAP1 PUSH2 0xA7A JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9A7 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x98B JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x9DD JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9FC DUP4 PUSH2 0x9C7 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA1C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA25 DUP5 PUSH2 0x9C7 JUMP JUMPDEST SWAP3 POP PUSH2 0xA33 PUSH1 0x20 DUP6 ADD PUSH2 0x9C7 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA53 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA6A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA73 DUP3 PUSH2 0x9C7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA9F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xAA8 DUP4 PUSH2 0x9C7 JUMP JUMPDEST SWAP2 POP PUSH2 0xAB6 PUSH1 0x20 DUP5 ADD PUSH2 0x9C7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xAD3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xAF1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2D1 JUMPI PUSH2 0x2D1 PUSH2 0xAF7 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x2D1 JUMPI PUSH2 0x2D1 PUSH2 0xAF7 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD 0xB1 BYTE DUP14 0xEC 0x5C SWAP13 BASEFEE PUSH26 0x58CB29A455C38CA4441E2A9733681F2C128D4C140D53B064736F PUSH13 0x63430008140033000000000000 ",
							"sourceMap": "108:201:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3388:98:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5665:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:7;;1162:22;1144:41;;1132:2;1117:18;5665:197:2;1004:187:7;4476:106:2;4563:12;;4476:106;;;1342:25:7;;;1330:2;1315:18;4476:106:2;1196:177:7;6424:286:2;;;;;;:::i;:::-;;:::i;4325:91::-;;;4407:2;1853:36:7;;1841:2;1826:18;4325:91:2;1711:184:7;7105:234:2;;;;;;:::i;:::-;;:::i;1817:89:3:-;;;;;;:::i;:::-;;:::i;:::-;;4640:125:2;;;;;;:::i;:::-;-1:-1:-1;;;;;4740:18:2;4714:7;4740:18;;;;;;;;;;;;4640:125;2286:101:6;;;:::i;2212:161:3:-;;;;;;:::i;:::-;;:::i;1631:85:6:-;1703:6;;-1:-1:-1;;;;;1703:6:6;1631:85;;;;;;:::i;3599:102:2:-;;;:::i;7826:427::-;;;;;;:::i;:::-;;:::i;4961:189::-;;;;;;:::i;:::-;;:::i;5208:149::-;;;;;;:::i;:::-;;:::i;2536:215:6:-;;;;;;:::i;:::-;;:::i;3388:98:2:-;3442:13;3474:5;3467:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3388:98;:::o;5665:197::-;5748:4;1972:10:0;5802:32:2;1972:10:0;5818:7:2;5827:6;5802:8;:32::i;:::-;5851:4;5844:11;;;5665:197;;;;;:::o;6424:286::-;6551:4;1972:10:0;6607:38:2;6623:4;1972:10:0;6638:6:2;6607:15;:38::i;:::-;6655:27;6665:4;6671:2;6675:6;6655:9;:27::i;:::-;-1:-1:-1;6699:4:2;;6424:286;-1:-1:-1;;;;6424:286:2:o;7105:234::-;7193:4;1972:10:0;7247:64:2;1972:10:0;7263:7:2;7300:10;7272:25;1972:10:0;7263:7:2;7272:9;:25::i;:::-;:38;;;;:::i;:::-;7247:8;:64::i;1817:89:3:-;1872:27;1972:10:0;1892:6:3;1872:5;:27::i;:::-;1817:89;:::o;2286:101:6:-;1524:13;:11;:13::i;:::-;2350:30:::1;2377:1;2350:18;:30::i;:::-;2286:101::o:0;2212:161:3:-;2288:46;2304:7;1972:10:0;2327:6:3;2288:15;:46::i;:::-;2344:22;2350:7;2359:6;2344:5;:22::i;:::-;2212:161;;:::o;3599:102:2:-;3655:13;3687:7;3680:14;;;;;:::i;7826:427::-;7919:4;1972:10:0;7919:4:2;8000:25;1972:10:0;8017:7:2;8000:9;:25::i;:::-;7973:52;;8063:15;8043:16;:35;;8035:85;;;;-1:-1:-1;;;8035:85:2;;3598:2:7;8035:85:2;;;3580:21:7;3637:2;3617:18;;;3610:30;3676:34;3656:18;;;3649:62;-1:-1:-1;;;3727:18:7;;;3720:35;3772:19;;8035:85:2;;;;;;;;;8154:60;8163:5;8170:7;8198:15;8179:16;:34;8154:8;:60::i;4961:189::-;5040:4;1972:10:0;5094:28:2;1972:10:0;5111:2:2;5115:6;5094:9;:28::i;5208:149::-;-1:-1:-1;;;;;5323:18:2;;;5297:7;5323:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;5208:149::o;2536:215:6:-;1524:13;:11;:13::i;:::-;-1:-1:-1;;;;;2620:22:6;::::1;2616:91;;2693:1;2665:31;;-1:-1:-1::0;;;2665:31:6::1;;;;;;;;:::i;2616:91::-;2716:28;2735:8;2716:18;:28::i;11342:370:2:-:0;-1:-1:-1;;;;;11473:19:2;;11465:68;;;;-1:-1:-1;;;11465:68:2;;4004:2:7;11465:68:2;;;3986:21:7;4043:2;4023:18;;;4016:30;4082:34;4062:18;;;4055:62;-1:-1:-1;;;4133:18:7;;;4126:34;4177:19;;11465:68:2;3802:400:7;11465:68:2;-1:-1:-1;;;;;11551:21:2;;11543:68;;;;-1:-1:-1;;;11543:68:2;;4409:2:7;11543:68:2;;;4391:21:7;4448:2;4428:18;;;4421:30;4487:34;4467:18;;;4460:62;-1:-1:-1;;;4538:18:7;;;4531:32;4580:19;;11543:68:2;4207:398:7;11543:68:2;-1:-1:-1;;;;;11622:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11673:32;;1342:25:7;;;11673:32:2;;1315:18:7;11673:32:2;;;;;;;;11342:370;;;:::o;11993:441::-;12123:24;12150:25;12160:5;12167:7;12150:9;:25::i;:::-;12123:52;;-1:-1:-1;;12189:16:2;:37;12185:243;;12270:6;12250:16;:26;;12242:68;;;;-1:-1:-1;;;12242:68:2;;4812:2:7;12242:68:2;;;4794:21:7;4851:2;4831:18;;;4824:30;4890:31;4870:18;;;4863:59;4939:18;;12242:68:2;4610:353:7;12242:68:2;12352:51;12361:5;12368:7;12396:6;12377:16;:25;12352:8;:51::i;:::-;12113:321;11993:441;;;:::o;8707:651::-;-1:-1:-1;;;;;8833:18:2;;8825:68;;;;-1:-1:-1;;;8825:68:2;;5170:2:7;8825:68:2;;;5152:21:7;5209:2;5189:18;;;5182:30;5248:34;5228:18;;;5221:62;-1:-1:-1;;;5299:18:7;;;5292:35;5344:19;;8825:68:2;4968:401:7;8825:68:2;-1:-1:-1;;;;;8911:16:2;;8903:64;;;;-1:-1:-1;;;8903:64:2;;5576:2:7;8903:64:2;;;5558:21:7;5615:2;5595:18;;;5588:30;5654:34;5634:18;;;5627:62;-1:-1:-1;;;5705:18:7;;;5698:33;5748:19;;8903:64:2;5374:399:7;8903:64:2;-1:-1:-1;;;;;9049:15:2;;9027:19;9049:15;;;;;;;;;;;9082:21;;;;9074:72;;;;-1:-1:-1;;;9074:72:2;;5980:2:7;9074:72:2;;;5962:21:7;6019:2;5999:18;;;5992:30;6058:34;6038:18;;;6031:62;-1:-1:-1;;;6109:18:7;;;6102:36;6155:19;;9074:72:2;5778:402:7;9074:72:2;-1:-1:-1;;;;;9180:15:2;;;:9;:15;;;;;;;;;;;9198:20;;;9180:38;;9238:13;;;;;;;;:23;;9212:6;;9180:9;9238:23;;9212:6;;9238:23;:::i;:::-;;;;;;;;9292:2;-1:-1:-1;;;;;9277:26:2;9286:4;-1:-1:-1;;;;;9277:26:2;;9296:6;9277:26;;;;1342:25:7;;1330:2;1315:18;;1196:177;9277:26:2;;;;;;;;9314:37;10343:576;;-1:-1:-1;;;;;10426:21:2;;10418:67;;;;-1:-1:-1;;;10418:67:2;;6387:2:7;10418:67:2;;;6369:21:7;6426:2;6406:18;;;6399:30;6465:34;6445:18;;;6438:62;-1:-1:-1;;;6516:18:7;;;6509:31;6557:19;;10418:67:2;6185:397:7;10418:67:2;-1:-1:-1;;;;;10581:18:2;;10556:22;10581:18;;;;;;;;;;;10617:24;;;;10609:71;;;;-1:-1:-1;;;10609:71:2;;6789:2:7;10609:71:2;;;6771:21:7;6828:2;6808:18;;;6801:30;6867:34;6847:18;;;6840:62;-1:-1:-1;;;6918:18:7;;;6911:32;6960:19;;10609:71:2;6587:398:7;10609:71:2;-1:-1:-1;;;;;10714:18:2;;:9;:18;;;;;;;;;;10735:23;;;10714:44;;10778:12;:22;;10752:6;;10714:9;10778:22;;10752:6;;10778:22;:::i;:::-;;;;-1:-1:-1;;10816:37:2;;1342:25:7;;;10842:1:2;;-1:-1:-1;;;;;10816:37:2;;;;;1330:2:7;1315:18;10816:37:2;1196:177:7;1789:162:6;1703:6;;-1:-1:-1;;;;;1703:6:6;1972:10:0;1848:23:6;1844:101;;1972:10:0;1894:40:6;;-1:-1:-1;;;1894:40:6;;;;;;;;:::i;2905:187::-;2997:6;;;-1:-1:-1;;;;;3013:17:6;;;-1:-1:-1;;;;;;3013:17:6;;;;;;;3045:40;;2997:6;;;3013:17;2997:6;;3045:40;;2978:16;;3045:40;2968:124;2905:187;:::o;14:548:7:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:7;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:7:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:180::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;-1:-1:-1;2051:23:7;;1900:180;-1:-1:-1;1900:180:7:o;2085:186::-;2144:6;2197:2;2185:9;2176:7;2172:23;2168:32;2165:52;;;2213:1;2210;2203:12;2165:52;2236:29;2255:9;2236:29;:::i;:::-;2226:39;2085:186;-1:-1:-1;;;2085:186:7:o;2276:203::-;-1:-1:-1;;;;;2440:32:7;;;;2422:51;;2410:2;2395:18;;2276:203::o;2484:260::-;2552:6;2560;2613:2;2601:9;2592:7;2588:23;2584:32;2581:52;;;2629:1;2626;2619:12;2581:52;2652:29;2671:9;2652:29;:::i;:::-;2642:39;;2700:38;2734:2;2723:9;2719:18;2700:38;:::i;:::-;2690:48;;2484:260;;;;;:::o;2749:380::-;2828:1;2824:12;;;;2871;;;2892:61;;2946:4;2938:6;2934:17;2924:27;;2892:61;2999:2;2991:6;2988:14;2968:18;2965:38;2962:161;;3045:10;3040:3;3036:20;3033:1;3026:31;3080:4;3077:1;3070:15;3108:4;3105:1;3098:15;2962:161;;2749:380;;;:::o;3134:127::-;3195:10;3190:3;3186:20;3183:1;3176:31;3226:4;3223:1;3216:15;3250:4;3247:1;3240:15;3266:125;3331:9;;;3352:10;;;3349:36;;;3365:18;;:::i;6990:128::-;7057:9;;;7078:11;;;7075:37;;;7092:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "583800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24625",
								"balanceOf(address)": "2692",
								"burn(uint256)": "50997",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "265",
								"decreaseAllowance(address,uint256)": "27034",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2386",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2325",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28487"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 108,
									"end": 309,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 108,
									"end": 309,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 108,
									"end": 309,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 167,
									"end": 306,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 167,
									"end": 306,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 167,
									"end": 306,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 167,
									"end": 306,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 167,
									"end": 306,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 167,
									"end": 306,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 306,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 167,
									"end": 306,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 167,
									"end": 306,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 167,
									"end": 306,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 167,
									"end": 306,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 237,
									"end": 247,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "48616D6D65722054696D65"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "PUSH",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "444953434F56455259"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3284,
									"end": 3289,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3276,
									"end": 3281,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 3276,
									"end": 3289,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3276,
									"end": 3289,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3276,
									"end": 3289,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 3276,
									"end": 3289,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3276,
									"end": 3289,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3276,
									"end": 3289,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 3276,
									"end": 3289,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3276,
									"end": 3289,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 3276,
									"end": 3289,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3299,
									"end": 3306,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 3299,
									"end": 3316,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 3309,
									"end": 3316,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3299,
									"end": 3306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3299,
									"end": 3316,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 3299,
									"end": 3316,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3299,
									"end": 3316,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 3299,
									"end": 3316,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1266,
									"end": 1292,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1266,
									"end": 1292,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1262,
									"end": 1357,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 1262,
									"end": 1357,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1315,
									"end": 1346,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1315,
									"end": 1346,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1315,
									"end": 1346,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1315,
									"end": 1346,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1343,
									"end": 1344,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1315,
									"end": 1346,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1315,
									"end": 1346,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1315,
									"end": 1346,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2881,
									"end": 2932,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2854,
									"end": 2872,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 2854,
									"end": 2872,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1315,
									"end": 1346,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1315,
									"end": 1346,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1315,
									"end": 1346,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1315,
									"end": 1346,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1315,
									"end": 1346,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1315,
									"end": 1346,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1315,
									"end": 1346,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1315,
									"end": 1346,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1315,
									"end": 1346,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1262,
									"end": 1357,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 1262,
									"end": 1357,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1366,
									"end": 1398,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1385,
									"end": 1397,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1366,
									"end": 1384,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1366,
									"end": 1398,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1366,
									"end": 1398,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1366,
									"end": 1398,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 259,
									"end": 300,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 265,
									"end": 275,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 283,
									"end": 299,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 4407,
									"end": 4409,
									"name": "PUSH",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 283,
									"end": 285,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 1,
									"value": "A"
								},
								{
									"begin": 283,
									"end": 299,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 283,
									"end": 299,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 283,
									"end": 299,
									"modifierDepth": 2,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 283,
									"end": 299,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 277,
									"end": 299,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 277,
									"end": 299,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 277,
									"end": 280,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 1,
									"value": "29A"
								},
								{
									"begin": 277,
									"end": 299,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 277,
									"end": 299,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 277,
									"end": 299,
									"modifierDepth": 2,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 277,
									"end": 299,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 259,
									"end": 264,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 259,
									"end": 300,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 259,
									"end": 300,
									"modifierDepth": 2,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 259,
									"end": 300,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 108,
									"end": 309,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 108,
									"end": 309,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2905,
									"end": 3092,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 2905,
									"end": 3092,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2997,
									"end": 3003,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 2997,
									"end": 3003,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2997,
									"end": 3003,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3013,
									"end": 3030,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3013,
									"end": 3030,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3013,
									"end": 3030,
									"name": "AND",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3013,
									"end": 3030,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3013,
									"end": 3030,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3013,
									"end": 3030,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3013,
									"end": 3030,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 3013,
									"end": 3030,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3013,
									"end": 3030,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 3013,
									"end": 3030,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3045,
									"end": 3085,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3045,
									"end": 3085,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2997,
									"end": 3003,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2997,
									"end": 3003,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2997,
									"end": 3003,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3013,
									"end": 3030,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2997,
									"end": 3003,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2997,
									"end": 3003,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3045,
									"end": 3085,
									"name": "PUSH",
									"source": 6,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3045,
									"end": 3085,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2978,
									"end": 2994,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2978,
									"end": 2994,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3045,
									"end": 3085,
									"name": "LOG3",
									"source": 6
								},
								{
									"begin": 2968,
									"end": 3092,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2905,
									"end": 3092,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2905,
									"end": 3092,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9634,
									"end": 10023,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 9634,
									"end": 10023,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9717,
									"end": 9738,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 9717,
									"end": 9738,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 9709,
									"end": 9774,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 9709,
									"end": 9774,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 9709,
									"end": 9774,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 9709,
									"end": 9774,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 9709,
									"end": 9774,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 9709,
									"end": 9774,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 4833,
									"end": 4835,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9709,
									"end": 9774,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 9709,
									"end": 9774,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 9709,
									"end": 9774,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4815,
									"end": 4836,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4872,
									"end": 4874,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4852,
									"end": 4870,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4852,
									"end": 4870,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4852,
									"end": 4870,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4845,
									"end": 4875,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4911,
									"end": 4944,
									"name": "PUSH",
									"source": 7,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 4891,
									"end": 4909,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 4891,
									"end": 4909,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4891,
									"end": 4909,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4884,
									"end": 4945,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4962,
									"end": 4980,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 4962,
									"end": 4980,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9709,
									"end": 9774,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 4631,
									"end": 4986,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9709,
									"end": 9774,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 9709,
									"end": 9774,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 9861,
									"end": 9867,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 9845,
									"end": 9857,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 9845,
									"end": 9857,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 9845,
									"end": 9867,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 9845,
									"end": 9867,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 9845,
									"end": 9867,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 9845,
									"end": 9867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 9845,
									"end": 9867,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 9845,
									"end": 9867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9845,
									"end": 9867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 9845,
									"end": 9867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 9845,
									"end": 9867,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 9845,
									"end": 9867,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 9845,
									"end": 9867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9845,
									"end": 9867,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 9845,
									"end": 9867,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9877,
									"end": 9895,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 9877,
									"end": 9895,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 9877,
									"end": 9886,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 9877,
									"end": 9895,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9877,
									"end": 9895,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 9877,
									"end": 9895,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 9877,
									"end": 9895,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 9877,
									"end": 9895,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 9877,
									"end": 9895,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9877,
									"end": 9895,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 9877,
									"end": 9895,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 9877,
									"end": 9895,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 9877,
									"end": 9895,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 9877,
									"end": 9905,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 9877,
									"end": 9905,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 9899,
									"end": 9905,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 9899,
									"end": 9905,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 9877,
									"end": 9886,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9877,
									"end": 9905,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 9877,
									"end": 9905,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9899,
									"end": 9905,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 9899,
									"end": 9905,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9877,
									"end": 9905,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 9877,
									"end": 9905,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 9877,
									"end": 9905,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 9877,
									"end": 9905,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 9877,
									"end": 9905,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9877,
									"end": 9905,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 9877,
									"end": 9905,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 9920,
									"end": 9957,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 9920,
									"end": 9957,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5267,
									"end": 5292,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5267,
									"end": 5292,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5267,
									"end": 5292,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9920,
									"end": 9957,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 9920,
									"end": 9957,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 9920,
									"end": 9957,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9937,
									"end": 9938,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 9937,
									"end": 9938,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9920,
									"end": 9957,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 9920,
									"end": 9957,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5255,
									"end": 5257,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5240,
									"end": 5258,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9920,
									"end": 9957,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 9920,
									"end": 9957,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 9920,
									"end": 9957,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 9920,
									"end": 9957,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 9920,
									"end": 9957,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 9920,
									"end": 9957,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 9920,
									"end": 9957,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 9634,
									"end": 10023,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9634,
									"end": 10023,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9634,
									"end": 10023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 13018,
									"end": 13139,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 13018,
									"end": 13139,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 13018,
									"end": 13139,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 13018,
									"end": 13139,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 13018,
									"end": 13139,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 13018,
									"end": 13139,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 795,
									"end": 796,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 820,
									"end": 825,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 816,
									"end": 818,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 809,
									"end": 826,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 865,
									"end": 869,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 861,
									"end": 863,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 851,
									"end": 870,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 935,
									"end": 937,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 923,
									"end": 933,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 919,
									"end": 938,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 916,
									"end": 917,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 912,
									"end": 939,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 906,
									"end": 910,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 902,
									"end": 940,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 971,
									"end": 975,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 959,
									"end": 969,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 956,
									"end": 976,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 994,
									"end": 998,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1049,
									"end": 1051,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1044,
									"end": 1047,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1040,
									"end": 1052,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1033,
									"end": 1053,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1027,
									"end": 1031,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1023,
									"end": 1054,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1122,
									"end": 1124,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1115,
									"end": 1120,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1112,
									"end": 1125,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1148,
									"end": 1149,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1137,
									"end": 1150,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "tag",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 1553,
									"end": 1571,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 1672,
									"end": 1678,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 1664,
									"end": 1668,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1658,
									"end": 1669,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1632,
									"end": 1670,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1626,
									"end": 1630,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 1582,
									"end": 1679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1798,
									"end": 1800,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1815,
									"end": 1816,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2517,
									"end": 2518,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2580,
									"end": 2606,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1335,
									"end": 1336,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1327,
									"end": 1351,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1323,
									"end": 1352,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1313,
									"end": 1353,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1360,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1310,
									"end": 1367,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1978,
									"end": 1985,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1975,
									"end": 1976,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1972,
									"end": 1986,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2061,
									"end": 2087,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 2127,
									"end": 2128,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1968,
									"end": 1971,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2228,
									"end": 2234,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2219,
									"end": 2226,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2216,
									"end": 2235,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2283,
									"end": 2309,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2372,
									"end": 2373,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2384,
									"end": 2387,
									"name": "PUSH",
									"source": 7,
									"value": "F8"
								},
								{
									"begin": 2364,
									"end": 2388,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2360,
									"end": 2397,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2356,
									"end": 2398,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2341,
									"end": 2399,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2460,
									"end": 2461,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2440,
									"end": 2462,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1378,
									"end": 2730,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2943,
									"end": 3070,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 2943,
									"end": 3070,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3004,
									"end": 3014,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 2999,
									"end": 3002,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 2995,
									"end": 3015,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2992,
									"end": 2993,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 3016,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3035,
									"end": 3039,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 3032,
									"end": 3033,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 3025,
									"end": 3040,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3059,
									"end": 3063,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 3056,
									"end": 3057,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3049,
									"end": 3064,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3075,
									"end": 3497,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 3075,
									"end": 3497,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3164,
									"end": 3165,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3207,
									"end": 3212,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3164,
									"end": 3165,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3221,
									"end": 3491,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 3221,
									"end": 3491,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3242,
									"end": 3249,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3232,
									"end": 3240,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3229,
									"end": 3250,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3221,
									"end": 3491,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3221,
									"end": 3491,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 3221,
									"end": 3491,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3301,
									"end": 3305,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3297,
									"end": 3298,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3293,
									"end": 3299,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3289,
									"end": 3306,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 3283,
									"end": 3287,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3280,
									"end": 3307,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3277,
									"end": 3330,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3277,
									"end": 3330,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 3277,
									"end": 3330,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3310,
									"end": 3328,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 3310,
									"end": 3328,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 3310,
									"end": 3328,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3310,
									"end": 3328,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 3310,
									"end": 3328,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3360,
									"end": 3367,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3350,
									"end": 3358,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3346,
									"end": 3368,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3343,
									"end": 3398,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3343,
									"end": 3398,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 3343,
									"end": 3398,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3380,
									"end": 3396,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3380,
									"end": 3396,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3380,
									"end": 3396,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3380,
									"end": 3396,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3343,
									"end": 3398,
									"name": "tag",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 3343,
									"end": 3398,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3459,
									"end": 3481,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 3459,
									"end": 3481,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3459,
									"end": 3481,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 3459,
									"end": 3481,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 3419,
									"end": 3434,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3419,
									"end": 3434,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3419,
									"end": 3434,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3419,
									"end": 3434,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3221,
									"end": 3491,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 3221,
									"end": 3491,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3221,
									"end": 3491,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 3221,
									"end": 3491,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3225,
									"end": 3228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3075,
									"end": 3497,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3075,
									"end": 3497,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3075,
									"end": 3497,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3075,
									"end": 3497,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3075,
									"end": 3497,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3075,
									"end": 3497,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3502,
									"end": 4308,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 3502,
									"end": 4308,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3551,
									"end": 3556,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3581,
									"end": 3589,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3571,
									"end": 3651,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 3571,
									"end": 3651,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3622,
									"end": 3623,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3636,
									"end": 3641,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 3636,
									"end": 3641,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3571,
									"end": 3651,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 3571,
									"end": 3651,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3670,
									"end": 3674,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3660,
									"end": 3736,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 3660,
									"end": 3736,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3707,
									"end": 3708,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3721,
									"end": 3726,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 3721,
									"end": 3726,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3660,
									"end": 3736,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 3660,
									"end": 3736,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3752,
									"end": 3756,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3770,
									"end": 3771,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3765,
									"end": 3824,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3765,
									"end": 3824,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 3765,
									"end": 3824,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 3765,
									"end": 3824,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3838,
									"end": 3839,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 3833,
									"end": 3963,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 3963,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 3963,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 3833,
									"end": 3963,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3745,
									"end": 3963,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 3745,
									"end": 3963,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3765,
									"end": 3824,
									"name": "tag",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 3765,
									"end": 3824,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3795,
									"end": 3796,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3786,
									"end": 3796,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3786,
									"end": 3796,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3809,
									"end": 3814,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3809,
									"end": 3814,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 3809,
									"end": 3814,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 3963,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 3833,
									"end": 3963,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3870,
									"end": 3873,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 3860,
									"end": 3868,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3857,
									"end": 3874,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3854,
									"end": 3897,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3854,
									"end": 3897,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 3854,
									"end": 3897,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3877,
									"end": 3895,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 3877,
									"end": 3895,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 3877,
									"end": 3895,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3877,
									"end": 3895,
									"name": "tag",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 3877,
									"end": 3895,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3933,
									"end": 3934,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3919,
									"end": 3935,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3919,
									"end": 3935,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3948,
									"end": 3953,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 3948,
									"end": 3953,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3745,
									"end": 3963,
									"name": "tag",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 3745,
									"end": 3963,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3745,
									"end": 3963,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4047,
									"end": 4049,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4037,
									"end": 4045,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4034,
									"end": 4050,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4028,
									"end": 4031,
									"name": "PUSH",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 4022,
									"end": 4026,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4019,
									"end": 4032,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4015,
									"end": 4051,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4009,
									"end": 4011,
									"name": "PUSH",
									"source": 7,
									"value": "4E"
								},
								{
									"begin": 3999,
									"end": 4007,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3996,
									"end": 4012,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3991,
									"end": 3993,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 3985,
									"end": 3989,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3982,
									"end": 3994,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3978,
									"end": 4013,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3975,
									"end": 4052,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 3972,
									"end": 4131,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3972,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 3972,
									"end": 4131,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4084,
									"end": 4103,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4084,
									"end": 4103,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4084,
									"end": 4103,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 4116,
									"end": 4121,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 4116,
									"end": 4121,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3972,
									"end": 4131,
									"name": "tag",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 3972,
									"end": 4131,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4163,
									"end": 4197,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 4188,
									"end": 4196,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4182,
									"end": 4186,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4163,
									"end": 4197,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 4163,
									"end": 4197,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4163,
									"end": 4197,
									"name": "tag",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 4163,
									"end": 4197,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4233,
									"end": 4239,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4229,
									"end": 4230,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4225,
									"end": 4231,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4221,
									"end": 4240,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 4212,
									"end": 4219,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4209,
									"end": 4241,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4206,
									"end": 4264,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4206,
									"end": 4264,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 4206,
									"end": 4264,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4244,
									"end": 4262,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 4244,
									"end": 4262,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 4244,
									"end": 4262,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4244,
									"end": 4262,
									"name": "tag",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 4244,
									"end": 4262,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4282,
									"end": 4302,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 4282,
									"end": 4302,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3502,
									"end": 4308,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 3502,
									"end": 4308,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3502,
									"end": 4308,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3502,
									"end": 4308,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3502,
									"end": 4308,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3502,
									"end": 4308,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3502,
									"end": 4308,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4313,
									"end": 4453,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4313,
									"end": 4453,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4371,
									"end": 4376,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4400,
									"end": 4447,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 4441,
									"end": 4445,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 4431,
									"end": 4439,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4427,
									"end": 4446,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4421,
									"end": 4425,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4400,
									"end": 4447,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 4400,
									"end": 4447,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4400,
									"end": 4447,
									"name": "tag",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 4400,
									"end": 4447,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4391,
									"end": 4447,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 4313,
									"end": 4453,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4313,
									"end": 4453,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4458,
									"end": 4626,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 4458,
									"end": 4626,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4531,
									"end": 4540,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4531,
									"end": 4540,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4531,
									"end": 4540,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 4562,
									"end": 4571,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4562,
									"end": 4571,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4579,
									"end": 4594,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4579,
									"end": 4594,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4579,
									"end": 4594,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 4573,
									"end": 4595,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4573,
									"end": 4595,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 4559,
									"end": 4596,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 4549,
									"end": 4620,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 4549,
									"end": 4620,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4600,
									"end": 4618,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 4600,
									"end": 4618,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 4600,
									"end": 4618,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4991,
									"end": 5116,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 4991,
									"end": 5116,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5056,
									"end": 5065,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5056,
									"end": 5065,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5056,
									"end": 5065,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5077,
									"end": 5087,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5077,
									"end": 5087,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5077,
									"end": 5087,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 5074,
									"end": 5110,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5074,
									"end": 5110,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 5074,
									"end": 5110,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5090,
									"end": 5108,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 5090,
									"end": 5108,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 5090,
									"end": 5108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5298,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 5121,
									"end": 5298,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 108,
									"end": 309,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 108,
									"end": 309,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 108,
									"end": 309,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 108,
									"end": 309,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 108,
									"end": 309,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 108,
									"end": 309,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 108,
									"end": 309,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ddb11a8dec5c9c487958cb29a455c38ca4441e2a9733681f2c128d4c140d53b064736f6c63430008140033",
									".code": [
										{
											"begin": 108,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "715018A6"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "715018A6"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "79CC6790"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "F2FDE38B"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "42966C68"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 108,
											"end": 309,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 108,
											"end": 309,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3388,
											"end": 3486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3388,
											"end": 3486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 5665,
											"end": 5862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 5665,
											"end": 5862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4476,
											"end": 4582,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4476,
											"end": 4582,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4476,
											"end": 4582,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4476,
											"end": 4582,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4476,
											"end": 4582,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4476,
											"end": 4582,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4476,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6424,
											"end": 6710,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 6424,
											"end": 6710,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6424,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6424,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 6424,
											"end": 6710,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6424,
											"end": 6710,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6424,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 6424,
											"end": 6710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6424,
											"end": 6710,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 6424,
											"end": 6710,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6424,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 6424,
											"end": 6710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4325,
											"end": 4416,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4325,
											"end": 4416,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4325,
											"end": 4416,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4325,
											"end": 4416,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4407,
											"end": 4409,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7105,
											"end": 7339,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 7105,
											"end": 7339,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 7105,
											"end": 7339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 7105,
											"end": 7339,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7339,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7105,
											"end": 7339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 7105,
											"end": 7339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7339,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 7105,
											"end": 7339,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 7105,
											"end": 7339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1817,
											"end": 1906,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1817,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1817,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1817,
											"end": 1906,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1906,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1817,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1817,
											"end": 1906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1906,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1817,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1817,
											"end": 1906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1906,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1817,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1906,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4640,
											"end": 4765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4740,
											"end": 4758,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4714,
											"end": 4721,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4740,
											"end": 4758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4740,
											"end": 4758,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4740,
											"end": 4758,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4740,
											"end": 4758,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4740,
											"end": 4758,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4740,
											"end": 4758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4740,
											"end": 4758,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4740,
											"end": 4758,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4740,
											"end": 4758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4740,
											"end": 4758,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4740,
											"end": 4758,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4740,
											"end": 4758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2286,
											"end": 2387,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2286,
											"end": 2387,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 2286,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2286,
											"end": 2387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2373,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2212,
											"end": 2373,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2212,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2212,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2212,
											"end": 2373,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2212,
											"end": 2373,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2212,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2212,
											"end": 2373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2212,
											"end": 2373,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2212,
											"end": 2373,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2212,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2212,
											"end": 2373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1631,
											"end": 1716,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1631,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1709,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1703,
											"end": 1709,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1703,
											"end": 1709,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 1716,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1631,
											"end": 1716,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 1631,
											"end": 1716,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 1716,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1631,
											"end": 1716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3599,
											"end": 3701,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3599,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3599,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3599,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3599,
											"end": 3701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7826,
											"end": 8253,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 7826,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7826,
											"end": 8253,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 7826,
											"end": 8253,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 7826,
											"end": 8253,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 7826,
											"end": 8253,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7826,
											"end": 8253,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 7826,
											"end": 8253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7826,
											"end": 8253,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 7826,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7826,
											"end": 8253,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 7826,
											"end": 8253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4961,
											"end": 5150,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 4961,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4961,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4961,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4961,
											"end": 5150,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4961,
											"end": 5150,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4961,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4961,
											"end": 5150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4961,
											"end": 5150,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4961,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4961,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4961,
											"end": 5150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5208,
											"end": 5357,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 5208,
											"end": 5357,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5208,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5208,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 5208,
											"end": 5357,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5208,
											"end": 5357,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5208,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5208,
											"end": 5357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5208,
											"end": 5357,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 5208,
											"end": 5357,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5208,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5208,
											"end": 5357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 2751,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 2536,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2536,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 2536,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 2536,
											"end": 2751,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2536,
											"end": 2751,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2536,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 2536,
											"end": 2751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2536,
											"end": 2751,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 2536,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2536,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 2536,
											"end": 2751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3442,
											"end": 3455,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3474,
											"end": 3479,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3467,
											"end": 3479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3467,
											"end": 3479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5748,
											"end": 5752,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1972,
											"end": 1982,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5802,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1972,
											"end": 1982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 5825,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5827,
											"end": 5833,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5802,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 5802,
											"end": 5834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5802,
											"end": 5834,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 5802,
											"end": 5834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5851,
											"end": 5855,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5844,
											"end": 5855,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5844,
											"end": 5855,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5844,
											"end": 5855,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5665,
											"end": 5862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6424,
											"end": 6710,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 6424,
											"end": 6710,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6551,
											"end": 6555,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1972,
											"end": 1982,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6607,
											"end": 6645,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 6623,
											"end": 6627,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1972,
											"end": 1982,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6638,
											"end": 6644,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6607,
											"end": 6622,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6607,
											"end": 6645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6607,
											"end": 6645,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 6607,
											"end": 6645,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6655,
											"end": 6682,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 6665,
											"end": 6669,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6671,
											"end": 6673,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6675,
											"end": 6681,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6655,
											"end": 6664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 6655,
											"end": 6682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6655,
											"end": 6682,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 6655,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6699,
											"end": 6703,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6699,
											"end": 6703,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 6424,
											"end": 6710,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6424,
											"end": 6710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7339,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 7105,
											"end": 7339,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7197,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1972,
											"end": 1982,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7247,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1972,
											"end": 1982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7263,
											"end": 7270,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7300,
											"end": 7310,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7272,
											"end": 7297,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1972,
											"end": 1982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7263,
											"end": 7270,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7272,
											"end": 7281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 7272,
											"end": 7297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7272,
											"end": 7297,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 7272,
											"end": 7297,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7272,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 7272,
											"end": 7310,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7272,
											"end": 7310,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7272,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 7272,
											"end": 7310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7272,
											"end": 7310,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 7272,
											"end": 7310,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7247,
											"end": 7255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 7247,
											"end": 7311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1817,
											"end": 1906,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1817,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1872,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1972,
											"end": 1982,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1898,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1872,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1872,
											"end": 1899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1872,
											"end": 1899,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1872,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1906,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2286,
											"end": 2387,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2286,
											"end": 2387,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1524,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 1524,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 1524,
											"end": 1537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1524,
											"end": 1537,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 1524,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2350,
											"end": 2380,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 2377,
											"end": 2378,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2350,
											"end": 2380,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2350,
											"end": 2380,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 2350,
											"end": 2380,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2373,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2212,
											"end": 2373,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2304,
											"end": 2311,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1972,
											"end": 1982,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2327,
											"end": 2333,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2288,
											"end": 2334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2334,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2288,
											"end": 2334,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2344,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2350,
											"end": 2357,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2359,
											"end": 2365,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2344,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2344,
											"end": 2366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2344,
											"end": 2366,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2344,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2212,
											"end": 2373,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2212,
											"end": 2373,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2212,
											"end": 2373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3599,
											"end": 3701,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3599,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3655,
											"end": 3668,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3687,
											"end": 3694,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3680,
											"end": 3694,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3680,
											"end": 3694,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3680,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3680,
											"end": 3694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3680,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3680,
											"end": 3694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7826,
											"end": 8253,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 7826,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7919,
											"end": 7923,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1972,
											"end": 1982,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7919,
											"end": 7923,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8000,
											"end": 8025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1972,
											"end": 1982,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8017,
											"end": 8024,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8000,
											"end": 8009,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 8000,
											"end": 8025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8000,
											"end": 8025,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 8000,
											"end": 8025,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7973,
											"end": 8025,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7973,
											"end": 8025,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8063,
											"end": 8078,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8043,
											"end": 8059,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8043,
											"end": 8078,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 8043,
											"end": 8078,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8035,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 8035,
											"end": 8120,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8035,
											"end": 8120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8035,
											"end": 8120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8035,
											"end": 8120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8035,
											"end": 8120,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3598,
											"end": 3600,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8035,
											"end": 8120,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8035,
											"end": 8120,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8035,
											"end": 8120,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3580,
											"end": 3601,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3637,
											"end": 3639,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 3617,
											"end": 3635,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3617,
											"end": 3635,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3617,
											"end": 3635,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3610,
											"end": 3640,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3676,
											"end": 3710,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3656,
											"end": 3674,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3656,
											"end": 3674,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3656,
											"end": 3674,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3649,
											"end": 3711,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3727,
											"end": 3745,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3727,
											"end": 3745,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3727,
											"end": 3745,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3720,
											"end": 3755,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3772,
											"end": 3791,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3772,
											"end": 3791,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8035,
											"end": 8120,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 8035,
											"end": 8120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8035,
											"end": 8120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8035,
											"end": 8120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8035,
											"end": 8120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8035,
											"end": 8120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8035,
											"end": 8120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8035,
											"end": 8120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8035,
											"end": 8120,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8035,
											"end": 8120,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 8035,
											"end": 8120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8214,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 8163,
											"end": 8168,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8170,
											"end": 8177,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8179,
											"end": 8195,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8179,
											"end": 8213,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 8154,
											"end": 8214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4961,
											"end": 5150,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4961,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5040,
											"end": 5044,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1972,
											"end": 1982,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5094,
											"end": 5122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1972,
											"end": 1982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5113,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5115,
											"end": 5121,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5094,
											"end": 5103,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 5094,
											"end": 5122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5208,
											"end": 5357,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5208,
											"end": 5357,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5323,
											"end": 5341,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5341,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5341,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5297,
											"end": 5304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5323,
											"end": 5341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5341,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5341,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5334,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5323,
											"end": 5341,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5323,
											"end": 5341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5341,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5341,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5341,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5323,
											"end": 5341,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5341,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5341,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5350,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5350,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5350,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5350,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5350,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5350,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5350,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5350,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5350,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5350,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5350,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5350,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5350,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5208,
											"end": 5357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 2751,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 2536,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1524,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 1524,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 1524,
											"end": 1537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1524,
											"end": 1537,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 1524,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2620,
											"end": 2642,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2620,
											"end": 2642,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2616,
											"end": 2707,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 2616,
											"end": 2707,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2693,
											"end": 2694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2665,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2665,
											"end": 2696,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2665,
											"end": 2696,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2665,
											"end": 2696,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2665,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2665,
											"end": 2696,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2665,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 2665,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2665,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2665,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2665,
											"end": 2696,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2616,
											"end": 2707,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 2616,
											"end": 2707,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2744,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 2735,
											"end": 2743,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2716,
											"end": 2744,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11342,
											"end": 11712,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 11342,
											"end": 11712,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11473,
											"end": 11492,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11473,
											"end": 11492,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11465,
											"end": 11533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 11465,
											"end": 11533,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11465,
											"end": 11533,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11465,
											"end": 11533,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11465,
											"end": 11533,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11465,
											"end": 11533,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4004,
											"end": 4006,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11465,
											"end": 11533,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11465,
											"end": 11533,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11465,
											"end": 11533,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4007,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4043,
											"end": 4045,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4023,
											"end": 4041,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4023,
											"end": 4041,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4023,
											"end": 4041,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4016,
											"end": 4046,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4082,
											"end": 4116,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4062,
											"end": 4080,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4062,
											"end": 4080,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4062,
											"end": 4080,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4055,
											"end": 4117,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4133,
											"end": 4151,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4133,
											"end": 4151,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4126,
											"end": 4160,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4177,
											"end": 4196,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4177,
											"end": 4196,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11465,
											"end": 11533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3802,
											"end": 4202,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11465,
											"end": 11533,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 11465,
											"end": 11533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11551,
											"end": 11572,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11551,
											"end": 11572,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11543,
											"end": 11611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 11543,
											"end": 11611,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11543,
											"end": 11611,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11543,
											"end": 11611,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11543,
											"end": 11611,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11543,
											"end": 11611,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4409,
											"end": 4411,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11543,
											"end": 11611,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11543,
											"end": 11611,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11543,
											"end": 11611,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4391,
											"end": 4412,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4448,
											"end": 4450,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4421,
											"end": 4451,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4487,
											"end": 4521,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4467,
											"end": 4485,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4467,
											"end": 4485,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4467,
											"end": 4485,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4460,
											"end": 4522,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4538,
											"end": 4556,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4538,
											"end": 4556,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4556,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4531,
											"end": 4563,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4580,
											"end": 4599,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4580,
											"end": 4599,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11543,
											"end": 11611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 4207,
											"end": 4605,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11543,
											"end": 11611,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 11543,
											"end": 11611,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11622,
											"end": 11640,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11640,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11640,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11640,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11622,
											"end": 11640,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11640,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11640,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11633,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 11622,
											"end": 11640,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11622,
											"end": 11640,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11640,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11640,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11640,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11622,
											"end": 11640,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11640,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11640,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11649,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11649,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11649,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11649,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11649,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11649,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11649,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11649,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11649,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11649,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11649,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11649,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11649,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11658,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11658,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11658,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11705,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11705,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11673,
											"end": 11705,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11673,
											"end": 11705,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11673,
											"end": 11705,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 11673,
											"end": 11705,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11705,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11673,
											"end": 11705,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11705,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11705,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11705,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11705,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11705,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 11342,
											"end": 11712,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11342,
											"end": 11712,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11342,
											"end": 11712,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11342,
											"end": 11712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11993,
											"end": 12434,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 11993,
											"end": 12434,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12123,
											"end": 12147,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12150,
											"end": 12175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 12160,
											"end": 12165,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12167,
											"end": 12174,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12150,
											"end": 12159,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 12150,
											"end": 12175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12150,
											"end": 12175,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 12150,
											"end": 12175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12123,
											"end": 12175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12123,
											"end": 12175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12189,
											"end": 12205,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12189,
											"end": 12226,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 12185,
											"end": 12428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 12185,
											"end": 12428,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12270,
											"end": 12276,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12266,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12276,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12276,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12242,
											"end": 12310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 12242,
											"end": 12310,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12242,
											"end": 12310,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12242,
											"end": 12310,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12242,
											"end": 12310,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12242,
											"end": 12310,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4812,
											"end": 4814,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12242,
											"end": 12310,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12242,
											"end": 12310,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12242,
											"end": 12310,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4794,
											"end": 4815,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4851,
											"end": 4853,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 4831,
											"end": 4849,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4831,
											"end": 4849,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4831,
											"end": 4849,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4824,
											"end": 4854,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4890,
											"end": 4921,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4870,
											"end": 4888,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4870,
											"end": 4888,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4888,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4863,
											"end": 4922,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4939,
											"end": 4957,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4939,
											"end": 4957,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12242,
											"end": 12310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 4610,
											"end": 4963,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12242,
											"end": 12310,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 12242,
											"end": 12310,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12352,
											"end": 12403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 12361,
											"end": 12366,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12368,
											"end": 12375,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12396,
											"end": 12402,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12377,
											"end": 12393,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12377,
											"end": 12402,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12352,
											"end": 12360,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 12352,
											"end": 12403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12352,
											"end": 12403,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 12352,
											"end": 12403,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12113,
											"end": 12434,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11993,
											"end": 12434,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11993,
											"end": 12434,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11993,
											"end": 12434,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11993,
											"end": 12434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 9358,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 8707,
											"end": 9358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8833,
											"end": 8851,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8833,
											"end": 8851,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8825,
											"end": 8893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 8825,
											"end": 8893,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8825,
											"end": 8893,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8825,
											"end": 8893,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8825,
											"end": 8893,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8825,
											"end": 8893,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5170,
											"end": 5172,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8825,
											"end": 8893,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8825,
											"end": 8893,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8825,
											"end": 8893,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5152,
											"end": 5173,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5209,
											"end": 5211,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 5189,
											"end": 5207,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5189,
											"end": 5207,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5189,
											"end": 5207,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5182,
											"end": 5212,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5248,
											"end": 5282,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 5228,
											"end": 5246,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5228,
											"end": 5246,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5228,
											"end": 5246,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5221,
											"end": 5283,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5299,
											"end": 5317,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5299,
											"end": 5317,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5299,
											"end": 5317,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5292,
											"end": 5327,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5344,
											"end": 5363,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5344,
											"end": 5363,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8825,
											"end": 8893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 4968,
											"end": 5369,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8825,
											"end": 8893,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 8825,
											"end": 8893,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8911,
											"end": 8927,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8911,
											"end": 8927,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8903,
											"end": 8967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 8903,
											"end": 8967,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8903,
											"end": 8967,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8903,
											"end": 8967,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8903,
											"end": 8967,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8903,
											"end": 8967,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5576,
											"end": 5578,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8903,
											"end": 8967,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8903,
											"end": 8967,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8903,
											"end": 8967,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5558,
											"end": 5579,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5615,
											"end": 5617,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 5595,
											"end": 5613,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5595,
											"end": 5613,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5595,
											"end": 5613,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5588,
											"end": 5618,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5654,
											"end": 5688,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5634,
											"end": 5652,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5634,
											"end": 5652,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5634,
											"end": 5652,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5627,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5705,
											"end": 5723,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5705,
											"end": 5723,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5705,
											"end": 5723,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5698,
											"end": 5731,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5748,
											"end": 5767,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5748,
											"end": 5767,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8903,
											"end": 8967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 5374,
											"end": 5773,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8903,
											"end": 8967,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 8903,
											"end": 8967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9049,
											"end": 9064,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9049,
											"end": 9064,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9027,
											"end": 9046,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9049,
											"end": 9064,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9049,
											"end": 9064,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9049,
											"end": 9064,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9049,
											"end": 9064,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9049,
											"end": 9064,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9049,
											"end": 9064,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9049,
											"end": 9064,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9049,
											"end": 9064,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9049,
											"end": 9064,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9049,
											"end": 9064,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9049,
											"end": 9064,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9082,
											"end": 9103,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9082,
											"end": 9103,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9082,
											"end": 9103,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 9082,
											"end": 9103,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9074,
											"end": 9146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 9074,
											"end": 9146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9074,
											"end": 9146,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9074,
											"end": 9146,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9074,
											"end": 9146,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9074,
											"end": 9146,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5980,
											"end": 5982,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9074,
											"end": 9146,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9074,
											"end": 9146,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9074,
											"end": 9146,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5962,
											"end": 5983,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6019,
											"end": 6021,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 5999,
											"end": 6017,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5999,
											"end": 6017,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5999,
											"end": 6017,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5992,
											"end": 6022,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6058,
											"end": 6092,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 6038,
											"end": 6056,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6038,
											"end": 6056,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6038,
											"end": 6056,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6031,
											"end": 6093,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6109,
											"end": 6127,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6109,
											"end": 6127,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6109,
											"end": 6127,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6102,
											"end": 6138,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6155,
											"end": 6174,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 6155,
											"end": 6174,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9074,
											"end": 9146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 5778,
											"end": 6180,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9074,
											"end": 9146,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 9074,
											"end": 9146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9180,
											"end": 9195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9195,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9195,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9189,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9180,
											"end": 9195,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9195,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9195,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9195,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9180,
											"end": 9195,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9195,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9195,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9195,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9180,
											"end": 9195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9195,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9195,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9198,
											"end": 9218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9198,
											"end": 9218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9198,
											"end": 9218,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9218,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9218,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9251,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9251,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9251,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9251,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9251,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9251,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9251,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9251,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9261,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9261,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9212,
											"end": 9218,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9212,
											"end": 9218,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9261,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 9238,
											"end": 9261,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9212,
											"end": 9218,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9212,
											"end": 9218,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9261,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 9238,
											"end": 9261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9261,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 9238,
											"end": 9261,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9261,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9261,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9261,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9261,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9261,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9261,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9261,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9292,
											"end": 9294,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9277,
											"end": 9303,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9286,
											"end": 9290,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9277,
											"end": 9303,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9303,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9296,
											"end": 9302,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9303,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9277,
											"end": 9303,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 9277,
											"end": 9303,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9277,
											"end": 9303,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 9277,
											"end": 9303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9303,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9277,
											"end": 9303,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9303,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9303,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9303,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9303,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 9314,
											"end": 9351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 10343,
											"end": 10919,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10343,
											"end": 10919,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 10343,
											"end": 10919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10426,
											"end": 10447,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10426,
											"end": 10447,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10418,
											"end": 10485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 10418,
											"end": 10485,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10418,
											"end": 10485,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10418,
											"end": 10485,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10418,
											"end": 10485,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10418,
											"end": 10485,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6387,
											"end": 6389,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10418,
											"end": 10485,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10418,
											"end": 10485,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10418,
											"end": 10485,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6369,
											"end": 6390,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6426,
											"end": 6428,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 6406,
											"end": 6424,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6406,
											"end": 6424,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6406,
											"end": 6424,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6399,
											"end": 6429,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6465,
											"end": 6499,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 6445,
											"end": 6463,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6445,
											"end": 6463,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6445,
											"end": 6463,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6438,
											"end": 6500,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6516,
											"end": 6534,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6516,
											"end": 6534,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6516,
											"end": 6534,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6509,
											"end": 6540,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6557,
											"end": 6576,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 6557,
											"end": 6576,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10418,
											"end": 10485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 6185,
											"end": 6582,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10418,
											"end": 10485,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 10418,
											"end": 10485,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10581,
											"end": 10599,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10581,
											"end": 10599,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10556,
											"end": 10578,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10581,
											"end": 10599,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10581,
											"end": 10599,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10581,
											"end": 10599,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10581,
											"end": 10599,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10581,
											"end": 10599,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10581,
											"end": 10599,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10581,
											"end": 10599,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10581,
											"end": 10599,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10581,
											"end": 10599,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10581,
											"end": 10599,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10581,
											"end": 10599,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10609,
											"end": 10680,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 10609,
											"end": 10680,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10609,
											"end": 10680,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10609,
											"end": 10680,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10609,
											"end": 10680,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10609,
											"end": 10680,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6789,
											"end": 6791,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10609,
											"end": 10680,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10609,
											"end": 10680,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10609,
											"end": 10680,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6771,
											"end": 6792,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6828,
											"end": 6830,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 6808,
											"end": 6826,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6808,
											"end": 6826,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6808,
											"end": 6826,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6801,
											"end": 6831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6867,
											"end": 6901,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
										},
										{
											"begin": 6847,
											"end": 6865,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6847,
											"end": 6865,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 6865,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6840,
											"end": 6902,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6918,
											"end": 6936,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6918,
											"end": 6936,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6918,
											"end": 6936,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6911,
											"end": 6943,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6960,
											"end": 6979,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 6960,
											"end": 6979,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10609,
											"end": 10680,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 6587,
											"end": 6985,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10609,
											"end": 10680,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 10609,
											"end": 10680,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10714,
											"end": 10732,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10732,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10723,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10714,
											"end": 10732,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10732,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10732,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10732,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10714,
											"end": 10732,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10732,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10732,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10732,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10714,
											"end": 10732,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10732,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10735,
											"end": 10758,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10735,
											"end": 10758,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10735,
											"end": 10758,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10758,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10790,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 10778,
											"end": 10800,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10800,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10752,
											"end": 10758,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10752,
											"end": 10758,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10800,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 10778,
											"end": 10800,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10752,
											"end": 10758,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10752,
											"end": 10758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10800,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 10778,
											"end": 10800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10800,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 10778,
											"end": 10800,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10800,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10800,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10800,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10816,
											"end": 10853,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10816,
											"end": 10853,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10842,
											"end": 10843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10842,
											"end": 10843,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10816,
											"end": 10853,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10816,
											"end": 10853,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10816,
											"end": 10853,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10816,
											"end": 10853,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 10816,
											"end": 10853,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10816,
											"end": 10853,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1951,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 1789,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1709,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1703,
											"end": 1709,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1703,
											"end": 1709,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1972,
											"end": 1982,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1848,
											"end": 1871,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 1844,
											"end": 1945,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1972,
											"end": 1982,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 1934,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1894,
											"end": 1934,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1894,
											"end": 1934,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1894,
											"end": 1934,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1894,
											"end": 1934,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1894,
											"end": 1934,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1894,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 1894,
											"end": 1934,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1894,
											"end": 1934,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1894,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1894,
											"end": 1934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2905,
											"end": 3092,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2905,
											"end": 3092,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2997,
											"end": 3003,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2997,
											"end": 3003,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2997,
											"end": 3003,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3013,
											"end": 3030,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3013,
											"end": 3030,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3013,
											"end": 3030,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3013,
											"end": 3030,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3013,
											"end": 3030,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3013,
											"end": 3030,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3013,
											"end": 3030,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3013,
											"end": 3030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3013,
											"end": 3030,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3013,
											"end": 3030,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3045,
											"end": 3085,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3045,
											"end": 3085,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2997,
											"end": 3003,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2997,
											"end": 3003,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2997,
											"end": 3003,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3013,
											"end": 3030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2997,
											"end": 3003,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2997,
											"end": 3003,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3045,
											"end": 3085,
											"name": "PUSH",
											"source": 6,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3045,
											"end": 3085,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 2994,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2978,
											"end": 2994,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3045,
											"end": 3085,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 3092,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2905,
											"end": 3092,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2905,
											"end": 3092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1900,
											"end": 2080,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 1900,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2051,
											"end": 2074,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2074,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1900,
											"end": 2080,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2085,
											"end": 2271,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 2085,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2144,
											"end": 2150,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2199,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2185,
											"end": 2194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2176,
											"end": 2183,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2172,
											"end": 2195,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2168,
											"end": 2200,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2214,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2210,
											"end": 2211,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2203,
											"end": 2215,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 2255,
											"end": 2264,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 2236,
											"end": 2265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2226,
											"end": 2265,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2085,
											"end": 2271,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2085,
											"end": 2271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2276,
											"end": 2479,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 2276,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2410,
											"end": 2412,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2276,
											"end": 2479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2552,
											"end": 2558,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2566,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2613,
											"end": 2615,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2601,
											"end": 2610,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2592,
											"end": 2599,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2588,
											"end": 2611,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2584,
											"end": 2616,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2629,
											"end": 2630,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2626,
											"end": 2627,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2619,
											"end": 2631,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 2671,
											"end": 2680,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 2652,
											"end": 2681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 2734,
											"end": 2736,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2723,
											"end": 2732,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2719,
											"end": 2737,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 2700,
											"end": 2738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2690,
											"end": 2738,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2690,
											"end": 2738,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2484,
											"end": 2744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2828,
											"end": 2829,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2871,
											"end": 2883,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2871,
											"end": 2883,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2871,
											"end": 2883,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2892,
											"end": 2953,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 2892,
											"end": 2953,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2946,
											"end": 2950,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 2938,
											"end": 2944,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2934,
											"end": 2951,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2924,
											"end": 2951,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2924,
											"end": 2951,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2892,
											"end": 2953,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 2892,
											"end": 2953,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2999,
											"end": 3001,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2991,
											"end": 2997,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2988,
											"end": 3002,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2968,
											"end": 2986,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 3003,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3045,
											"end": 3055,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 3040,
											"end": 3043,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3036,
											"end": 3056,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3034,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3026,
											"end": 3057,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3084,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 3077,
											"end": 3078,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3070,
											"end": 3085,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3108,
											"end": 3112,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3105,
											"end": 3106,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3113,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2749,
											"end": 3129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3134,
											"end": 3261,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 3134,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3195,
											"end": 3205,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 3190,
											"end": 3193,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3186,
											"end": 3206,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3183,
											"end": 3184,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3176,
											"end": 3207,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3226,
											"end": 3230,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 3223,
											"end": 3224,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3216,
											"end": 3231,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3254,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3247,
											"end": 3248,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3240,
											"end": 3255,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3266,
											"end": 3391,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 3266,
											"end": 3391,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3331,
											"end": 3340,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3331,
											"end": 3340,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3331,
											"end": 3340,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3352,
											"end": 3362,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3352,
											"end": 3362,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3352,
											"end": 3362,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3349,
											"end": 3385,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3349,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 3349,
											"end": 3385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3365,
											"end": 3383,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 3365,
											"end": 3383,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 3365,
											"end": 3383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6990,
											"end": 7118,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 6990,
											"end": 7118,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7057,
											"end": 7066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7057,
											"end": 7066,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7057,
											"end": 7066,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7078,
											"end": 7089,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7078,
											"end": 7089,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7078,
											"end": 7089,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7075,
											"end": 7112,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7075,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 7075,
											"end": 7112,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7092,
											"end": 7110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 7092,
											"end": 7110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 7092,
											"end": 7110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"burnable-token/Discovery/Context.sol",
								"burnable-token/Discovery/Discovery.sol",
								"burnable-token/Discovery/ERC20.sol",
								"burnable-token/Discovery/ERC20Burnable.sol",
								"burnable-token/Discovery/IERC20.sol",
								"burnable-token/Discovery/IERC20Metadata.sol",
								"burnable-token/Discovery/Ownable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"burnable-token/Discovery/Discovery.sol\":\"DiscoveryCoin\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"burnable-token/Discovery/Context.sol\":{\"keccak256\":\"0xc62564992cc32565eceb4520ec135acbef98399abe1f83c9133d86b631b64afe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d345ef4e0fa7ac043487966f12ac4523f1acbd8a4e2c92bfc8f4afc0a4bf1316\",\"dweb:/ipfs/QmWk48jHWKYoxq6pCDVyhCqeGyyaCqKvHE2WnjruFVjnth\"]},\"burnable-token/Discovery/Discovery.sol\":{\"keccak256\":\"0xf594e1fd389b5dbc3f1c5fe789f47a15b9bda5702f40e18a74ff4d5ec80b4f61\",\"urls\":[\"bzz-raw://beb47d2e78749299581d1f1c250e5bde6263550fe522c92133572d5b68964c27\",\"dweb:/ipfs/QmRCKiWvGfc5jcABDZg8UkUjwVCGjvVRewyx9WGyLeLnjS\"]},\"burnable-token/Discovery/ERC20.sol\":{\"keccak256\":\"0x7b49c295e5cb28392c009101595c3c2309e6b3da11aaa935ae29e23abb46fdc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66940d637044c56133224da7982755a1d17b0b80cffb5e97d74552d3a1adfddb\",\"dweb:/ipfs/QmNnBpCLenYXhVrS7F2YG1zn3Ad58dJa3fCKHZfRrAN8V1\"]},\"burnable-token/Discovery/ERC20Burnable.sol\":{\"keccak256\":\"0x1187d1d37ab46613b91be5821b833c2136c9c05fde7bf3bfc25c37e8fcf77782\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71fb8e09ac803c6f95492d51b2db1dd776420cc84a92444199ee4a90bd0e2702\",\"dweb:/ipfs/QmfKBV4kZi8Kh5bYVycySh7FG4tRCQpfABvNF2UsCHb5Qb\"]},\"burnable-token/Discovery/IERC20.sol\":{\"keccak256\":\"0xbadbd36a2bd1d670e5d7215642a80b8cf9faf60ec1b36077e57088a594a53616\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7032816b896dddf18fc09a3164631d2f831e59ed2b3f52f8bd4ec676c6d082e6\",\"dweb:/ipfs/QmfW93phgyvJ3aEmvdM6oB95Z198uUovrAHLUrcsWipCNr\"]},\"burnable-token/Discovery/IERC20Metadata.sol\":{\"keccak256\":\"0xd8c0a2c34bd23c7a00b2f289ca124f8340589842e2a2995cbf89b5732fb91a17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2f3893466eee5ed49fa58df4e5ea994f93ac77f3ad458794a86084ec03f0534\",\"dweb:/ipfs/QmX8JmnWMsEBgxCSRtyqVdH1Mx3RNvLUnapnvb1cP75tz3\"]},\"burnable-token/Discovery/Ownable.sol\":{\"keccak256\":\"0x98d142c0d3caeda1b935bbcf94f7dbffc403f33899561d20ba75d69ba02dd61e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74ce190869f9be534a416cf202c5757959a8e56090ed5beba5bd99d829ec6f8d\",\"dweb:/ipfs/QmS7RLciLiHM9x2yajmZ28aYZAjoNDeNZ9SfXsSqdWKYqQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 72,
								"contract": "burnable-token/Discovery/Discovery.sol:DiscoveryCoin",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 78,
								"contract": "burnable-token/Discovery/Discovery.sol:DiscoveryCoin",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 80,
								"contract": "burnable-token/Discovery/Discovery.sol:DiscoveryCoin",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 82,
								"contract": "burnable-token/Discovery/Discovery.sol:DiscoveryCoin",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 84,
								"contract": "burnable-token/Discovery/Discovery.sol:DiscoveryCoin",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 798,
								"contract": "burnable-token/Discovery/Discovery.sol:DiscoveryCoin",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"burnable-token/Discovery/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"burnable-token/Discovery/ERC20.sol\":2635:13849  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"burnable-token/Discovery/ERC20.sol\":3210:3323  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"burnable-token/Discovery/ERC20.sol\":3276:3281  _name */\n  0x03\n    /* \"burnable-token/Discovery/ERC20.sol\":3276:3289  _name = name_ */\n  tag_6\n    /* \"burnable-token/Discovery/ERC20.sol\":3284:3289  name_ */\n  dup4\n    /* \"burnable-token/Discovery/ERC20.sol\":3276:3281  _name */\n  dup3\n    /* \"burnable-token/Discovery/ERC20.sol\":3276:3289  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"burnable-token/Discovery/ERC20.sol\":3299:3306  _symbol */\n  0x04\n    /* \"burnable-token/Discovery/ERC20.sol\":3299:3316  _symbol = symbol_ */\n  tag_8\n    /* \"burnable-token/Discovery/ERC20.sol\":3309:3316  symbol_ */\n  dup3\n    /* \"burnable-token/Discovery/ERC20.sol\":3299:3306  _symbol */\n  dup3\n    /* \"burnable-token/Discovery/ERC20.sol\":3299:3316  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"burnable-token/Discovery/ERC20.sol\":3210:3323  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"burnable-token/Discovery/ERC20.sol\":2635:13849  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:986   */\ntag_11:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_19:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_21\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_23\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_24:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_25:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_25)\ntag_27:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":932:947   */\n  swap4\n  dup2\n  add\n    /* \"#utility.yul\":928:952   */\n  swap1\n  swap3\n  add\n    /* \"#utility.yul\":921:956   */\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"#utility.yul\":936:942   */\n  swap5\n    /* \"#utility.yul\":146:986   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":991:1553   */\ntag_3:\n    /* \"#utility.yul\":1090:1096   */\n  0x00\n    /* \"#utility.yul\":1098:1104   */\n  dup1\n    /* \"#utility.yul\":1151:1153   */\n  0x40\n    /* \"#utility.yul\":1139:1148   */\n  dup4\n    /* \"#utility.yul\":1130:1137   */\n  dup6\n    /* \"#utility.yul\":1126:1149   */\n  sub\n    /* \"#utility.yul\":1122:1154   */\n  slt\n    /* \"#utility.yul\":1119:1171   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1167:1168   */\n  0x00\n    /* \"#utility.yul\":1164:1165   */\n  dup1\n    /* \"#utility.yul\":1157:1169   */\n  revert\n    /* \"#utility.yul\":1119:1171   */\ntag_29:\n    /* \"#utility.yul\":1194:1210   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1259:1273   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1256:1290   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1286:1287   */\n  0x00\n    /* \"#utility.yul\":1283:1284   */\n  dup1\n    /* \"#utility.yul\":1276:1288   */\n  revert\n    /* \"#utility.yul\":1256:1290   */\ntag_30:\n    /* \"#utility.yul\":1309:1370   */\n  tag_31\n    /* \"#utility.yul\":1362:1369   */\n  dup7\n    /* \"#utility.yul\":1353:1359   */\n  dup4\n    /* \"#utility.yul\":1342:1351   */\n  dup8\n    /* \"#utility.yul\":1338:1360   */\n  add\n    /* \"#utility.yul\":1309:1370   */\n  tag_11\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1299:1370   */\n  swap4\n  pop\n    /* \"#utility.yul\":1416:1418   */\n  0x20\n    /* \"#utility.yul\":1405:1414   */\n  dup6\n    /* \"#utility.yul\":1401:1419   */\n  add\n    /* \"#utility.yul\":1395:1420   */\n  mload\n    /* \"#utility.yul\":1379:1420   */\n  swap2\n  pop\n    /* \"#utility.yul\":1445:1447   */\n  dup1\n    /* \"#utility.yul\":1435:1443   */\n  dup3\n    /* \"#utility.yul\":1432:1448   */\n  gt\n    /* \"#utility.yul\":1429:1465   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1461:1462   */\n  0x00\n    /* \"#utility.yul\":1458:1459   */\n  dup1\n    /* \"#utility.yul\":1451:1463   */\n  revert\n    /* \"#utility.yul\":1429:1465   */\ntag_32:\n  pop\n    /* \"#utility.yul\":1484:1547   */\n  tag_33\n    /* \"#utility.yul\":1539:1546   */\n  dup6\n    /* \"#utility.yul\":1528:1536   */\n  dup3\n    /* \"#utility.yul\":1517:1526   */\n  dup7\n    /* \"#utility.yul\":1513:1537   */\n  add\n    /* \"#utility.yul\":1484:1547   */\n  tag_11\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1474:1547   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":991:1553   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1558:1938   */\ntag_12:\n    /* \"#utility.yul\":1637:1638   */\n  0x01\n    /* \"#utility.yul\":1633:1645   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1680:1692   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1701:1762   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1755:1759   */\n  0x7f\n    /* \"#utility.yul\":1747:1753   */\n  dup3\n    /* \"#utility.yul\":1743:1760   */\n  and\n    /* \"#utility.yul\":1733:1760   */\n  swap2\n  pop\n    /* \"#utility.yul\":1701:1762   */\ntag_35:\n    /* \"#utility.yul\":1808:1810   */\n  0x20\n    /* \"#utility.yul\":1800:1806   */\n  dup3\n    /* \"#utility.yul\":1797:1811   */\n  lt\n    /* \"#utility.yul\":1777:1795   */\n  dup2\n    /* \"#utility.yul\":1774:1812   */\n  sub\n    /* \"#utility.yul\":1771:1932   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1854:1864   */\n  0x4e487b71\n    /* \"#utility.yul\":1849:1852   */\n  0xe0\n    /* \"#utility.yul\":1845:1865   */\n  shl\n    /* \"#utility.yul\":1842:1843   */\n  0x00\n    /* \"#utility.yul\":1835:1866   */\n  mstore\n    /* \"#utility.yul\":1889:1893   */\n  0x22\n    /* \"#utility.yul\":1886:1887   */\n  0x04\n    /* \"#utility.yul\":1879:1894   */\n  mstore\n    /* \"#utility.yul\":1917:1921   */\n  0x24\n    /* \"#utility.yul\":1914:1915   */\n  0x00\n    /* \"#utility.yul\":1907:1922   */\n  revert\n    /* \"#utility.yul\":1771:1932   */\ntag_36:\n  pop\n    /* \"#utility.yul\":1558:1938   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2069:2614   */\ntag_14:\n    /* \"#utility.yul\":2171:2173   */\n  0x1f\n    /* \"#utility.yul\":2166:2169   */\n  dup3\n    /* \"#utility.yul\":2163:2174   */\n  gt\n    /* \"#utility.yul\":2160:2608   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":2207:2208   */\n  0x00\n    /* \"#utility.yul\":2232:2237   */\n  dup2\n    /* \"#utility.yul\":2228:2230   */\n  dup2\n    /* \"#utility.yul\":2221:2238   */\n  mstore\n    /* \"#utility.yul\":2277:2281   */\n  0x20\n    /* \"#utility.yul\":2273:2275   */\n  dup2\n    /* \"#utility.yul\":2263:2282   */\n  keccak256\n    /* \"#utility.yul\":2347:2349   */\n  0x1f\n    /* \"#utility.yul\":2335:2345   */\n  dup6\n    /* \"#utility.yul\":2331:2350   */\n  add\n    /* \"#utility.yul\":2328:2329   */\n  0x05\n    /* \"#utility.yul\":2324:2351   */\n  shr\n    /* \"#utility.yul\":2318:2322   */\n  dup2\n    /* \"#utility.yul\":2314:2352   */\n  add\n    /* \"#utility.yul\":2383:2387   */\n  0x20\n    /* \"#utility.yul\":2371:2381   */\n  dup7\n    /* \"#utility.yul\":2368:2388   */\n  lt\n    /* \"#utility.yul\":2365:2412   */\n  iszero\n  tag_40\n  jumpi\n  pop\n    /* \"#utility.yul\":2406:2410   */\n  dup1\n    /* \"#utility.yul\":2365:2412   */\ntag_40:\n    /* \"#utility.yul\":2461:2463   */\n  0x1f\n    /* \"#utility.yul\":2456:2459   */\n  dup6\n    /* \"#utility.yul\":2452:2464   */\n  add\n    /* \"#utility.yul\":2449:2450   */\n  0x05\n    /* \"#utility.yul\":2445:2465   */\n  shr\n    /* \"#utility.yul\":2439:2443   */\n  dup3\n    /* \"#utility.yul\":2435:2466   */\n  add\n    /* \"#utility.yul\":2425:2466   */\n  swap2\n  pop\n    /* \"#utility.yul\":2516:2598   */\ntag_41:\n    /* \"#utility.yul\":2534:2536   */\n  dup2\n    /* \"#utility.yul\":2527:2532   */\n  dup2\n    /* \"#utility.yul\":2524:2537   */\n  lt\n    /* \"#utility.yul\":2516:2598   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2579:2596   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2560:2561   */\n  0x01\n    /* \"#utility.yul\":2549:2562   */\n  add\n    /* \"#utility.yul\":2516:2598   */\n  jump(tag_41)\ntag_43:\n    /* \"#utility.yul\":2520:2523   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2160:2608   */\ntag_39:\n    /* \"#utility.yul\":2069:2614   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2790:4142   */\ntag_7:\n    /* \"#utility.yul\":2910:2920   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2932:2962   */\n  dup2\n  gt\n    /* \"#utility.yul\":2929:2985   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2965:2983   */\n  tag_47\n  tag_10\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":2994:3091   */\n  tag_48\n    /* \"#utility.yul\":3084:3090   */\n  dup2\n    /* \"#utility.yul\":3044:3082   */\n  tag_49\n    /* \"#utility.yul\":3076:3080   */\n  dup5\n    /* \"#utility.yul\":3070:3081   */\n  sload\n    /* \"#utility.yul\":3044:3082   */\n  tag_12\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":3038:3042   */\n  dup5\n    /* \"#utility.yul\":2994:3091   */\n  tag_14\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":3146:3150   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3210:3212   */\n  0x1f\n    /* \"#utility.yul\":3199:3213   */\n  dup4\n  gt\n    /* \"#utility.yul\":3227:3228   */\n  0x01\n    /* \"#utility.yul\":3222:3885   */\n  dup2\n  eq\n  tag_51\n  jumpi\n    /* \"#utility.yul\":3929:3930   */\n  0x00\n    /* \"#utility.yul\":3946:3952   */\n  dup5\n    /* \"#utility.yul\":3943:4032   */\n  iszero\n  tag_52\n  jumpi\n  pop\n    /* \"#utility.yul\":3998:4017   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3992:4018   */\n  mload\n    /* \"#utility.yul\":3943:4032   */\ntag_52:\n  not(0x00)\n    /* \"#utility.yul\":2747:2748   */\n  0x03\n    /* \"#utility.yul\":2743:2754   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2739:2763   */\n  shr\n    /* \"#utility.yul\":2735:2764   */\n  not\n    /* \"#utility.yul\":2725:2765   */\n  and\n    /* \"#utility.yul\":2771:2772   */\n  0x01\n    /* \"#utility.yul\":2767:2778   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2722:2779   */\n  or\n    /* \"#utility.yul\":4045:4126   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3192:4136   */\n  jump(tag_43)\n    /* \"#utility.yul\":3222:3885   */\ntag_51:\n    /* \"#utility.yul\":2016:2017   */\n  0x00\n    /* \"#utility.yul\":2009:2023   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2053:2057   */\n  0x20\n    /* \"#utility.yul\":2040:2058   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3258:3278   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3376:3612   */\ntag_55:\n    /* \"#utility.yul\":3390:3397   */\n  dup3\n    /* \"#utility.yul\":3387:3388   */\n  dup2\n    /* \"#utility.yul\":3384:3398   */\n  lt\n    /* \"#utility.yul\":3376:3612   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":3479:3498   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3473:3499   */\n  mload\n    /* \"#utility.yul\":3458:3500   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3571:3598   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3539:3540   */\n  0x01\n    /* \"#utility.yul\":3527:3541   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3406:3425   */\n  dup5\n  add\n    /* \"#utility.yul\":3376:3612   */\n  jump(tag_55)\ntag_57:\n    /* \"#utility.yul\":3380:3383   */\n  pop\n    /* \"#utility.yul\":3640:3646   */\n  dup6\n    /* \"#utility.yul\":3631:3638   */\n  dup3\n    /* \"#utility.yul\":3628:3647   */\n  lt\n    /* \"#utility.yul\":3625:3826   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":3701:3720   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3695:3721   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3784:3785   */\n  0x03\n    /* \"#utility.yul\":3780:3794   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3796:3799   */\n  0xf8\n    /* \"#utility.yul\":3776:3800   */\n  and\n    /* \"#utility.yul\":3772:3809   */\n  shr\n    /* \"#utility.yul\":3768:3810   */\n  not\n    /* \"#utility.yul\":3753:3811   */\n  and\n    /* \"#utility.yul\":3738:3812   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3625:3826   */\ntag_58:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3872:3873   */\n  0x01\n    /* \"#utility.yul\":3856:3870   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3852:3874   */\n  add\n    /* \"#utility.yul\":3839:3875   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2790:4142   */\n  jump\t// out\ntag_16:\n    /* \"burnable-token/Discovery/ERC20.sol\":2635:13849  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"burnable-token/Discovery/ERC20.sol\":2635:13849  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"burnable-token/Discovery/ERC20.sol\":3388:3486  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"burnable-token/Discovery/ERC20.sol\":5665:5862  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"burnable-token/Discovery/ERC20.sol\":5665:5862  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"burnable-token/Discovery/ERC20.sol\":4476:4582  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"burnable-token/Discovery/ERC20.sol\":4563:4575  _totalSupply */\n      sload(0x02)\n        /* \"burnable-token/Discovery/ERC20.sol\":4476:4582  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"burnable-token/Discovery/ERC20.sol\":4476:4582  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"burnable-token/Discovery/ERC20.sol\":6424:6710  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"burnable-token/Discovery/ERC20.sol\":4325:4416  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"burnable-token/Discovery/ERC20.sol\":4407:4409  18 */\n      0x12\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"burnable-token/Discovery/ERC20.sol\":4325:4416  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"burnable-token/Discovery/ERC20.sol\":7105:7339  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"burnable-token/Discovery/ERC20.sol\":4640:4765  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"burnable-token/Discovery/ERC20.sol\":4740:4758  _balances[account] */\n      and\n        /* \"burnable-token/Discovery/ERC20.sol\":4714:4721  uint256 */\n      0x00\n        /* \"burnable-token/Discovery/ERC20.sol\":4740:4758  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"burnable-token/Discovery/ERC20.sol\":4640:4765  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"burnable-token/Discovery/ERC20.sol\":3599:3701  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"burnable-token/Discovery/ERC20.sol\":7826:8253  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"burnable-token/Discovery/ERC20.sol\":4961:5150  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"burnable-token/Discovery/ERC20.sol\":5208:5357  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"burnable-token/Discovery/ERC20.sol\":3388:3486  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"burnable-token/Discovery/ERC20.sol\":3442:3455  string memory */\n      0x60\n        /* \"burnable-token/Discovery/ERC20.sol\":3474:3479  _name */\n      0x03\n        /* \"burnable-token/Discovery/ERC20.sol\":3467:3479  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"burnable-token/Discovery/ERC20.sol\":3388:3486  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"burnable-token/Discovery/ERC20.sol\":5665:5862  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"burnable-token/Discovery/ERC20.sol\":5748:5752  bool */\n      0x00\n        /* \"burnable-token/Discovery/Context.sol\":1972:1982  msg.sender */\n      caller\n        /* \"burnable-token/Discovery/ERC20.sol\":5802:5834  _approve(owner, spender, amount) */\n      tag_73\n        /* \"burnable-token/Discovery/Context.sol\":1972:1982  msg.sender */\n      dup2\n        /* \"burnable-token/Discovery/ERC20.sol\":5818:5825  spender */\n      dup6\n        /* \"burnable-token/Discovery/ERC20.sol\":5827:5833  amount */\n      dup6\n        /* \"burnable-token/Discovery/ERC20.sol\":5802:5810  _approve */\n      tag_74\n        /* \"burnable-token/Discovery/ERC20.sol\":5802:5834  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n        /* \"burnable-token/Discovery/ERC20.sol\":5851:5855  true */\n      0x01\n        /* \"burnable-token/Discovery/ERC20.sol\":5844:5855  return true */\n      swap2\n      pop\n      pop\n        /* \"burnable-token/Discovery/ERC20.sol\":5665:5862  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_70:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"burnable-token/Discovery/ERC20.sol\":6424:6710  function transferFrom(... */\n    tag_32:\n        /* \"burnable-token/Discovery/ERC20.sol\":6551:6555  bool */\n      0x00\n        /* \"burnable-token/Discovery/Context.sol\":1972:1982  msg.sender */\n      caller\n        /* \"burnable-token/Discovery/ERC20.sol\":6607:6645  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"burnable-token/Discovery/ERC20.sol\":6623:6627  from */\n      dup6\n        /* \"burnable-token/Discovery/Context.sol\":1972:1982  msg.sender */\n      dup3\n        /* \"burnable-token/Discovery/ERC20.sol\":6638:6644  amount */\n      dup6\n        /* \"burnable-token/Discovery/ERC20.sol\":6607:6622  _spendAllowance */\n      tag_79\n        /* \"burnable-token/Discovery/ERC20.sol\":6607:6645  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"burnable-token/Discovery/ERC20.sol\":6655:6682  _transfer(from, to, amount) */\n      tag_80\n        /* \"burnable-token/Discovery/ERC20.sol\":6665:6669  from */\n      dup6\n        /* \"burnable-token/Discovery/ERC20.sol\":6671:6673  to */\n      dup6\n        /* \"burnable-token/Discovery/ERC20.sol\":6675:6681  amount */\n      dup6\n        /* \"burnable-token/Discovery/ERC20.sol\":6655:6664  _transfer */\n      tag_81\n        /* \"burnable-token/Discovery/ERC20.sol\":6655:6682  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"burnable-token/Discovery/ERC20.sol\":6699:6703  true */\n      0x01\n      swap5\n        /* \"burnable-token/Discovery/ERC20.sol\":6424:6710  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"burnable-token/Discovery/ERC20.sol\":7105:7339  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"burnable-token/Discovery/ERC20.sol\":7193:7197  bool */\n      0x00\n        /* \"burnable-token/Discovery/Context.sol\":1972:1982  msg.sender */\n      caller\n        /* \"burnable-token/Discovery/ERC20.sol\":7247:7311  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"burnable-token/Discovery/Context.sol\":1972:1982  msg.sender */\n      dup2\n        /* \"burnable-token/Discovery/ERC20.sol\":7263:7270  spender */\n      dup6\n        /* \"burnable-token/Discovery/ERC20.sol\":7300:7310  addedValue */\n      dup6\n        /* \"burnable-token/Discovery/ERC20.sol\":7272:7297  allowance(owner, spender) */\n      tag_86\n        /* \"burnable-token/Discovery/Context.sol\":1972:1982  msg.sender */\n      dup4\n        /* \"burnable-token/Discovery/ERC20.sol\":7263:7270  spender */\n      dup4\n        /* \"burnable-token/Discovery/ERC20.sol\":7272:7281  allowance */\n      tag_61\n        /* \"burnable-token/Discovery/ERC20.sol\":7272:7297  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"burnable-token/Discovery/ERC20.sol\":7272:7310  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"burnable-token/Discovery/ERC20.sol\":7247:7255  _approve */\n      tag_74\n        /* \"burnable-token/Discovery/ERC20.sol\":7247:7311  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"burnable-token/Discovery/ERC20.sol\":3599:3701  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"burnable-token/Discovery/ERC20.sol\":3655:3668  string memory */\n      0x60\n        /* \"burnable-token/Discovery/ERC20.sol\":3687:3694  _symbol */\n      0x04\n        /* \"burnable-token/Discovery/ERC20.sol\":3680:3694  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"burnable-token/Discovery/ERC20.sol\":7826:8253  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"burnable-token/Discovery/ERC20.sol\":7919:7923  bool */\n      0x00\n        /* \"burnable-token/Discovery/Context.sol\":1972:1982  msg.sender */\n      caller\n        /* \"burnable-token/Discovery/ERC20.sol\":7919:7923  bool */\n      dup2\n        /* \"burnable-token/Discovery/ERC20.sol\":8000:8025  allowance(owner, spender) */\n      tag_98\n        /* \"burnable-token/Discovery/Context.sol\":1972:1982  msg.sender */\n      dup3\n        /* \"burnable-token/Discovery/ERC20.sol\":8017:8024  spender */\n      dup7\n        /* \"burnable-token/Discovery/ERC20.sol\":8000:8009  allowance */\n      tag_61\n        /* \"burnable-token/Discovery/ERC20.sol\":8000:8025  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"burnable-token/Discovery/ERC20.sol\":7973:8025  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"burnable-token/Discovery/ERC20.sol\":8063:8078  subtractedValue */\n      dup4\n        /* \"burnable-token/Discovery/ERC20.sol\":8043:8059  currentAllowance */\n      dup2\n        /* \"burnable-token/Discovery/ERC20.sol\":8043:8078  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"burnable-token/Discovery/ERC20.sol\":8035:8120  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3170:3172   */\n      0x20\n        /* \"burnable-token/Discovery/ERC20.sol\":8035:8120  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3152:3173   */\n      mstore\n        /* \"#utility.yul\":3209:3211   */\n      0x25\n        /* \"#utility.yul\":3189:3207   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3182:3212   */\n      mstore\n        /* \"#utility.yul\":3248:3282   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3228:3246   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3221:3283   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3299:3317   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3292:3327   */\n      mstore\n        /* \"#utility.yul\":3344:3363   */\n      0x84\n      add\n        /* \"burnable-token/Discovery/ERC20.sol\":8035:8120  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"burnable-token/Discovery/ERC20.sol\":8154:8214  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"burnable-token/Discovery/ERC20.sol\":8163:8168  owner */\n      dup3\n        /* \"burnable-token/Discovery/ERC20.sol\":8170:8177  spender */\n      dup7\n        /* \"burnable-token/Discovery/ERC20.sol\":8198:8213  subtractedValue */\n      dup7\n        /* \"burnable-token/Discovery/ERC20.sol\":8179:8195  currentAllowance */\n      dup5\n        /* \"burnable-token/Discovery/ERC20.sol\":8179:8213  currentAllowance - subtractedValue */\n      sub\n        /* \"burnable-token/Discovery/ERC20.sol\":8154:8162  _approve */\n      tag_74\n        /* \"burnable-token/Discovery/ERC20.sol\":8154:8214  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"burnable-token/Discovery/ERC20.sol\":4961:5150  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"burnable-token/Discovery/ERC20.sol\":5040:5044  bool */\n      0x00\n        /* \"burnable-token/Discovery/Context.sol\":1972:1982  msg.sender */\n      caller\n        /* \"burnable-token/Discovery/ERC20.sol\":5094:5122  _transfer(owner, to, amount) */\n      tag_73\n        /* \"burnable-token/Discovery/Context.sol\":1972:1982  msg.sender */\n      dup2\n        /* \"burnable-token/Discovery/ERC20.sol\":5111:5113  to */\n      dup6\n        /* \"burnable-token/Discovery/ERC20.sol\":5115:5121  amount */\n      dup6\n        /* \"burnable-token/Discovery/ERC20.sol\":5094:5103  _transfer */\n      tag_81\n        /* \"burnable-token/Discovery/ERC20.sol\":5094:5122  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"burnable-token/Discovery/ERC20.sol\":5208:5357  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"burnable-token/Discovery/ERC20.sol\":5323:5341  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"burnable-token/Discovery/ERC20.sol\":5297:5304  uint256 */\n      0x00\n        /* \"burnable-token/Discovery/ERC20.sol\":5323:5341  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"burnable-token/Discovery/ERC20.sol\":5323:5334  _allowances */\n      0x01\n        /* \"burnable-token/Discovery/ERC20.sol\":5323:5341  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"burnable-token/Discovery/ERC20.sol\":5323:5350  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"burnable-token/Discovery/ERC20.sol\":5208:5357  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"burnable-token/Discovery/ERC20.sol\":11342:11712  function _approve(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"burnable-token/Discovery/ERC20.sol\":11473:11492  owner != address(0) */\n      dup4\n      and\n        /* \"burnable-token/Discovery/ERC20.sol\":11465:11533  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3576:3578   */\n      0x20\n        /* \"burnable-token/Discovery/ERC20.sol\":11465:11533  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3558:3579   */\n      mstore\n        /* \"#utility.yul\":3615:3617   */\n      0x24\n        /* \"#utility.yul\":3595:3613   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3588:3618   */\n      mstore\n        /* \"#utility.yul\":3654:3688   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3634:3652   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3627:3689   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3705:3723   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3698:3732   */\n      mstore\n        /* \"#utility.yul\":3749:3768   */\n      0x84\n      add\n        /* \"burnable-token/Discovery/ERC20.sol\":11465:11533  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3374:3774   */\n      jump\n        /* \"burnable-token/Discovery/ERC20.sol\":11465:11533  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"burnable-token/Discovery/ERC20.sol\":11551:11572  spender != address(0) */\n      dup3\n      and\n        /* \"burnable-token/Discovery/ERC20.sol\":11543:11611  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3981:3983   */\n      0x20\n        /* \"burnable-token/Discovery/ERC20.sol\":11543:11611  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3963:3984   */\n      mstore\n        /* \"#utility.yul\":4020:4022   */\n      0x22\n        /* \"#utility.yul\":4000:4018   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3993:4023   */\n      mstore\n        /* \"#utility.yul\":4059:4093   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4039:4057   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4032:4094   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4110:4128   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4103:4135   */\n      mstore\n        /* \"#utility.yul\":4152:4171   */\n      0x84\n      add\n        /* \"burnable-token/Discovery/ERC20.sol\":11543:11611  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3779:4177   */\n      jump\n        /* \"burnable-token/Discovery/ERC20.sol\":11543:11611  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"burnable-token/Discovery/ERC20.sol\":11622:11640  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"burnable-token/Discovery/ERC20.sol\":11622:11633  _allowances */\n      0x01\n        /* \"burnable-token/Discovery/ERC20.sol\":11622:11640  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"burnable-token/Discovery/ERC20.sol\":11622:11649  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"burnable-token/Discovery/ERC20.sol\":11622:11658  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"burnable-token/Discovery/ERC20.sol\":11673:11705  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"burnable-token/Discovery/ERC20.sol\":11673:11705  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"burnable-token/Discovery/ERC20.sol\":11673:11705  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"burnable-token/Discovery/ERC20.sol\":11342:11712  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"burnable-token/Discovery/ERC20.sol\":11993:12434  function _spendAllowance(... */\n    tag_79:\n        /* \"burnable-token/Discovery/ERC20.sol\":12123:12147  uint256 currentAllowance */\n      0x00\n        /* \"burnable-token/Discovery/ERC20.sol\":12150:12175  allowance(owner, spender) */\n      tag_117\n        /* \"burnable-token/Discovery/ERC20.sol\":12160:12165  owner */\n      dup5\n        /* \"burnable-token/Discovery/ERC20.sol\":12167:12174  spender */\n      dup5\n        /* \"burnable-token/Discovery/ERC20.sol\":12150:12159  allowance */\n      tag_61\n        /* \"burnable-token/Discovery/ERC20.sol\":12150:12175  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"burnable-token/Discovery/ERC20.sol\":12123:12175  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"burnable-token/Discovery/ERC20.sol\":12189:12205  currentAllowance */\n      dup2\n        /* \"burnable-token/Discovery/ERC20.sol\":12189:12226  currentAllowance != type(uint256).max */\n      eq\n        /* \"burnable-token/Discovery/ERC20.sol\":12185:12428  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"burnable-token/Discovery/ERC20.sol\":12270:12276  amount */\n      dup2\n        /* \"burnable-token/Discovery/ERC20.sol\":12250:12266  currentAllowance */\n      dup2\n        /* \"burnable-token/Discovery/ERC20.sol\":12250:12276  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"burnable-token/Discovery/ERC20.sol\":12242:12310  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4384:4386   */\n      0x20\n        /* \"burnable-token/Discovery/ERC20.sol\":12242:12310  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4366:4387   */\n      mstore\n        /* \"#utility.yul\":4423:4425   */\n      0x1d\n        /* \"#utility.yul\":4403:4421   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4396:4426   */\n      mstore\n        /* \"#utility.yul\":4462:4493   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4442:4460   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4435:4494   */\n      mstore\n        /* \"#utility.yul\":4511:4529   */\n      0x64\n      add\n        /* \"burnable-token/Discovery/ERC20.sol\":12242:12310  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_100\n        /* \"#utility.yul\":4182:4535   */\n      jump\n        /* \"burnable-token/Discovery/ERC20.sol\":12242:12310  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_119:\n        /* \"burnable-token/Discovery/ERC20.sol\":12352:12403  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"burnable-token/Discovery/ERC20.sol\":12361:12366  owner */\n      dup5\n        /* \"burnable-token/Discovery/ERC20.sol\":12368:12375  spender */\n      dup5\n        /* \"burnable-token/Discovery/ERC20.sol\":12396:12402  amount */\n      dup5\n        /* \"burnable-token/Discovery/ERC20.sol\":12377:12393  currentAllowance */\n      dup5\n        /* \"burnable-token/Discovery/ERC20.sol\":12377:12402  currentAllowance - amount */\n      sub\n        /* \"burnable-token/Discovery/ERC20.sol\":12352:12360  _approve */\n      tag_74\n        /* \"burnable-token/Discovery/ERC20.sol\":12352:12403  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"burnable-token/Discovery/ERC20.sol\":12113:12434  {... */\n      pop\n        /* \"burnable-token/Discovery/ERC20.sol\":11993:12434  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"burnable-token/Discovery/ERC20.sol\":8707:9358  function _transfer(... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"burnable-token/Discovery/ERC20.sol\":8833:8851  from != address(0) */\n      dup4\n      and\n        /* \"burnable-token/Discovery/ERC20.sol\":8825:8893  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4742:4744   */\n      0x20\n        /* \"burnable-token/Discovery/ERC20.sol\":8825:8893  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4724:4745   */\n      mstore\n        /* \"#utility.yul\":4781:4783   */\n      0x25\n        /* \"#utility.yul\":4761:4779   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4754:4784   */\n      mstore\n        /* \"#utility.yul\":4820:4854   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4800:4818   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4793:4855   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4871:4889   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4864:4899   */\n      mstore\n        /* \"#utility.yul\":4916:4935   */\n      0x84\n      add\n        /* \"burnable-token/Discovery/ERC20.sol\":8825:8893  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4540:4941   */\n      jump\n        /* \"burnable-token/Discovery/ERC20.sol\":8825:8893  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"burnable-token/Discovery/ERC20.sol\":8911:8927  to != address(0) */\n      dup3\n      and\n        /* \"burnable-token/Discovery/ERC20.sol\":8903:8967  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5148:5150   */\n      0x20\n        /* \"burnable-token/Discovery/ERC20.sol\":8903:8967  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5130:5151   */\n      mstore\n        /* \"#utility.yul\":5187:5189   */\n      0x23\n        /* \"#utility.yul\":5167:5185   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5160:5190   */\n      mstore\n        /* \"#utility.yul\":5226:5260   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5206:5224   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5199:5261   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5277:5295   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5270:5303   */\n      mstore\n        /* \"#utility.yul\":5320:5339   */\n      0x84\n      add\n        /* \"burnable-token/Discovery/ERC20.sol\":8903:8967  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4946:5345   */\n      jump\n        /* \"burnable-token/Discovery/ERC20.sol\":8903:8967  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"burnable-token/Discovery/ERC20.sol\":9049:9064  _balances[from] */\n      dup4\n      and\n        /* \"burnable-token/Discovery/ERC20.sol\":9027:9046  uint256 fromBalance */\n      0x00\n        /* \"burnable-token/Discovery/ERC20.sol\":9049:9064  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"burnable-token/Discovery/ERC20.sol\":9082:9103  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"burnable-token/Discovery/ERC20.sol\":9074:9146  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5552:5554   */\n      0x20\n        /* \"burnable-token/Discovery/ERC20.sol\":9074:9146  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5534:5555   */\n      mstore\n        /* \"#utility.yul\":5591:5593   */\n      0x26\n        /* \"#utility.yul\":5571:5589   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5564:5594   */\n      mstore\n        /* \"#utility.yul\":5630:5664   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5610:5628   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5603:5665   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5681:5699   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5674:5710   */\n      mstore\n        /* \"#utility.yul\":5727:5746   */\n      0x84\n      add\n        /* \"burnable-token/Discovery/ERC20.sol\":9074:9146  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"#utility.yul\":5350:5752   */\n      jump\n        /* \"burnable-token/Discovery/ERC20.sol\":9074:9146  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"burnable-token/Discovery/ERC20.sol\":9180:9195  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"burnable-token/Discovery/ERC20.sol\":9180:9189  _balances */\n      0x00\n        /* \"burnable-token/Discovery/ERC20.sol\":9180:9195  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"burnable-token/Discovery/ERC20.sol\":9198:9218  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"burnable-token/Discovery/ERC20.sol\":9180:9218  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"burnable-token/Discovery/ERC20.sol\":9238:9251  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"burnable-token/Discovery/ERC20.sol\":9238:9261  _balances[to] += amount */\n      dup1\n      sload\n        /* \"burnable-token/Discovery/ERC20.sol\":9212:9218  amount */\n      dup5\n      swap3\n        /* \"burnable-token/Discovery/ERC20.sol\":9180:9189  _balances */\n      swap1\n        /* \"burnable-token/Discovery/ERC20.sol\":9238:9261  _balances[to] += amount */\n      tag_135\n      swap1\n        /* \"burnable-token/Discovery/ERC20.sol\":9212:9218  amount */\n      dup5\n      swap1\n        /* \"burnable-token/Discovery/ERC20.sol\":9238:9261  _balances[to] += amount */\n      tag_88\n      jump\t// in\n    tag_135:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"burnable-token/Discovery/ERC20.sol\":9292:9294  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"burnable-token/Discovery/ERC20.sol\":9277:9303  Transfer(from, to, amount) */\n      and\n        /* \"burnable-token/Discovery/ERC20.sol\":9286:9290  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"burnable-token/Discovery/ERC20.sol\":9277:9303  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"burnable-token/Discovery/ERC20.sol\":9296:9302  amount */\n      dup5\n        /* \"burnable-token/Discovery/ERC20.sol\":9277:9303  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_136\n      swap2\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"burnable-token/Discovery/ERC20.sol\":9277:9303  Transfer(from, to, amount) */\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"burnable-token/Discovery/ERC20.sol\":9314:9351  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"burnable-token/Discovery/ERC20.sol\":13018:13139  function _beforeTokenTransfer(... */\n      jump\n        /* \"#utility.yul\":14:562   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_144:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_144)\n    tag_146:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_141:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_148\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_148:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_21:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_150:\n        /* \"#utility.yul\":913:942   */\n      tag_151\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_141\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_31:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_155:\n        /* \"#utility.yul\":1563:1592   */\n      tag_156\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_141\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_157\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_141\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2086   */\n    tag_44:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_160:\n        /* \"#utility.yul\":2051:2080   */\n      tag_161\n        /* \"#utility.yul\":2070:2079   */\n      dup3\n        /* \"#utility.yul\":2051:2080   */\n      tag_141\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":2041:2080   */\n      swap4\n        /* \"#utility.yul\":1900:2086   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2351   */\n    tag_60:\n        /* \"#utility.yul\":2159:2165   */\n      0x00\n        /* \"#utility.yul\":2167:2173   */\n      dup1\n        /* \"#utility.yul\":2220:2222   */\n      0x40\n        /* \"#utility.yul\":2208:2217   */\n      dup4\n        /* \"#utility.yul\":2199:2206   */\n      dup6\n        /* \"#utility.yul\":2195:2218   */\n      sub\n        /* \"#utility.yul\":2191:2223   */\n      slt\n        /* \"#utility.yul\":2188:2240   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":2236:2237   */\n      0x00\n        /* \"#utility.yul\":2233:2234   */\n      dup1\n        /* \"#utility.yul\":2226:2238   */\n      revert\n        /* \"#utility.yul\":2188:2240   */\n    tag_163:\n        /* \"#utility.yul\":2259:2288   */\n      tag_164\n        /* \"#utility.yul\":2278:2287   */\n      dup4\n        /* \"#utility.yul\":2259:2288   */\n      tag_141\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":2249:2288   */\n      swap2\n      pop\n        /* \"#utility.yul\":2307:2345   */\n      tag_165\n        /* \"#utility.yul\":2341:2343   */\n      0x20\n        /* \"#utility.yul\":2330:2339   */\n      dup5\n        /* \"#utility.yul\":2326:2344   */\n      add\n        /* \"#utility.yul\":2307:2345   */\n      tag_141\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":2297:2345   */\n      swap1\n      pop\n        /* \"#utility.yul\":2091:2351   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2356:2736   */\n    tag_65:\n        /* \"#utility.yul\":2435:2436   */\n      0x01\n        /* \"#utility.yul\":2431:2443   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2478:2490   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2499:2560   */\n      tag_167\n      jumpi\n        /* \"#utility.yul\":2553:2557   */\n      0x7f\n        /* \"#utility.yul\":2545:2551   */\n      dup3\n        /* \"#utility.yul\":2541:2558   */\n      and\n        /* \"#utility.yul\":2531:2558   */\n      swap2\n      pop\n        /* \"#utility.yul\":2499:2560   */\n    tag_167:\n        /* \"#utility.yul\":2606:2608   */\n      0x20\n        /* \"#utility.yul\":2598:2604   */\n      dup3\n        /* \"#utility.yul\":2595:2609   */\n      lt\n        /* \"#utility.yul\":2575:2593   */\n      dup2\n        /* \"#utility.yul\":2572:2610   */\n      sub\n        /* \"#utility.yul\":2569:2730   */\n      tag_168\n      jumpi\n        /* \"#utility.yul\":2652:2662   */\n      0x4e487b71\n        /* \"#utility.yul\":2647:2650   */\n      0xe0\n        /* \"#utility.yul\":2643:2663   */\n      shl\n        /* \"#utility.yul\":2640:2641   */\n      0x00\n        /* \"#utility.yul\":2633:2664   */\n      mstore\n        /* \"#utility.yul\":2687:2691   */\n      0x22\n        /* \"#utility.yul\":2684:2685   */\n      0x04\n        /* \"#utility.yul\":2677:2692   */\n      mstore\n        /* \"#utility.yul\":2715:2719   */\n      0x24\n        /* \"#utility.yul\":2712:2713   */\n      0x00\n        /* \"#utility.yul\":2705:2720   */\n      revert\n        /* \"#utility.yul\":2569:2730   */\n    tag_168:\n      pop\n        /* \"#utility.yul\":2356:2736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2741:2963   */\n    tag_88:\n        /* \"#utility.yul\":2806:2815   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2827:2837   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2824:2957   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":2879:2889   */\n      0x4e487b71\n        /* \"#utility.yul\":2874:2877   */\n      0xe0\n        /* \"#utility.yul\":2870:2890   */\n      shl\n        /* \"#utility.yul\":2867:2868   */\n      0x00\n        /* \"#utility.yul\":2860:2891   */\n      mstore\n        /* \"#utility.yul\":2914:2918   */\n      0x11\n        /* \"#utility.yul\":2911:2912   */\n      0x04\n        /* \"#utility.yul\":2904:2919   */\n      mstore\n        /* \"#utility.yul\":2942:2946   */\n      0x24\n        /* \"#utility.yul\":2939:2940   */\n      0x00\n        /* \"#utility.yul\":2932:2947   */\n      revert\n\n    auxdata: 0xa2646970667358221220aec795f2dbe37b9d41667c9e50e95747ed8d3206bdc366ea3cd22a31bd9e47f164736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_101": {
									"entryPoint": null,
									"id": 101,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 439,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 89,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4144:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:776:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:7"
															},
															"nodeType": "YulIf",
															"src": "220:55:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:7",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:7"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:7"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:7"
															},
															"nodeType": "YulIf",
															"src": "353:36:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:7"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:7"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:7",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:7"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:7"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:7",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:7"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:7"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:7"
															},
															"nodeType": "YulIf",
															"src": "536:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:7",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:7"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:7"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:7"
															},
															"nodeType": "YulIf",
															"src": "698:53:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:7"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:7"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:7"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:7"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:7"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:7",
																"statements": []
															},
															"src": "779:133:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "936:6:7"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "944:2:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "932:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "932:15:7"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "949:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "928:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "928:24:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "954:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "921:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "921:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "965:15:7",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "974:6:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "965:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:7",
														"type": ""
													}
												],
												"src": "146:840:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:444:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1155:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1164:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1167:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1157:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1157:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1157:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1130:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1139:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1126:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1126:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1151:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1122:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1122:32:7"
															},
															"nodeType": "YulIf",
															"src": "1119:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1180:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1194:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:16:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1184:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1219:28:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1237:2:7",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1241:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1233:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1233:10:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1229:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1229:18:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1223:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1274:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1283:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1286:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1276:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1276:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1276:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1262:6:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1270:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1259:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1259:14:7"
															},
															"nodeType": "YulIf",
															"src": "1256:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1299:71:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1342:9:7"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1353:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1338:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1338:22:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1362:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1309:28:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1309:61:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1299:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1379:41:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1405:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1416:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1401:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1401:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1395:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:25:7"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1383:8:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1449:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1458:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1461:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1451:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1451:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1451:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1435:8:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1445:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1432:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1432:16:7"
															},
															"nodeType": "YulIf",
															"src": "1429:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1474:73:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1517:9:7"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1528:8:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1513:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1513:24:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1539:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1484:28:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1484:63:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1474:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1067:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1078:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1090:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1098:6:7",
														"type": ""
													}
												],
												"src": "991:562:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1637:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1640:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1633:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1633:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1623:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1654:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1684:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1690:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1680:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1680:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1658:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1731:31:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1733:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1747:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1743:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1743:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1733:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1711:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1704:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1704:26:7"
															},
															"nodeType": "YulIf",
															"src": "1701:61:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1821:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1842:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1849:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1854:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1845:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1845:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1835:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1835:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1835:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1886:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1889:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1879:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1879:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1879:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1914:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1917:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1907:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1907:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1907:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1777:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1800:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1808:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1797:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1797:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1774:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1774:38:7"
															},
															"nodeType": "YulIf",
															"src": "1771:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1593:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1602:6:7",
														"type": ""
													}
												],
												"src": "1558:380:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1999:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2016:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2019:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2009:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2009:14:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2009:14:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2032:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2050:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2053:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2040:9:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2040:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2032:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1982:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1990:4:7",
														"type": ""
													}
												],
												"src": "1943:121:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2150:464:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2183:425:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2197:11:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2207:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "2201:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2228:2:7"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2232:5:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2221:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2221:17:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2221:17:7"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2251:31:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2273:2:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2277:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "2263:9:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2263:19:7"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "2255:4:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2295:57:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2318:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2328:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2335:10:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2347:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2331:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2331:19:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2324:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2324:27:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2314:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2314:38:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2299:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2389:23:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2391:19:7",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2406:4:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2391:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2371:10:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2383:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2368:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:20:7"
																		},
																		"nodeType": "YulIf",
																		"src": "2365:47:7"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2425:41:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2439:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2449:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2456:3:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2461:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2452:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2452:12:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2445:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2445:20:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2435:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2435:31:7"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2429:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2479:24:7",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2492:11:7"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2483:5:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2577:21:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2586:5:7"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2593:2:7"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2579:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2579:17:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2579:17:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2527:5:7"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2534:2:7"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2524:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2524:13:7"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2538:26:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2540:22:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2553:5:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2560:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2549:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2549:13:7"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2540:5:7"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2520:3:7",
																			"statements": []
																		},
																		"src": "2516:82:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2171:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2163:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2163:11:7"
															},
															"nodeType": "YulIf",
															"src": "2160:448:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2122:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2129:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2134:10:7",
														"type": ""
													}
												],
												"src": "2069:545:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2704:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2714:65:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "2729:4:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2747:1:7",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "2750:3:7"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2743:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2743:11:7"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2760:1:7",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2756:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2756:6:7"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "2739:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2739:24:7"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2735:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2735:29:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2725:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2725:40:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2771:1:7",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "2774:3:7"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2767:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2767:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2722:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2722:57:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2714:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2681:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2687:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2695:4:7",
														"type": ""
													}
												],
												"src": "2619:166:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2886:1256:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2896:24:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2916:3:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2910:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2910:10:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "2900:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2963:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2965:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2965:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2965:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2935:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2951:2:7",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2955:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2947:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2947:10:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2959:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2943:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:18:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2932:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2932:30:7"
															},
															"nodeType": "YulIf",
															"src": "2929:56:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3038:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3076:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3070:5:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3070:11:7"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "3044:25:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3044:38:7"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3084:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "2994:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2994:97:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2994:97:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3100:18:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3117:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "3104:9:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3127:23:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3146:4:7",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "3131:11:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3159:24:7",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "3172:11:7"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "3159:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3229:656:7",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3243:35:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3262:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3274:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3270:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3270:7:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3258:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3258:20:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "3247:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3291:49:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3335:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3305:29:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3305:35:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "3295:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3353:10:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3362:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3357:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3440:172:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3465:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3483:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3488:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3479:3:7"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3479:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3473:5:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3473:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3458:6:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3458:42:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3458:42:7"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3517:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3531:6:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3539:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3527:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3527:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3517:6:7"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3558:40:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3575:9:7"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3586:11:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3571:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3571:27:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3558:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3387:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3390:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3384:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3384:14:7"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3399:28:7",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3401:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3410:1:7"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3413:11:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3406:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3406:19:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3401:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3380:3:7",
																					"statements": []
																				},
																				"src": "3376:236:7"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3660:166:7",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3678:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3705:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3710:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3701:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3701:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3695:5:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3695:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3682:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3745:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "3757:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "3784:1:7",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "3787:6:7"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "3780:3:7"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "3780:14:7"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3796:3:7",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "3776:3:7"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3776:24:7"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3806:1:7",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "3802:3:7"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3802:6:7"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "3772:3:7"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3772:37:7"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "3768:3:7"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3768:42:7"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "3753:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3753:58:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3738:6:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3738:74:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3738:74:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3631:7:7"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3640:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3628:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3628:19:7"
																				},
																				"nodeType": "YulIf",
																				"src": "3625:201:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3846:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3860:1:7",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "3863:6:7"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "3856:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3856:14:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3872:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3852:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3852:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3839:6:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3839:36:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3839:36:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3222:663:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3227:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3902:234:7",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3916:14:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3929:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "3920:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3965:67:7",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3983:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4002:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4007:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3998:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3998:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3992:5:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3992:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3983:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "3946:6:7"
																				},
																				"nodeType": "YulIf",
																				"src": "3943:89:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4052:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4111:5:7"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "4118:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "4058:52:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4058:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4045:6:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4045:81:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4045:81:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3894:242:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3202:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3210:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3199:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3199:14:7"
															},
															"nodeType": "YulSwitch",
															"src": "3192:944:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2871:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2877:3:7",
														"type": ""
													}
												],
												"src": "2790:1352:7"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162000b3838038062000b38833981016040819052620000339162000117565b600362000041838262000209565b50600462000050828262000209565b505050620002d1565b634e487b7160e01b5f52604160045260245ffd5b5f82601f8301126200007d575f80fd5b81516001600160401b03808211156200009a576200009a62000059565b604051601f8301601f19908116603f01168101908282118183101715620000c557620000c562000059565b81604052838152602092508683858801011115620000e1575f80fd5b5f91505b83821015620001045785820183015181830184015290820190620000e5565b5f93810190920192909252949350505050565b5f806040838503121562000129575f80fd5b82516001600160401b038082111562000140575f80fd5b6200014e868387016200006d565b9350602085015191508082111562000164575f80fd5b5062000173858286016200006d565b9150509250929050565b600181811c908216806200019257607f821691505b602082108103620001b157634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111562000204575f81815260208120601f850160051c81016020861015620001df5750805b601f850160051c820191505b818110156200020057828155600101620001eb565b5050505b505050565b81516001600160401b0381111562000225576200022562000059565b6200023d816200023684546200017d565b84620001b7565b602080601f83116001811462000273575f84156200025b5750858301515b5f19600386901b1c1916600185901b17855562000200565b5f85815260208120601f198616915b82811015620002a35788860151825594840194600190910190840162000282565b5085821015620002c157878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b61085980620002df5f395ff3fe608060405234801561000f575f80fd5b50600436106100a6575f3560e01c8063395093511161006e578063395093511461011f57806370a082311461013257806395d89b411461015a578063a457c2d714610162578063a9059cbb14610175578063dd62ed3e14610188575f80fd5b806306fdde03146100aa578063095ea7b3146100c857806318160ddd146100eb57806323b872dd146100fd578063313ce56714610110575b5f80fd5b6100b261019b565b6040516100bf91906106b4565b60405180910390f35b6100db6100d636600461071a565b61022b565b60405190151581526020016100bf565b6002545b6040519081526020016100bf565b6100db61010b366004610742565b610244565b604051601281526020016100bf565b6100db61012d36600461071a565b610267565b6100ef61014036600461077b565b6001600160a01b03165f9081526020819052604090205490565b6100b2610288565b6100db61017036600461071a565b610297565b6100db61018336600461071a565b610316565b6100ef61019636600461079b565b610323565b6060600380546101aa906107cc565b80601f01602080910402602001604051908101604052809291908181526020018280546101d6906107cc565b80156102215780601f106101f857610100808354040283529160200191610221565b820191905f5260205f20905b81548152906001019060200180831161020457829003601f168201915b5050505050905090565b5f3361023881858561034d565b60019150505b92915050565b5f33610251858285610470565b61025c8585856104e8565b506001949350505050565b5f336102388185856102798383610323565b6102839190610804565b61034d565b6060600480546101aa906107cc565b5f33816102a48286610323565b9050838110156103095760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61025c828686840361034d565b5f336102388185856104e8565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103af5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610300565b6001600160a01b0382166104105760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610300565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f61047b8484610323565b90505f1981146104e257818110156104d55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610300565b6104e2848484840361034d565b50505050565b6001600160a01b03831661054c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610300565b6001600160a01b0382166105ae5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610300565b6001600160a01b0383165f90815260208190526040902054818110156106255760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610300565b6001600160a01b038085165f9081526020819052604080822085850390559185168152908120805484929061065b908490610804565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106a791815260200190565b60405180910390a36104e2565b5f6020808352835180828501525f5b818110156106df578581018301518582016040015282016106c3565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610715575f80fd5b919050565b5f806040838503121561072b575f80fd5b610734836106ff565b946020939093013593505050565b5f805f60608486031215610754575f80fd5b61075d846106ff565b925061076b602085016106ff565b9150604084013590509250925092565b5f6020828403121561078b575f80fd5b610794826106ff565b9392505050565b5f80604083850312156107ac575f80fd5b6107b5836106ff565b91506107c3602084016106ff565b90509250929050565b600181811c908216806107e057607f821691505b6020821081036107fe57634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561023e57634e487b7160e01b5f52601160045260245ffdfea2646970667358221220aec795f2dbe37b9d41667c9e50e95747ed8d3206bdc366ea3cd22a31bd9e47f164736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB38 CODESIZE SUB DUP1 PUSH3 0xB38 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x33 SWAP2 PUSH3 0x117 JUMP JUMPDEST PUSH1 0x3 PUSH3 0x41 DUP4 DUP3 PUSH3 0x209 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x50 DUP3 DUP3 PUSH3 0x209 JUMP JUMPDEST POP POP POP PUSH3 0x2D1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x7D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9A JUMPI PUSH3 0x9A PUSH3 0x59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xC5 JUMPI PUSH3 0xC5 PUSH3 0x59 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xE1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x104 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xE5 JUMP JUMPDEST PUSH0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x129 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x140 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH3 0x14E DUP7 DUP4 DUP8 ADD PUSH3 0x6D JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x164 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH3 0x173 DUP6 DUP3 DUP7 ADD PUSH3 0x6D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x192 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1B1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x204 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1DF JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x200 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1EB JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x225 JUMPI PUSH3 0x225 PUSH3 0x59 JUMP JUMPDEST PUSH3 0x23D DUP2 PUSH3 0x236 DUP5 SLOAD PUSH3 0x17D JUMP JUMPDEST DUP5 PUSH3 0x1B7 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x273 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x25B JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x200 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2A3 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x282 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2C1 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x859 DUP1 PUSH3 0x2DF PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x188 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x110 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x71A JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x742 JUMP JUMPDEST PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x71A JUMP JUMPDEST PUSH2 0x267 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x77B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x288 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x71A JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x71A JUMP JUMPDEST PUSH2 0x316 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x79B JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x7CC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D6 SWAP1 PUSH2 0x7CC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x221 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x221 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x204 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x251 DUP6 DUP3 DUP6 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x25C DUP6 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x279 DUP4 DUP4 PUSH2 0x323 JUMP JUMPDEST PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x804 JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x7CC JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x2A4 DUP3 DUP7 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x410 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x47B DUP5 DUP5 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x4E2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x300 JUMP JUMPDEST PUSH2 0x4E2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x65B SWAP1 DUP5 SWAP1 PUSH2 0x804 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6A7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E2 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6DF JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6C3 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x715 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x72B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x734 DUP4 PUSH2 0x6FF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x754 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x75D DUP5 PUSH2 0x6FF JUMP JUMPDEST SWAP3 POP PUSH2 0x76B PUSH1 0x20 DUP6 ADD PUSH2 0x6FF JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x78B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x794 DUP3 PUSH2 0x6FF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7AC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7B5 DUP4 PUSH2 0x6FF JUMP JUMPDEST SWAP2 POP PUSH2 0x7C3 PUSH1 0x20 DUP5 ADD PUSH2 0x6FF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7E0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7FE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x23E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE 0xC7 SWAP6 CALLCODE 0xDB 0xE3 PUSH28 0x9D41667C9E50E95747ED8D3206BDC366EA3CD22A31BD9E47F164736F PUSH13 0x63430008140033000000000000 ",
							"sourceMap": "2635:11214:2:-:0;;;3210:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3276:5;:13;3284:5;3276;:13;:::i;:::-;-1:-1:-1;3299:7:2;:17;3309:7;3299;:17;:::i;:::-;;3210:113;;2635:11214;;14:127:7;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:7;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:7;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:7:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:7;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:7;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:7;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:7;;;3992:26;3943:89;-1:-1:-1;;2747:1:7;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:7;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:7;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:7;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:7:o;:::-;2635:11214:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_641": {
									"entryPoint": null,
									"id": 641,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_576": {
									"entryPoint": 845,
									"id": 576,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_630": {
									"entryPoint": null,
									"id": 630,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_619": {
									"entryPoint": 1136,
									"id": 619,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_403": {
									"entryPoint": 1256,
									"id": 403,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_198": {
									"entryPoint": 803,
									"id": 198,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_223": {
									"entryPoint": 555,
									"id": 223,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_155": {
									"entryPoint": null,
									"id": 155,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_131": {
									"entryPoint": null,
									"id": 131,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_326": {
									"entryPoint": 663,
									"id": 326,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_285": {
									"entryPoint": 615,
									"id": 285,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_111": {
									"entryPoint": 411,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_121": {
									"entryPoint": 648,
									"id": 121,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_141": {
									"entryPoint": null,
									"id": 141,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_256": {
									"entryPoint": 580,
									"id": 256,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_180": {
									"entryPoint": 790,
									"id": 180,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1791,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1915,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1818,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1716,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2052,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1996,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5754:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:427:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:7",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:7",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:7"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:7"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:7"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:7"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:7",
																"statements": []
															},
															"src": "294:140:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:7"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "483:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "443:42:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "443:42:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "494:62:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "537:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "546:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "553:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:54:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:7",
														"type": ""
													}
												],
												"src": "14:548:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "616:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "626:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "718:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "727:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "730:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "703:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "708:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "712:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "667:50:7"
															},
															"nodeType": "YulIf",
															"src": "664:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "595:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "606:5:7",
														"type": ""
													}
												],
												"src": "567:173:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "832:167:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "878:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "887:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "890:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "874:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:32:7"
															},
															"nodeType": "YulIf",
															"src": "842:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "903:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "913:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "951:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "989:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "961:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "790:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "801:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "813:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "821:6:7",
														"type": ""
													}
												],
												"src": "745:254:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1099:92:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1109:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1090:4:7",
														"type": ""
													}
												],
												"src": "1004:187:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1297:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1307:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1266:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1277:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1288:4:7",
														"type": ""
													}
												],
												"src": "1196:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1482:224:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1528:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1495:32:7"
															},
															"nodeType": "YulIf",
															"src": "1492:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1553:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1563:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1601:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1658:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:32:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1432:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1443:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1455:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1463:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1471:6:7",
														"type": ""
													}
												],
												"src": "1378:328:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1808:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1818:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1826:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1777:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1788:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1799:4:7",
														"type": ""
													}
												],
												"src": "1711:184:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1970:116:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2016:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1983:32:7"
															},
															"nodeType": "YulIf",
															"src": "1980:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2041:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2070:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2051:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1936:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1947:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1959:6:7",
														"type": ""
													}
												],
												"src": "1900:186:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2178:173:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2224:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2233:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2236:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2226:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2226:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2226:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2199:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2208:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2195:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2195:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2220:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2191:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2191:32:7"
															},
															"nodeType": "YulIf",
															"src": "2188:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2249:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2278:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2259:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2259:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2249:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2297:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2330:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2341:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2326:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2326:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2307:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2307:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2297:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2136:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2147:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2159:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2167:6:7",
														"type": ""
													}
												],
												"src": "2091:260:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2411:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2421:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2435:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2438:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2431:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2431:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2421:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2452:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2482:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2488:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2478:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2478:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2456:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2529:31:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2531:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2545:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2553:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2541:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2541:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2509:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2502:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2502:26:7"
															},
															"nodeType": "YulIf",
															"src": "2499:61:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2619:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2640:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2647:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2652:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2643:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2643:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2633:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2633:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2633:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2684:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2687:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2677:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2677:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2677:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2712:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2715:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2705:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2705:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2705:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2575:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2598:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2606:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2595:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2595:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2572:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2572:38:7"
															},
															"nodeType": "YulIf",
															"src": "2569:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2391:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2400:6:7",
														"type": ""
													}
												],
												"src": "2356:380:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2789:174:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2799:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2810:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2813:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2806:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2806:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2799:3:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2846:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2867:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2874:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2879:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2870:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2870:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2860:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2860:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2860:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2911:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2914:4:7",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2904:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2904:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2904:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2939:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2942:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2932:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2932:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2932:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2830:1:7"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "2833:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2827:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2827:10:7"
															},
															"nodeType": "YulIf",
															"src": "2824:133:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2772:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2775:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2781:3:7",
														"type": ""
													}
												],
												"src": "2741:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3142:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3159:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3170:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3152:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3152:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3152:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3193:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3204:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3189:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3189:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3209:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3182:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3182:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3182:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3232:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3243:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3228:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3228:18:7"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3248:34:7",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3221:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3221:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3221:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3303:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3314:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3299:18:7"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3319:7:7",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3292:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3292:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3292:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3336:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3348:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3359:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3344:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3344:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3336:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3119:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3133:4:7",
														"type": ""
													}
												],
												"src": "2968:401:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3548:226:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3565:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3576:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3558:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3558:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3558:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3599:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3610:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3595:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3595:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3615:2:7",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3588:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3588:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3588:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3638:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3649:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3634:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3634:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3654:34:7",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3627:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3627:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3627:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3709:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3720:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3705:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3705:18:7"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3725:6:7",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3698:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3698:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3698:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3741:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3753:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3764:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3749:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3749:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3741:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3525:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3539:4:7",
														"type": ""
													}
												],
												"src": "3374:400:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3953:224:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3970:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3981:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3963:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3963:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3963:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4004:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4015:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4000:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4000:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4020:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3993:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3993:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3993:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4043:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4054:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4039:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4039:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4059:34:7",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4032:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4032:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4032:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4114:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4125:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4110:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4110:18:7"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4130:4:7",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4103:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4103:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4103:32:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4144:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4156:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4167:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4152:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4152:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4144:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3930:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3944:4:7",
														"type": ""
													}
												],
												"src": "3779:398:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4356:179:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4373:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4366:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4366:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4366:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4407:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4418:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4403:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4423:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4396:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4396:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4396:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4446:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4457:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4442:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4442:18:7"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4462:31:7",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4435:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4435:59:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4435:59:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4503:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4515:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4526:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4511:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4511:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4503:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4333:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4347:4:7",
														"type": ""
													}
												],
												"src": "4182:353:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4714:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4731:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4742:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4724:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4724:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4724:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4765:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4776:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4761:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4761:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4781:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4754:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4754:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4754:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4804:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4815:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4800:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4800:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4820:34:7",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4793:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4793:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4793:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4875:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4886:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4871:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4871:18:7"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4891:7:7",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4864:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4864:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4864:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4908:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4920:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4931:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4916:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4916:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4908:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4691:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4705:4:7",
														"type": ""
													}
												],
												"src": "4540:401:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:225:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5137:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5148:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5130:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5130:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5130:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5171:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5182:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5167:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5167:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5187:2:7",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5160:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5160:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5160:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5210:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5221:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5206:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5206:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5226:34:7",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5199:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5199:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5199:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5281:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5292:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5277:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5277:18:7"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5297:5:7",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5270:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5270:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5270:33:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5312:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5324:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5335:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5320:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5320:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5312:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5097:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5111:4:7",
														"type": ""
													}
												],
												"src": "4946:399:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5524:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5541:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5552:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5534:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5534:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5534:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5575:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5586:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5571:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5571:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5591:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5564:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5564:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5564:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5614:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5625:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5610:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5610:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5630:34:7",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5603:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5603:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5603:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5685:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5696:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5681:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5681:18:7"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5701:8:7",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5674:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5674:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5674:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5719:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5731:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5742:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5727:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5727:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5719:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5501:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5515:4:7",
														"type": ""
													}
												],
												"src": "5350:402:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100a6575f3560e01c8063395093511161006e578063395093511461011f57806370a082311461013257806395d89b411461015a578063a457c2d714610162578063a9059cbb14610175578063dd62ed3e14610188575f80fd5b806306fdde03146100aa578063095ea7b3146100c857806318160ddd146100eb57806323b872dd146100fd578063313ce56714610110575b5f80fd5b6100b261019b565b6040516100bf91906106b4565b60405180910390f35b6100db6100d636600461071a565b61022b565b60405190151581526020016100bf565b6002545b6040519081526020016100bf565b6100db61010b366004610742565b610244565b604051601281526020016100bf565b6100db61012d36600461071a565b610267565b6100ef61014036600461077b565b6001600160a01b03165f9081526020819052604090205490565b6100b2610288565b6100db61017036600461071a565b610297565b6100db61018336600461071a565b610316565b6100ef61019636600461079b565b610323565b6060600380546101aa906107cc565b80601f01602080910402602001604051908101604052809291908181526020018280546101d6906107cc565b80156102215780601f106101f857610100808354040283529160200191610221565b820191905f5260205f20905b81548152906001019060200180831161020457829003601f168201915b5050505050905090565b5f3361023881858561034d565b60019150505b92915050565b5f33610251858285610470565b61025c8585856104e8565b506001949350505050565b5f336102388185856102798383610323565b6102839190610804565b61034d565b6060600480546101aa906107cc565b5f33816102a48286610323565b9050838110156103095760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61025c828686840361034d565b5f336102388185856104e8565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103af5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610300565b6001600160a01b0382166104105760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610300565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f61047b8484610323565b90505f1981146104e257818110156104d55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610300565b6104e2848484840361034d565b50505050565b6001600160a01b03831661054c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610300565b6001600160a01b0382166105ae5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610300565b6001600160a01b0383165f90815260208190526040902054818110156106255760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610300565b6001600160a01b038085165f9081526020819052604080822085850390559185168152908120805484929061065b908490610804565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106a791815260200190565b60405180910390a36104e2565b5f6020808352835180828501525f5b818110156106df578581018301518582016040015282016106c3565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610715575f80fd5b919050565b5f806040838503121561072b575f80fd5b610734836106ff565b946020939093013593505050565b5f805f60608486031215610754575f80fd5b61075d846106ff565b925061076b602085016106ff565b9150604084013590509250925092565b5f6020828403121561078b575f80fd5b610794826106ff565b9392505050565b5f80604083850312156107ac575f80fd5b6107b5836106ff565b91506107c3602084016106ff565b90509250929050565b600181811c908216806107e057607f821691505b6020821081036107fe57634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561023e57634e487b7160e01b5f52601160045260245ffdfea2646970667358221220aec795f2dbe37b9d41667c9e50e95747ed8d3206bdc366ea3cd22a31bd9e47f164736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x188 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x110 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x71A JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x742 JUMP JUMPDEST PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x71A JUMP JUMPDEST PUSH2 0x267 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x77B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x288 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x71A JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x71A JUMP JUMPDEST PUSH2 0x316 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x79B JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x7CC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D6 SWAP1 PUSH2 0x7CC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x221 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x221 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x204 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x251 DUP6 DUP3 DUP6 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x25C DUP6 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x279 DUP4 DUP4 PUSH2 0x323 JUMP JUMPDEST PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x804 JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x7CC JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x2A4 DUP3 DUP7 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x410 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x47B DUP5 DUP5 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x4E2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x300 JUMP JUMPDEST PUSH2 0x4E2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x65B SWAP1 DUP5 SWAP1 PUSH2 0x804 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6A7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E2 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6DF JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6C3 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x715 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x72B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x734 DUP4 PUSH2 0x6FF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x754 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x75D DUP5 PUSH2 0x6FF JUMP JUMPDEST SWAP3 POP PUSH2 0x76B PUSH1 0x20 DUP6 ADD PUSH2 0x6FF JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x78B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x794 DUP3 PUSH2 0x6FF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7AC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7B5 DUP4 PUSH2 0x6FF JUMP JUMPDEST SWAP2 POP PUSH2 0x7C3 PUSH1 0x20 DUP5 ADD PUSH2 0x6FF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7E0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7FE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x23E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE 0xC7 SWAP6 CALLCODE 0xDB 0xE3 PUSH28 0x9D41667C9E50E95747ED8D3206BDC366EA3CD22A31BD9E47F164736F PUSH13 0x63430008140033000000000000 ",
							"sourceMap": "2635:11214:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3388:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5665:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:7;;1162:22;1144:41;;1132:2;1117:18;5665:197:2;1004:187:7;4476:106:2;4563:12;;4476:106;;;1342:25:7;;;1330:2;1315:18;4476:106:2;1196:177:7;6424:286:2;;;;;;:::i;:::-;;:::i;4325:91::-;;;4407:2;1853:36:7;;1841:2;1826:18;4325:91:2;1711:184:7;7105:234:2;;;;;;:::i;:::-;;:::i;4640:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4740:18:2;4714:7;4740:18;;;;;;;;;;;;4640:125;3599:102;;;:::i;7826:427::-;;;;;;:::i;:::-;;:::i;4961:189::-;;;;;;:::i;:::-;;:::i;5208:149::-;;;;;;:::i;:::-;;:::i;3388:98::-;3442:13;3474:5;3467:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3388:98;:::o;5665:197::-;5748:4;1972:10:0;5802:32:2;1972:10:0;5818:7:2;5827:6;5802:8;:32::i;:::-;5851:4;5844:11;;;5665:197;;;;;:::o;6424:286::-;6551:4;1972:10:0;6607:38:2;6623:4;1972:10:0;6638:6:2;6607:15;:38::i;:::-;6655:27;6665:4;6671:2;6675:6;6655:9;:27::i;:::-;-1:-1:-1;6699:4:2;;6424:286;-1:-1:-1;;;;6424:286:2:o;7105:234::-;7193:4;1972:10:0;7247:64:2;1972:10:0;7263:7:2;7300:10;7272:25;1972:10:0;7263:7:2;7272:9;:25::i;:::-;:38;;;;:::i;:::-;7247:8;:64::i;3599:102::-;3655:13;3687:7;3680:14;;;;;:::i;7826:427::-;7919:4;1972:10:0;7919:4:2;8000:25;1972:10:0;8017:7:2;8000:9;:25::i;:::-;7973:52;;8063:15;8043:16;:35;;8035:85;;;;-1:-1:-1;;;8035:85:2;;3170:2:7;8035:85:2;;;3152:21:7;3209:2;3189:18;;;3182:30;3248:34;3228:18;;;3221:62;-1:-1:-1;;;3299:18:7;;;3292:35;3344:19;;8035:85:2;;;;;;;;;8154:60;8163:5;8170:7;8198:15;8179:16;:34;8154:8;:60::i;4961:189::-;5040:4;1972:10:0;5094:28:2;1972:10:0;5111:2:2;5115:6;5094:9;:28::i;5208:149::-;-1:-1:-1;;;;;5323:18:2;;;5297:7;5323:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;5208:149::o;11342:370::-;-1:-1:-1;;;;;11473:19:2;;11465:68;;;;-1:-1:-1;;;11465:68:2;;3576:2:7;11465:68:2;;;3558:21:7;3615:2;3595:18;;;3588:30;3654:34;3634:18;;;3627:62;-1:-1:-1;;;3705:18:7;;;3698:34;3749:19;;11465:68:2;3374:400:7;11465:68:2;-1:-1:-1;;;;;11551:21:2;;11543:68;;;;-1:-1:-1;;;11543:68:2;;3981:2:7;11543:68:2;;;3963:21:7;4020:2;4000:18;;;3993:30;4059:34;4039:18;;;4032:62;-1:-1:-1;;;4110:18:7;;;4103:32;4152:19;;11543:68:2;3779:398:7;11543:68:2;-1:-1:-1;;;;;11622:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11673:32;;1342:25:7;;;11673:32:2;;1315:18:7;11673:32:2;;;;;;;11342:370;;;:::o;11993:441::-;12123:24;12150:25;12160:5;12167:7;12150:9;:25::i;:::-;12123:52;;-1:-1:-1;;12189:16:2;:37;12185:243;;12270:6;12250:16;:26;;12242:68;;;;-1:-1:-1;;;12242:68:2;;4384:2:7;12242:68:2;;;4366:21:7;4423:2;4403:18;;;4396:30;4462:31;4442:18;;;4435:59;4511:18;;12242:68:2;4182:353:7;12242:68:2;12352:51;12361:5;12368:7;12396:6;12377:16;:25;12352:8;:51::i;:::-;12113:321;11993:441;;;:::o;8707:651::-;-1:-1:-1;;;;;8833:18:2;;8825:68;;;;-1:-1:-1;;;8825:68:2;;4742:2:7;8825:68:2;;;4724:21:7;4781:2;4761:18;;;4754:30;4820:34;4800:18;;;4793:62;-1:-1:-1;;;4871:18:7;;;4864:35;4916:19;;8825:68:2;4540:401:7;8825:68:2;-1:-1:-1;;;;;8911:16:2;;8903:64;;;;-1:-1:-1;;;8903:64:2;;5148:2:7;8903:64:2;;;5130:21:7;5187:2;5167:18;;;5160:30;5226:34;5206:18;;;5199:62;-1:-1:-1;;;5277:18:7;;;5270:33;5320:19;;8903:64:2;4946:399:7;8903:64:2;-1:-1:-1;;;;;9049:15:2;;9027:19;9049:15;;;;;;;;;;;9082:21;;;;9074:72;;;;-1:-1:-1;;;9074:72:2;;5552:2:7;9074:72:2;;;5534:21:7;5591:2;5571:18;;;5564:30;5630:34;5610:18;;;5603:62;-1:-1:-1;;;5681:18:7;;;5674:36;5727:19;;9074:72:2;5350:402:7;9074:72:2;-1:-1:-1;;;;;9180:15:2;;;:9;:15;;;;;;;;;;;9198:20;;;9180:38;;9238:13;;;;;;;;:23;;9212:6;;9180:9;9238:23;;9212:6;;9238:23;:::i;:::-;;;;;;;;9292:2;-1:-1:-1;;;;;9277:26:2;9286:4;-1:-1:-1;;;;;9277:26:2;;9296:6;9277:26;;;;1342:25:7;;1330:2;1315:18;;1196:177;9277:26:2;;;;;;;;9314:37;13018:121;14:548:7;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:7;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:7:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:7:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;2741:222::-;2806:9;;;2827:10;;;2824:133;;;2879:10;2874:3;2870:20;2867:1;2860:31;2914:4;2911:1;2904:15;2942:4;2939:1;2932:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "427400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24624",
								"balanceOf(address)": "2559",
								"decimals()": "265",
								"decreaseAllowance(address,uint256)": "27011",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2325",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2635,
									"end": 13849,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 2635,
									"end": 13849,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2635,
									"end": 13849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 3210,
									"end": 3323,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3276,
									"end": 3281,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 3276,
									"end": 3289,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 3284,
									"end": 3289,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3276,
									"end": 3281,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3276,
									"end": 3289,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 3276,
									"end": 3289,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3276,
									"end": 3289,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 3276,
									"end": 3289,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3299,
									"end": 3306,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 3299,
									"end": 3316,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 3309,
									"end": 3316,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3299,
									"end": 3306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3299,
									"end": 3316,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 3299,
									"end": 3316,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3299,
									"end": 3316,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 3299,
									"end": 3316,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3299,
									"end": 3316,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3323,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2635,
									"end": 13849,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 2635,
									"end": 13849,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 146,
									"end": 986,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 986,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 7,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 947,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 932,
									"end": 947,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 932,
									"end": 947,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 928,
									"end": 952,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 921,
									"end": 956,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 936,
									"end": 942,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 146,
									"end": 986,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 986,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1090,
									"end": 1096,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1104,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1151,
									"end": 1153,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1139,
									"end": 1148,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1130,
									"end": 1137,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1126,
									"end": 1149,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1122,
									"end": 1154,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1167,
									"end": 1168,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1164,
									"end": 1165,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1157,
									"end": 1169,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1286,
									"end": 1287,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1283,
									"end": 1284,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1276,
									"end": 1288,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 1362,
									"end": 1369,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1353,
									"end": 1359,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1342,
									"end": 1351,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1338,
									"end": 1360,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 1309,
									"end": 1370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1416,
									"end": 1418,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1405,
									"end": 1414,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1401,
									"end": 1419,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1395,
									"end": 1420,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1445,
									"end": 1447,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1435,
									"end": 1443,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1432,
									"end": 1448,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1461,
									"end": 1462,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1458,
									"end": 1459,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1451,
									"end": 1463,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 1539,
									"end": 1546,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1536,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1526,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1513,
									"end": 1537,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 1484,
									"end": 1547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1553,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1637,
									"end": 1638,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1755,
									"end": 1759,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 1747,
									"end": 1753,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1743,
									"end": 1760,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1808,
									"end": 1810,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1800,
									"end": 1806,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1797,
									"end": 1811,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1777,
									"end": 1795,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1774,
									"end": 1812,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1854,
									"end": 1864,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 1849,
									"end": 1852,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 1845,
									"end": 1865,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1842,
									"end": 1843,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1835,
									"end": 1866,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1889,
									"end": 1893,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1886,
									"end": 1887,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1879,
									"end": 1894,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1917,
									"end": 1921,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1914,
									"end": 1915,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1907,
									"end": 1922,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1558,
									"end": 1938,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2171,
									"end": 2173,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2163,
									"end": 2174,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2207,
									"end": 2208,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2232,
									"end": 2237,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2228,
									"end": 2230,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2221,
									"end": 2238,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2277,
									"end": 2281,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2273,
									"end": 2275,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2263,
									"end": 2282,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 2347,
									"end": 2349,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2335,
									"end": 2345,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2331,
									"end": 2350,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2328,
									"end": 2329,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 2324,
									"end": 2351,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2314,
									"end": 2352,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2383,
									"end": 2387,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2371,
									"end": 2381,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2368,
									"end": 2388,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2406,
									"end": 2410,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2461,
									"end": 2463,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2456,
									"end": 2459,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2452,
									"end": 2464,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2449,
									"end": 2450,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 2445,
									"end": 2465,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2439,
									"end": 2443,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2435,
									"end": 2466,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2534,
									"end": 2536,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2527,
									"end": 2532,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2524,
									"end": 2537,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2560,
									"end": 2561,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2549,
									"end": 2562,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2069,
									"end": 2614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 2965,
									"end": 2983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 3084,
									"end": 3090,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 3076,
									"end": 3080,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3070,
									"end": 3081,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 3044,
									"end": 3082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3038,
									"end": 3042,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 2994,
									"end": 3091,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3210,
									"end": 3212,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3227,
									"end": 3228,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3929,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3946,
									"end": 3952,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3992,
									"end": 4018,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2747,
									"end": 2748,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2739,
									"end": 2763,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2735,
									"end": 2764,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2725,
									"end": 2765,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2771,
									"end": 2772,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2722,
									"end": 2779,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2016,
									"end": 2017,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2053,
									"end": 2057,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3390,
									"end": 3397,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3387,
									"end": 3388,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3384,
									"end": 3398,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3473,
									"end": 3499,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 3539,
									"end": 3540,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3380,
									"end": 3383,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3640,
									"end": 3646,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3631,
									"end": 3638,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3628,
									"end": 3647,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3695,
									"end": 3721,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3784,
									"end": 3785,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3796,
									"end": 3799,
									"name": "PUSH",
									"source": 7,
									"value": "F8"
								},
								{
									"begin": 3776,
									"end": 3800,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3772,
									"end": 3809,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 3768,
									"end": 3810,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3753,
									"end": 3811,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3872,
									"end": 3873,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3852,
									"end": 3874,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2790,
									"end": 4142,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2635,
									"end": 13849,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2635,
									"end": 13849,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2635,
									"end": 13849,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2635,
									"end": 13849,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2635,
									"end": 13849,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 2635,
									"end": 13849,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2635,
									"end": 13849,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220aec795f2dbe37b9d41667c9e50e95747ed8d3206bdc366ea3cd22a31bd9e47f164736f6c63430008140033",
									".code": [
										{
											"begin": 2635,
											"end": 13849,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "PUSH",
											"source": 2,
											"value": "95D89B41"
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "PUSH",
											"source": 2,
											"value": "A457C2D7"
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "PUSH",
											"source": 2,
											"value": "6FDDE03"
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 13849,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3388,
											"end": 3486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3388,
											"end": 3486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 5665,
											"end": 5862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 5665,
											"end": 5862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4476,
											"end": 4582,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4476,
											"end": 4582,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4476,
											"end": 4582,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4476,
											"end": 4582,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4476,
											"end": 4582,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4476,
											"end": 4582,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4476,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6424,
											"end": 6710,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 6424,
											"end": 6710,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6424,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 6424,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 6424,
											"end": 6710,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6424,
											"end": 6710,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6424,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 6424,
											"end": 6710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6424,
											"end": 6710,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 6424,
											"end": 6710,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6424,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 6424,
											"end": 6710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4325,
											"end": 4416,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4325,
											"end": 4416,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4325,
											"end": 4416,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4325,
											"end": 4416,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4407,
											"end": 4409,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7105,
											"end": 7339,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 7105,
											"end": 7339,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 7105,
											"end": 7339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 7105,
											"end": 7339,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7339,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7105,
											"end": 7339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 7105,
											"end": 7339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7339,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 7105,
											"end": 7339,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7105,
											"end": 7339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4640,
											"end": 4765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4740,
											"end": 4758,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4714,
											"end": 4721,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4740,
											"end": 4758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4740,
											"end": 4758,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4740,
											"end": 4758,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4740,
											"end": 4758,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4740,
											"end": 4758,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4740,
											"end": 4758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4740,
											"end": 4758,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4740,
											"end": 4758,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4740,
											"end": 4758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4740,
											"end": 4758,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4740,
											"end": 4758,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4740,
											"end": 4758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3599,
											"end": 3701,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3599,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3599,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3599,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3599,
											"end": 3701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7826,
											"end": 8253,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 7826,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7826,
											"end": 8253,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 7826,
											"end": 8253,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 7826,
											"end": 8253,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 7826,
											"end": 8253,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7826,
											"end": 8253,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 7826,
											"end": 8253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7826,
											"end": 8253,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 7826,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7826,
											"end": 8253,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 7826,
											"end": 8253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4961,
											"end": 5150,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 4961,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4961,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4961,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4961,
											"end": 5150,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4961,
											"end": 5150,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4961,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4961,
											"end": 5150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4961,
											"end": 5150,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4961,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4961,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4961,
											"end": 5150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5208,
											"end": 5357,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 5208,
											"end": 5357,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5208,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 5208,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 5208,
											"end": 5357,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5208,
											"end": 5357,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5208,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5208,
											"end": 5357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5208,
											"end": 5357,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 5208,
											"end": 5357,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5208,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 5208,
											"end": 5357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3442,
											"end": 3455,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3474,
											"end": 3479,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3467,
											"end": 3479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3467,
											"end": 3479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3486,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5748,
											"end": 5752,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1972,
											"end": 1982,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5802,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1972,
											"end": 1982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5818,
											"end": 5825,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5827,
											"end": 5833,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5802,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 5802,
											"end": 5834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5802,
											"end": 5834,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 5802,
											"end": 5834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5851,
											"end": 5855,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5844,
											"end": 5855,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5844,
											"end": 5855,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5844,
											"end": 5855,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5665,
											"end": 5862,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5665,
											"end": 5862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6424,
											"end": 6710,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 6424,
											"end": 6710,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6551,
											"end": 6555,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1972,
											"end": 1982,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6607,
											"end": 6645,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 6623,
											"end": 6627,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1972,
											"end": 1982,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6638,
											"end": 6644,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6607,
											"end": 6622,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 6607,
											"end": 6645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6607,
											"end": 6645,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 6607,
											"end": 6645,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6655,
											"end": 6682,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 6665,
											"end": 6669,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6671,
											"end": 6673,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6675,
											"end": 6681,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6655,
											"end": 6664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 6655,
											"end": 6682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6655,
											"end": 6682,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 6655,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6699,
											"end": 6703,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6699,
											"end": 6703,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 6424,
											"end": 6710,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6424,
											"end": 6710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7339,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7105,
											"end": 7339,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7197,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1972,
											"end": 1982,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7247,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1972,
											"end": 1982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7263,
											"end": 7270,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7300,
											"end": 7310,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7272,
											"end": 7297,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1972,
											"end": 1982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7263,
											"end": 7270,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7272,
											"end": 7281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 7272,
											"end": 7297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7272,
											"end": 7297,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 7272,
											"end": 7297,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7272,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 7272,
											"end": 7310,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7272,
											"end": 7310,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7272,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 7272,
											"end": 7310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7272,
											"end": 7310,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 7272,
											"end": 7310,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7247,
											"end": 7255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 7247,
											"end": 7311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3599,
											"end": 3701,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3599,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3655,
											"end": 3668,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3687,
											"end": 3694,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3680,
											"end": 3694,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3680,
											"end": 3694,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3680,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3680,
											"end": 3694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3680,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3680,
											"end": 3694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7826,
											"end": 8253,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 7826,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7919,
											"end": 7923,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1972,
											"end": 1982,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7919,
											"end": 7923,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8000,
											"end": 8025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1972,
											"end": 1982,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8017,
											"end": 8024,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8000,
											"end": 8009,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 8000,
											"end": 8025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8000,
											"end": 8025,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 8000,
											"end": 8025,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7973,
											"end": 8025,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7973,
											"end": 8025,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8063,
											"end": 8078,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8043,
											"end": 8059,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8043,
											"end": 8078,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 8043,
											"end": 8078,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8035,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 8035,
											"end": 8120,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8035,
											"end": 8120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8035,
											"end": 8120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8035,
											"end": 8120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8035,
											"end": 8120,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3170,
											"end": 3172,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8035,
											"end": 8120,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8035,
											"end": 8120,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8035,
											"end": 8120,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3152,
											"end": 3173,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3211,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3182,
											"end": 3212,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3283,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3292,
											"end": 3327,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3344,
											"end": 3363,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3344,
											"end": 3363,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8035,
											"end": 8120,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 8035,
											"end": 8120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8035,
											"end": 8120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8035,
											"end": 8120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8035,
											"end": 8120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8035,
											"end": 8120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8035,
											"end": 8120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8035,
											"end": 8120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8035,
											"end": 8120,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8035,
											"end": 8120,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 8035,
											"end": 8120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8214,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 8163,
											"end": 8168,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8170,
											"end": 8177,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8179,
											"end": 8195,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8179,
											"end": 8213,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 8154,
											"end": 8214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4961,
											"end": 5150,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4961,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5040,
											"end": 5044,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1972,
											"end": 1982,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5094,
											"end": 5122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1972,
											"end": 1982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5113,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5115,
											"end": 5121,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5094,
											"end": 5103,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 5094,
											"end": 5122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5208,
											"end": 5357,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 5208,
											"end": 5357,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5323,
											"end": 5341,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5341,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5341,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5297,
											"end": 5304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5323,
											"end": 5341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5341,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5341,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5334,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5323,
											"end": 5341,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5323,
											"end": 5341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5341,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5341,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5341,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5323,
											"end": 5341,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5341,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5341,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5350,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5350,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5350,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5350,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5350,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5350,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5350,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5350,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5350,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5350,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5350,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5350,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5323,
											"end": 5350,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5208,
											"end": 5357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11342,
											"end": 11712,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 11342,
											"end": 11712,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11473,
											"end": 11492,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11473,
											"end": 11492,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11465,
											"end": 11533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 11465,
											"end": 11533,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11465,
											"end": 11533,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11465,
											"end": 11533,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11465,
											"end": 11533,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11465,
											"end": 11533,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3576,
											"end": 3578,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11465,
											"end": 11533,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11465,
											"end": 11533,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11465,
											"end": 11533,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3558,
											"end": 3579,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3615,
											"end": 3617,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3588,
											"end": 3618,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3654,
											"end": 3688,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3627,
											"end": 3689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3698,
											"end": 3732,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3749,
											"end": 3768,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3749,
											"end": 3768,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11465,
											"end": 11533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3374,
											"end": 3774,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11465,
											"end": 11533,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 11465,
											"end": 11533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11551,
											"end": 11572,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11551,
											"end": 11572,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11543,
											"end": 11611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 11543,
											"end": 11611,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11543,
											"end": 11611,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11543,
											"end": 11611,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11543,
											"end": 11611,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11543,
											"end": 11611,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3981,
											"end": 3983,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11543,
											"end": 11611,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11543,
											"end": 11611,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11543,
											"end": 11611,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3963,
											"end": 3984,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4020,
											"end": 4022,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3993,
											"end": 4023,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4059,
											"end": 4093,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4032,
											"end": 4094,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4103,
											"end": 4135,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4152,
											"end": 4171,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4152,
											"end": 4171,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11543,
											"end": 11611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3779,
											"end": 4177,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11543,
											"end": 11611,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 11543,
											"end": 11611,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11622,
											"end": 11640,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11640,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11640,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11640,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11622,
											"end": 11640,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11640,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11640,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11633,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 11622,
											"end": 11640,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11622,
											"end": 11640,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11640,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11640,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11640,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11622,
											"end": 11640,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11640,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11640,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11649,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11649,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11649,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11649,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11649,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11649,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11649,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11649,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11649,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11649,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11649,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11649,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11649,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11658,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11658,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11622,
											"end": 11658,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11705,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11705,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11673,
											"end": 11705,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11673,
											"end": 11705,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11673,
											"end": 11705,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11673,
											"end": 11705,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11705,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11705,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11705,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11705,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11705,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 11342,
											"end": 11712,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11342,
											"end": 11712,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11342,
											"end": 11712,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11342,
											"end": 11712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11993,
											"end": 12434,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 11993,
											"end": 12434,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12123,
											"end": 12147,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12150,
											"end": 12175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 12160,
											"end": 12165,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12167,
											"end": 12174,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12150,
											"end": 12159,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 12150,
											"end": 12175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12150,
											"end": 12175,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 12150,
											"end": 12175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12123,
											"end": 12175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12123,
											"end": 12175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12189,
											"end": 12205,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12189,
											"end": 12226,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 12185,
											"end": 12428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 12185,
											"end": 12428,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12270,
											"end": 12276,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12266,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12276,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12276,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12242,
											"end": 12310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 12242,
											"end": 12310,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12242,
											"end": 12310,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12242,
											"end": 12310,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12242,
											"end": 12310,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12242,
											"end": 12310,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4384,
											"end": 4386,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12242,
											"end": 12310,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12242,
											"end": 12310,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12242,
											"end": 12310,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4387,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4423,
											"end": 4425,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4396,
											"end": 4426,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4462,
											"end": 4493,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4435,
											"end": 4494,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4511,
											"end": 4529,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4511,
											"end": 4529,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12242,
											"end": 12310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4182,
											"end": 4535,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12242,
											"end": 12310,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 12242,
											"end": 12310,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12352,
											"end": 12403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 12361,
											"end": 12366,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12368,
											"end": 12375,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12396,
											"end": 12402,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12377,
											"end": 12393,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12377,
											"end": 12402,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12352,
											"end": 12360,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 12352,
											"end": 12403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12352,
											"end": 12403,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 12352,
											"end": 12403,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12113,
											"end": 12434,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11993,
											"end": 12434,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11993,
											"end": 12434,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11993,
											"end": 12434,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11993,
											"end": 12434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 9358,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 8707,
											"end": 9358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8833,
											"end": 8851,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8833,
											"end": 8851,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8825,
											"end": 8893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 8825,
											"end": 8893,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8825,
											"end": 8893,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8825,
											"end": 8893,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8825,
											"end": 8893,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8825,
											"end": 8893,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4742,
											"end": 4744,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8825,
											"end": 8893,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8825,
											"end": 8893,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8825,
											"end": 8893,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4724,
											"end": 4745,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4781,
											"end": 4783,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4754,
											"end": 4784,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4820,
											"end": 4854,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4793,
											"end": 4855,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4864,
											"end": 4899,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8825,
											"end": 8893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4540,
											"end": 4941,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8825,
											"end": 8893,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 8825,
											"end": 8893,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8911,
											"end": 8927,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8911,
											"end": 8927,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8903,
											"end": 8967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 8903,
											"end": 8967,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8903,
											"end": 8967,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8903,
											"end": 8967,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8903,
											"end": 8967,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8903,
											"end": 8967,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5148,
											"end": 5150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8903,
											"end": 8967,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8903,
											"end": 8967,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8903,
											"end": 8967,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5130,
											"end": 5151,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5187,
											"end": 5189,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5160,
											"end": 5190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5226,
											"end": 5260,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5199,
											"end": 5261,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5270,
											"end": 5303,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5320,
											"end": 5339,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5320,
											"end": 5339,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8903,
											"end": 8967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4946,
											"end": 5345,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8903,
											"end": 8967,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 8903,
											"end": 8967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9049,
											"end": 9064,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9049,
											"end": 9064,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9027,
											"end": 9046,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9049,
											"end": 9064,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9049,
											"end": 9064,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9049,
											"end": 9064,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9049,
											"end": 9064,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9049,
											"end": 9064,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9049,
											"end": 9064,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9049,
											"end": 9064,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9049,
											"end": 9064,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9049,
											"end": 9064,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9049,
											"end": 9064,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9049,
											"end": 9064,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9082,
											"end": 9103,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9082,
											"end": 9103,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9082,
											"end": 9103,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 9082,
											"end": 9103,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9074,
											"end": 9146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 9074,
											"end": 9146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9074,
											"end": 9146,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9074,
											"end": 9146,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9074,
											"end": 9146,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9074,
											"end": 9146,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9074,
											"end": 9146,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9074,
											"end": 9146,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9074,
											"end": 9146,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5534,
											"end": 5555,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5591,
											"end": 5593,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5564,
											"end": 5594,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5630,
											"end": 5664,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5603,
											"end": 5665,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5674,
											"end": 5710,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5727,
											"end": 5746,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5727,
											"end": 5746,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9074,
											"end": 9146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5350,
											"end": 5752,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9074,
											"end": 9146,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 9074,
											"end": 9146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9180,
											"end": 9195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9195,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9195,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9189,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9180,
											"end": 9195,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9195,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9195,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9195,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9180,
											"end": 9195,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9195,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9195,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9195,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9180,
											"end": 9195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9195,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9195,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9198,
											"end": 9218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9198,
											"end": 9218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9198,
											"end": 9218,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9218,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9218,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9251,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9251,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9251,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9251,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9251,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9251,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9251,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9251,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9261,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9261,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9212,
											"end": 9218,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9212,
											"end": 9218,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9261,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 9238,
											"end": 9261,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9212,
											"end": 9218,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9212,
											"end": 9218,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9261,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 9238,
											"end": 9261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9261,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 9238,
											"end": 9261,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9261,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9261,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9261,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9261,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9261,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9261,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9261,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9292,
											"end": 9294,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9277,
											"end": 9303,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9286,
											"end": 9290,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9277,
											"end": 9303,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9303,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9296,
											"end": 9302,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9303,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9277,
											"end": 9303,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 9277,
											"end": 9303,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9277,
											"end": 9303,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 9277,
											"end": 9303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9303,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9277,
											"end": 9303,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9303,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9303,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9303,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9303,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 9314,
											"end": 9351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 13018,
											"end": 13139,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 2070,
											"end": 2079,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 2051,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2041,
											"end": 2080,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2165,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2220,
											"end": 2222,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2206,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2195,
											"end": 2218,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2191,
											"end": 2223,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2237,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2234,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2278,
											"end": 2287,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 2259,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 2341,
											"end": 2343,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2326,
											"end": 2344,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 2307,
											"end": 2345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2436,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 2545,
											"end": 2551,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2608,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2598,
											"end": 2604,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2595,
											"end": 2609,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2575,
											"end": 2593,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2572,
											"end": 2610,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 2662,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 2647,
											"end": 2650,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2643,
											"end": 2663,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2640,
											"end": 2641,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2664,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2687,
											"end": 2691,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 2684,
											"end": 2685,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2692,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2715,
											"end": 2719,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2712,
											"end": 2713,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2741,
											"end": 2963,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 2741,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2879,
											"end": 2889,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 2874,
											"end": 2877,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2870,
											"end": 2890,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2868,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2891,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2918,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 2911,
											"end": 2912,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2904,
											"end": 2919,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2942,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2939,
											"end": 2940,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2932,
											"end": 2947,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"burnable-token/Discovery/Context.sol",
								"burnable-token/Discovery/Discovery.sol",
								"burnable-token/Discovery/ERC20.sol",
								"burnable-token/Discovery/ERC20Burnable.sol",
								"burnable-token/Discovery/IERC20.sol",
								"burnable-token/Discovery/IERC20Metadata.sol",
								"burnable-token/Discovery/Ownable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"burnable-token/Discovery/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"burnable-token/Discovery/Context.sol\":{\"keccak256\":\"0xc62564992cc32565eceb4520ec135acbef98399abe1f83c9133d86b631b64afe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d345ef4e0fa7ac043487966f12ac4523f1acbd8a4e2c92bfc8f4afc0a4bf1316\",\"dweb:/ipfs/QmWk48jHWKYoxq6pCDVyhCqeGyyaCqKvHE2WnjruFVjnth\"]},\"burnable-token/Discovery/ERC20.sol\":{\"keccak256\":\"0x7b49c295e5cb28392c009101595c3c2309e6b3da11aaa935ae29e23abb46fdc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66940d637044c56133224da7982755a1d17b0b80cffb5e97d74552d3a1adfddb\",\"dweb:/ipfs/QmNnBpCLenYXhVrS7F2YG1zn3Ad58dJa3fCKHZfRrAN8V1\"]},\"burnable-token/Discovery/IERC20.sol\":{\"keccak256\":\"0xbadbd36a2bd1d670e5d7215642a80b8cf9faf60ec1b36077e57088a594a53616\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7032816b896dddf18fc09a3164631d2f831e59ed2b3f52f8bd4ec676c6d082e6\",\"dweb:/ipfs/QmfW93phgyvJ3aEmvdM6oB95Z198uUovrAHLUrcsWipCNr\"]},\"burnable-token/Discovery/IERC20Metadata.sol\":{\"keccak256\":\"0xd8c0a2c34bd23c7a00b2f289ca124f8340589842e2a2995cbf89b5732fb91a17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2f3893466eee5ed49fa58df4e5ea994f93ac77f3ad458794a86084ec03f0534\",\"dweb:/ipfs/QmX8JmnWMsEBgxCSRtyqVdH1Mx3RNvLUnapnvb1cP75tz3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 72,
								"contract": "burnable-token/Discovery/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 78,
								"contract": "burnable-token/Discovery/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 80,
								"contract": "burnable-token/Discovery/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 82,
								"contract": "burnable-token/Discovery/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 84,
								"contract": "burnable-token/Discovery/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"burnable-token/Discovery/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"burnable-token/Discovery/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"burnable-token/Discovery/Context.sol\":{\"keccak256\":\"0xc62564992cc32565eceb4520ec135acbef98399abe1f83c9133d86b631b64afe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d345ef4e0fa7ac043487966f12ac4523f1acbd8a4e2c92bfc8f4afc0a4bf1316\",\"dweb:/ipfs/QmWk48jHWKYoxq6pCDVyhCqeGyyaCqKvHE2WnjruFVjnth\"]},\"burnable-token/Discovery/ERC20.sol\":{\"keccak256\":\"0x7b49c295e5cb28392c009101595c3c2309e6b3da11aaa935ae29e23abb46fdc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66940d637044c56133224da7982755a1d17b0b80cffb5e97d74552d3a1adfddb\",\"dweb:/ipfs/QmNnBpCLenYXhVrS7F2YG1zn3Ad58dJa3fCKHZfRrAN8V1\"]},\"burnable-token/Discovery/ERC20Burnable.sol\":{\"keccak256\":\"0x1187d1d37ab46613b91be5821b833c2136c9c05fde7bf3bfc25c37e8fcf77782\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71fb8e09ac803c6f95492d51b2db1dd776420cc84a92444199ee4a90bd0e2702\",\"dweb:/ipfs/QmfKBV4kZi8Kh5bYVycySh7FG4tRCQpfABvNF2UsCHb5Qb\"]},\"burnable-token/Discovery/IERC20.sol\":{\"keccak256\":\"0xbadbd36a2bd1d670e5d7215642a80b8cf9faf60ec1b36077e57088a594a53616\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7032816b896dddf18fc09a3164631d2f831e59ed2b3f52f8bd4ec676c6d082e6\",\"dweb:/ipfs/QmfW93phgyvJ3aEmvdM6oB95Z198uUovrAHLUrcsWipCNr\"]},\"burnable-token/Discovery/IERC20Metadata.sol\":{\"keccak256\":\"0xd8c0a2c34bd23c7a00b2f289ca124f8340589842e2a2995cbf89b5732fb91a17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2f3893466eee5ed49fa58df4e5ea994f93ac77f3ad458794a86084ec03f0534\",\"dweb:/ipfs/QmX8JmnWMsEBgxCSRtyqVdH1Mx3RNvLUnapnvb1cP75tz3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 72,
								"contract": "burnable-token/Discovery/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 78,
								"contract": "burnable-token/Discovery/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 80,
								"contract": "burnable-token/Discovery/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 82,
								"contract": "burnable-token/Discovery/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 84,
								"contract": "burnable-token/Discovery/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"burnable-token/Discovery/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"burnable-token/Discovery/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"burnable-token/Discovery/IERC20.sol\":{\"keccak256\":\"0xbadbd36a2bd1d670e5d7215642a80b8cf9faf60ec1b36077e57088a594a53616\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7032816b896dddf18fc09a3164631d2f831e59ed2b3f52f8bd4ec676c6d082e6\",\"dweb:/ipfs/QmfW93phgyvJ3aEmvdM6oB95Z198uUovrAHLUrcsWipCNr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"burnable-token/Discovery/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"burnable-token/Discovery/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"burnable-token/Discovery/IERC20.sol\":{\"keccak256\":\"0xbadbd36a2bd1d670e5d7215642a80b8cf9faf60ec1b36077e57088a594a53616\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7032816b896dddf18fc09a3164631d2f831e59ed2b3f52f8bd4ec676c6d082e6\",\"dweb:/ipfs/QmfW93phgyvJ3aEmvdM6oB95Z198uUovrAHLUrcsWipCNr\"]},\"burnable-token/Discovery/IERC20Metadata.sol\":{\"keccak256\":\"0xd8c0a2c34bd23c7a00b2f289ca124f8340589842e2a2995cbf89b5732fb91a17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2f3893466eee5ed49fa58df4e5ea994f93ac77f3ad458794a86084ec03f0534\",\"dweb:/ipfs/QmX8JmnWMsEBgxCSRtyqVdH1Mx3RNvLUnapnvb1cP75tz3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"burnable-token/Discovery/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"burnable-token/Discovery/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"burnable-token/Discovery/Context.sol\":{\"keccak256\":\"0xc62564992cc32565eceb4520ec135acbef98399abe1f83c9133d86b631b64afe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d345ef4e0fa7ac043487966f12ac4523f1acbd8a4e2c92bfc8f4afc0a4bf1316\",\"dweb:/ipfs/QmWk48jHWKYoxq6pCDVyhCqeGyyaCqKvHE2WnjruFVjnth\"]},\"burnable-token/Discovery/Ownable.sol\":{\"keccak256\":\"0x98d142c0d3caeda1b935bbcf94f7dbffc403f33899561d20ba75d69ba02dd61e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74ce190869f9be534a416cf202c5757959a8e56090ed5beba5bd99d829ec6f8d\",\"dweb:/ipfs/QmS7RLciLiHM9x2yajmZ28aYZAjoNDeNZ9SfXsSqdWKYqQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 798,
								"contract": "burnable-token/Discovery/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> burnable-token/Discovery/Discovery.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "burnable-token/Discovery/Discovery.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"burnable-token/Discovery/Context.sol": {
				"ast": {
					"absolutePath": "burnable-token/Discovery/Context.sol",
					"exportedSymbols": {
						"Context": [
							21
						]
					},
					"id": 22,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1339:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "1364:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 21,
							"linearizedBaseContracts": [
								21
							],
							"name": "Context",
							"nameLocation": "1879:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "1955:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1972:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1976:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1972:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "1965:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "1902:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1912:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "1946:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1946:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1945:9:0"
									},
									"scope": 21,
									"src": "1893:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "2062:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2079:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2083:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "2079:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "2072:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "2004:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2012:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "2046:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2046:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2045:16:0"
									},
									"scope": 21,
									"src": "1995:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 22,
							"src": "1861:235:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "1339:758:0"
				},
				"id": 0
			},
			"burnable-token/Discovery/Discovery.sol": {
				"ast": {
					"absolutePath": "burnable-token/Discovery/Discovery.sol",
					"exportedSymbols": {
						"Context": [
							21
						],
						"DiscoveryCoin": [
							56
						],
						"ERC20": [
							642
						],
						"ERC20Burnable": [
							686
						],
						"IERC20": [
							764
						],
						"IERC20Metadata": [
							789
						],
						"Ownable": [
							937
						]
					},
					"id": 57,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 23,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "3:24:1"
						},
						{
							"absolutePath": "burnable-token/Discovery/ERC20.sol",
							"file": "./ERC20.sol",
							"id": 24,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 57,
							"sourceUnit": 643,
							"src": "30:21:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "burnable-token/Discovery/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 25,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 57,
							"sourceUnit": 938,
							"src": "52:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "burnable-token/Discovery/ERC20Burnable.sol",
							"file": "./ERC20Burnable.sol",
							"id": 26,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 57,
							"sourceUnit": 687,
							"src": "76:29:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 27,
										"name": "ERC20",
										"nameLocations": [
											"134:5:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 642,
										"src": "134:5:1"
									},
									"id": 28,
									"nodeType": "InheritanceSpecifier",
									"src": "134:5:1"
								},
								{
									"baseName": {
										"id": 29,
										"name": "ERC20Burnable",
										"nameLocations": [
											"141:13:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 686,
										"src": "141:13:1"
									},
									"id": 30,
									"nodeType": "InheritanceSpecifier",
									"src": "141:13:1"
								},
								{
									"baseName": {
										"id": 31,
										"name": "Ownable",
										"nameLocations": [
											"156:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 937,
										"src": "156:7:1"
									},
									"id": 32,
									"nodeType": "InheritanceSpecifier",
									"src": "156:7:1"
								}
							],
							"canonicalName": "DiscoveryCoin",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 56,
							"linearizedBaseContracts": [
								56,
								937,
								686,
								642,
								789,
								764,
								21
							],
							"name": "DiscoveryCoin",
							"nameLocation": "117:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 54,
										"nodeType": "Block",
										"src": "249:57:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 44,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "265:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 45,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "269:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "265:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "363636",
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "277:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_666_by_1",
																	"typeString": "int_const 666"
																},
																"value": "666"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 50,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 47,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "283:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 48,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 131,
																		"src": "289:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 49,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "289:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "283:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "277:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 43,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "259:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "259:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 53,
												"nodeType": "ExpressionStatement",
												"src": "259:41:1"
											}
										]
									},
									"id": 55,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "48616d6d65722054696d65",
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "unicodeString",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "187:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_6acaf48f08b5d49dd84e2a1e5f590ad1e8c354502722e5a9274ed262d9e590dc",
														"typeString": "literal_string \"Hammer Time\""
													},
													"value": "Hammer Time"
												},
												{
													"hexValue": "444953434f56455259",
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "unicodeString",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "209:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_4f8d6c43793756e8e9dd7bb5e6b9ad18b2899d0948cb82c28bb8af109f2db188",
														"typeString": "literal_string \"DISCOVERY\""
													},
													"value": "DISCOVERY"
												}
											],
											"id": 37,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 34,
												"name": "ERC20",
												"nameLocations": [
													"181:5:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 642,
												"src": "181:5:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "181:47:1"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 39,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "237:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "241:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "237:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 41,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 38,
												"name": "Ownable",
												"nameLocations": [
													"229:7:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 937,
												"src": "229:7:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "229:19:1"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "178:2:1"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "249:0:1"
									},
									"scope": 56,
									"src": "167:139:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 57,
							"src": "108:201:1",
							"usedErrors": [
								803,
								808
							],
							"usedEvents": [
								698,
								707,
								814
							]
						}
					],
					"src": "3:310:1"
				},
				"id": 1
			},
			"burnable-token/Discovery/ERC20.sol": {
				"ast": {
					"absolutePath": "burnable-token/Discovery/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							21
						],
						"ERC20": [
							642
						],
						"IERC20": [
							764
						],
						"IERC20Metadata": [
							789
						]
					},
					"id": 643,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 58,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1358:23:2"
						},
						{
							"absolutePath": "burnable-token/Discovery/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 59,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 643,
							"sourceUnit": 765,
							"src": "1383:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "burnable-token/Discovery/IERC20Metadata.sol",
							"file": "./IERC20Metadata.sol",
							"id": 60,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 643,
							"sourceUnit": 790,
							"src": "1406:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "burnable-token/Discovery/Context.sol",
							"file": "./Context.sol",
							"id": 61,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 643,
							"sourceUnit": 22,
							"src": "1437:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 63,
										"name": "Context",
										"nameLocations": [
											"2653:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "2653:7:2"
									},
									"id": 64,
									"nodeType": "InheritanceSpecifier",
									"src": "2653:7:2"
								},
								{
									"baseName": {
										"id": 65,
										"name": "IERC20",
										"nameLocations": [
											"2662:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 764,
										"src": "2662:6:2"
									},
									"id": 66,
									"nodeType": "InheritanceSpecifier",
									"src": "2662:6:2"
								},
								{
									"baseName": {
										"id": 67,
										"name": "IERC20Metadata",
										"nameLocations": [
											"2670:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 789,
										"src": "2670:14:2"
									},
									"id": 68,
									"nodeType": "InheritanceSpecifier",
									"src": "2670:14:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 62,
								"nodeType": "StructuredDocumentation",
								"src": "1462:1172:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 642,
							"linearizedBaseContracts": [
								642,
								789,
								764,
								21
							],
							"name": "ERC20",
							"nameLocation": "2644:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 72,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "2727:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 642,
									"src": "2691:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 71,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 69,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2699:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2691:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 70,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2710:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 78,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "2799:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 642,
									"src": "2743:67:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 77,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 73,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2751:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2743:47:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 76,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 74,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2770:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2762:27:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 75,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2781:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 80,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "2833:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 642,
									"src": "2817:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 79,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2817:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 82,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "2867:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 642,
									"src": "2852:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 81,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2852:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 84,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "2893:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 642,
									"src": "2878:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 83,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2878:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "3266:57:2",
										"statements": [
											{
												"expression": {
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 92,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "3276:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 93,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "3284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3276:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 95,
												"nodeType": "ExpressionStatement",
												"src": "3276:13:2"
											},
											{
												"expression": {
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 96,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "3299:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 97,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "3309:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3299:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 99,
												"nodeType": "ExpressionStatement",
												"src": "3299:17:2"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "2907:298:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 101,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "3236:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "3222:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 86,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3222:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "3257:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "3243:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 88,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3243:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3221:44:2"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3266:0:2"
									},
									"scope": 642,
									"src": "3210:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										776
									],
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "3457:29:2",
										"statements": [
											{
												"expression": {
													"id": 108,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 82,
													"src": "3474:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 107,
												"id": 109,
												"nodeType": "Return",
												"src": "3467:12:2"
											}
										]
									},
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "3329:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3397:4:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 104,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3424:8:2"
									},
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3401:2:2"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "3442:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 105,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3442:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3441:15:2"
									},
									"scope": 642,
									"src": "3388:98:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										782
									],
									"body": {
										"id": 120,
										"nodeType": "Block",
										"src": "3670:31:2",
										"statements": [
											{
												"expression": {
													"id": 118,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 84,
													"src": "3687:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 117,
												"id": 119,
												"nodeType": "Return",
												"src": "3680:14:2"
											}
										]
									},
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "3492:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3608:6:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 114,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3637:8:2"
									},
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3614:2:2"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "3655:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 115,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3655:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3654:15:2"
									},
									"scope": 642,
									"src": "3599:102:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										788
									],
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "4390:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4407:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 127,
												"id": 129,
												"nodeType": "Return",
												"src": "4400:9:2"
											}
										]
									},
									"documentation": {
										"id": 122,
										"nodeType": "StructuredDocumentation",
										"src": "3707:613:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "4334:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 124,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4365:8:2"
									},
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4342:2:2"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "4383:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 125,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4383:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4382:7:2"
									},
									"scope": 642,
									"src": "4325:91:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										713
									],
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "4546:36:2",
										"statements": [
											{
												"expression": {
													"id": 138,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 80,
													"src": "4563:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 137,
												"id": 139,
												"nodeType": "Return",
												"src": "4556:19:2"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "4422:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "4485:11:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 134,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4519:8:2"
									},
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4496:2:2"
									},
									"returnParameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4537:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4536:9:2"
									},
									"scope": 642,
									"src": "4476:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										721
									],
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "4723:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 150,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 72,
														"src": "4740:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 152,
													"indexExpression": {
														"id": 151,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 144,
														"src": "4750:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4740:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 149,
												"id": 153,
												"nodeType": "Return",
												"src": "4733:25:2"
											}
										]
									},
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "4588:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4649:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 146,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4696:8:2"
									},
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4667:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "4659:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4658:17:2"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "4714:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4714:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4713:9:2"
									},
									"scope": 642,
									"src": "4640:125:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										731
									],
									"body": {
										"id": 179,
										"nodeType": "Block",
										"src": "5046:104:2",
										"statements": [
											{
												"assignments": [
													167
												],
												"declarations": [
													{
														"constant": false,
														"id": 167,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5064:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 179,
														"src": "5056:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 166,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5056:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 170,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 168,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "5072:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5072:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5056:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 172,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "5104:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 173,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "5111:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 174,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "5115:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 171,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "5094:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5094:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 176,
												"nodeType": "ExpressionStatement",
												"src": "5094:28:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5139:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 165,
												"id": 178,
												"nodeType": "Return",
												"src": "5132:11:2"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "4771:185:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4970:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 162,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5022:8:2"
									},
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4987:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "4979:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4979:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4999:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "4991:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4991:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:28:2"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "5040:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 163,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5040:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5039:6:2"
									},
									"scope": 642,
									"src": "4961:189:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										741
									],
									"body": {
										"id": 197,
										"nodeType": "Block",
										"src": "5306:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 191,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 78,
															"src": "5323:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 193,
														"indexExpression": {
															"id": 192,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "5335:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5323:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 195,
													"indexExpression": {
														"id": 194,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "5342:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5323:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 190,
												"id": 196,
												"nodeType": "Return",
												"src": "5316:34:2"
											}
										]
									},
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "5156:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "5217:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 187,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5279:8:2"
									},
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5235:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "5227:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5227:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5250:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "5242:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5242:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5226:32:2"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "5297:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5297:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5296:9:2"
									},
									"scope": 642,
									"src": "5208:149:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										751
									],
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "5754:108:2",
										"statements": [
											{
												"assignments": [
													210
												],
												"declarations": [
													{
														"constant": false,
														"id": 210,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5772:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 222,
														"src": "5764:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 209,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5764:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 213,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 211,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "5780:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5780:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5764:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 215,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "5811:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 216,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "5818:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 217,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "5827:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 214,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 576,
														"src": "5802:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5802:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "5802:32:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5851:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 208,
												"id": 221,
												"nodeType": "Return",
												"src": "5844:11:2"
											}
										]
									},
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "5363:297:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5674:7:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 205,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5730:8:2"
									},
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5690:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "5682:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5707:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "5699:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5699:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5681:33:2"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "5748:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5748:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5747:6:2"
									},
									"scope": 642,
									"src": "5665:197:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										763
									],
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6557:153:2",
										"statements": [
											{
												"assignments": [
													237
												],
												"declarations": [
													{
														"constant": false,
														"id": 237,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "6575:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 255,
														"src": "6567:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 236,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6567:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 240,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 238,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "6585:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6585:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6567:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 242,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "6623:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 243,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "6629:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 244,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "6638:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 241,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "6607:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6607:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 246,
												"nodeType": "ExpressionStatement",
												"src": "6607:38:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 248,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "6665:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 249,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "6671:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 250,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "6675:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 247,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "6655:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6655:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 252,
												"nodeType": "ExpressionStatement",
												"src": "6655:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6699:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 235,
												"id": 254,
												"nodeType": "Return",
												"src": "6692:11:2"
											}
										]
									},
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "5868:551:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6433:12:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 232,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6533:8:2"
									},
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6463:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6455:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6455:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6485:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6477:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6477:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6505:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6497:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6497:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6445:72:2"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6551:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 233,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6551:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6550:6:2"
									},
									"scope": 642,
									"src": "6424:286:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "7199:140:2",
										"statements": [
											{
												"assignments": [
													267
												],
												"declarations": [
													{
														"constant": false,
														"id": 267,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "7217:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 284,
														"src": "7209:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 266,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7209:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 270,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 268,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "7225:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7225:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7209:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "7256:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 273,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "7263:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 275,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 267,
																		"src": "7282:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 276,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "7289:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 274,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 198,
																	"src": "7272:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7272:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 278,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 261,
																"src": "7300:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7272:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 271,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 576,
														"src": "7247:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7247:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 281,
												"nodeType": "ExpressionStatement",
												"src": "7247:64:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7328:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 265,
												"id": 283,
												"nodeType": "Return",
												"src": "7321:11:2"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6716:384:2",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "7114:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7140:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7132:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7132:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "7157:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7149:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7149:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7131:37:2"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7193:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7193:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7192:6:2"
									},
									"scope": 642,
									"src": "7105:234:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "7925:328:2",
										"statements": [
											{
												"assignments": [
													296
												],
												"declarations": [
													{
														"constant": false,
														"id": 296,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "7943:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 325,
														"src": "7935:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 295,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7935:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 299,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 297,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "7951:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7951:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7935:28:2"
											},
											{
												"assignments": [
													301
												],
												"declarations": [
													{
														"constant": false,
														"id": 301,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "7981:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 325,
														"src": "7973:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 300,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7973:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 306,
												"initialValue": {
													"arguments": [
														{
															"id": 303,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "8010:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 304,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "8017:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 302,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 198,
														"src": "8000:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8000:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7973:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 308,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "8043:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 309,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "8063:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8043:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8080:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 307,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8035:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8035:85:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 313,
												"nodeType": "ExpressionStatement",
												"src": "8035:85:2"
											},
											{
												"id": 322,
												"nodeType": "UncheckedBlock",
												"src": "8130:95:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 315,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 296,
																	"src": "8163:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 316,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 288,
																	"src": "8170:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 317,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 301,
																		"src": "8179:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 318,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "8198:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8179:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 314,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "8154:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8154:60:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 321,
														"nodeType": "ExpressionStatement",
														"src": "8154:60:2"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8242:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 294,
												"id": 324,
												"nodeType": "Return",
												"src": "8235:11:2"
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "7345:476:2",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "7835:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7861:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "7853:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7853:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "7878:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "7870:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7870:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7852:42:2"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "7919:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 292,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7919:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7918:6:2"
									},
									"scope": 642,
									"src": "7826:427:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "8815:543:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 337,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 329,
																"src": "8833:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8849:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8841:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 338,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8841:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 341,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8841:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8833:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8853:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 336,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8825:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8825:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "8825:68:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 347,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 331,
																"src": "8911:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8925:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8917:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 348,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8917:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8917:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8911:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8929:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 346,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8903:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8903:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "8903:64:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 357,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "8999:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 358,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "9005:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 359,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "9009:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 356,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "8978:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8978:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 361,
												"nodeType": "ExpressionStatement",
												"src": "8978:38:2"
											},
											{
												"assignments": [
													363
												],
												"declarations": [
													{
														"constant": false,
														"id": 363,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "9035:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 402,
														"src": "9027:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 362,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9027:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 367,
												"initialValue": {
													"baseExpression": {
														"id": 364,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 72,
														"src": "9049:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 366,
													"indexExpression": {
														"id": 365,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "9059:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9049:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9027:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 369,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 363,
																"src": "9082:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 370,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "9097:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9082:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 368,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9074:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9074:72:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "9074:72:2"
											},
											{
												"id": 383,
												"nodeType": "UncheckedBlock",
												"src": "9156:73:2",
												"statements": [
													{
														"expression": {
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 375,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 72,
																	"src": "9180:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 377,
																"indexExpression": {
																	"id": 376,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "9190:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9180:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 378,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 363,
																	"src": "9198:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 379,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 333,
																	"src": "9212:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9198:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9180:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 382,
														"nodeType": "ExpressionStatement",
														"src": "9180:38:2"
													}
												]
											},
											{
												"expression": {
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 384,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "9238:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 386,
														"indexExpression": {
															"id": 385,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "9248:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9238:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 387,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 333,
														"src": "9255:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9238:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "9238:23:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 391,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "9286:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 392,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "9292:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 393,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "9296:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 390,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "9277:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9277:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 395,
												"nodeType": "EmitStatement",
												"src": "9272:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 397,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "9334:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 398,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "9340:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 399,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "9344:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 396,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 641,
														"src": "9314:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9314:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "9314:37:2"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "8259:443:2",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "8716:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8743:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "8735:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8735:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8765:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "8757:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8785:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "8777:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8777:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8725:72:2"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8815:0:2"
									},
									"scope": 642,
									"src": "8707:651:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "9699:324:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 412,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 406,
																"src": "9717:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9736:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9728:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 413,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9728:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 416,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9728:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9717:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9740:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 411,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9709:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9709:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "9709:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9814:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9806:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 422,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9806:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9806:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 426,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "9818:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 427,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "9827:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 421,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "9785:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9785:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "9785:49:2"
											},
											{
												"expression": {
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 430,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "9845:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 431,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 408,
														"src": "9861:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9845:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 433,
												"nodeType": "ExpressionStatement",
												"src": "9845:22:2"
											},
											{
												"expression": {
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 434,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "9877:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 436,
														"indexExpression": {
															"id": 435,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "9887:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9877:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 437,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 408,
														"src": "9899:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9877:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 439,
												"nodeType": "ExpressionStatement",
												"src": "9877:28:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9937:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 442,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9929:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 441,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9929:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9929:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 445,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "9941:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 446,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "9950:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 440,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "9920:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9920:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 448,
												"nodeType": "EmitStatement",
												"src": "9915:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9996:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9988:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 450,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9988:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9988:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "10000:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 455,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "10009:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 449,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 641,
														"src": "9968:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9968:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "9968:48:2"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "9364:265:2",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9643:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9657:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "9649:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9649:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9674:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "9666:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9666:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9648:33:2"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9699:0:2"
									},
									"scope": 642,
									"src": "9634:389:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 530,
										"nodeType": "Block",
										"src": "10408:511:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 468,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "10426:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10445:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10437:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 469,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10437:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10437:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10426:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10449:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 467,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10418:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10418:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 476,
												"nodeType": "ExpressionStatement",
												"src": "10418:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 478,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "10517:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10534:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10526:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 479,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10526:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10526:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 483,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "10538:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 477,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "10496:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10496:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 485,
												"nodeType": "ExpressionStatement",
												"src": "10496:49:2"
											},
											{
												"assignments": [
													487
												],
												"declarations": [
													{
														"constant": false,
														"id": 487,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "10564:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 530,
														"src": "10556:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 486,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10556:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 491,
												"initialValue": {
													"baseExpression": {
														"id": 488,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 72,
														"src": "10581:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 490,
													"indexExpression": {
														"id": 489,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "10591:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10581:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10556:43:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 493,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "10617:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 494,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "10635:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10617:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10643:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 492,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10609:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10609:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 498,
												"nodeType": "ExpressionStatement",
												"src": "10609:71:2"
											},
											{
												"id": 507,
												"nodeType": "UncheckedBlock",
												"src": "10690:79:2",
												"statements": [
													{
														"expression": {
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 499,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 72,
																	"src": "10714:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 501,
																"indexExpression": {
																	"id": 500,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "10724:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "10714:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 502,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 487,
																	"src": "10735:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 503,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 464,
																	"src": "10752:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10735:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10714:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 506,
														"nodeType": "ExpressionStatement",
														"src": "10714:44:2"
													}
												]
											},
											{
												"expression": {
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 508,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "10778:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 509,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "10794:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10778:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "10778:22:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 513,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "10825:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10842:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 515,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10834:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 514,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10834:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10834:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 518,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "10846:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 512,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "10816:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10816:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 520,
												"nodeType": "EmitStatement",
												"src": "10811:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 522,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "10884:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10901:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 524,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10893:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 523,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10893:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10893:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 527,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "10905:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 521,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 641,
														"src": "10864:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10864:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 529,
												"nodeType": "ExpressionStatement",
												"src": "10864:48:2"
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "10029:309:2",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "10352:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "10366:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "10358:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10358:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10383:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "10375:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10375:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10357:33:2"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10408:0:2"
									},
									"scope": 642,
									"src": "10343:576:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "11455:257:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 542,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 534,
																"src": "11473:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11490:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11482:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 543,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11482:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 546,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11482:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11473:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11494:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 541,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11465:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11465:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 550,
												"nodeType": "ExpressionStatement",
												"src": "11465:68:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 552,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 536,
																"src": "11551:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11570:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11562:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 553,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11562:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 556,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11562:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11551:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11574:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 551,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11543:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11543:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 560,
												"nodeType": "ExpressionStatement",
												"src": "11543:68:2"
											},
											{
												"expression": {
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 561,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 78,
																"src": "11622:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 564,
															"indexExpression": {
																"id": 562,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 534,
																"src": "11634:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11622:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 565,
														"indexExpression": {
															"id": 563,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "11641:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11622:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 566,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "11652:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11622:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "11622:36:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 570,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "11682:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 571,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "11689:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 572,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "11698:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 569,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "11673:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11673:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 574,
												"nodeType": "EmitStatement",
												"src": "11668:37:2"
											}
										]
									},
									"documentation": {
										"id": 532,
										"nodeType": "StructuredDocumentation",
										"src": "10925:412:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "11351:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11377:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "11369:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11369:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11400:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "11392:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11392:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11425:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "11417:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11417:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11359:78:2"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11455:0:2"
									},
									"scope": 642,
									"src": "11342:370:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 618,
										"nodeType": "Block",
										"src": "12113:321:2",
										"statements": [
											{
												"assignments": [
													587
												],
												"declarations": [
													{
														"constant": false,
														"id": 587,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "12131:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 618,
														"src": "12123:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 586,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12123:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 592,
												"initialValue": {
													"arguments": [
														{
															"id": 589,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "12160:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 590,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "12167:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 588,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 198,
														"src": "12150:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12150:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12123:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 593,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 587,
														"src": "12189:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12214:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 595,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12214:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 594,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12209:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12209:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 598,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12223:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12209:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12189:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 617,
												"nodeType": "IfStatement",
												"src": "12185:243:2",
												"trueBody": {
													"id": 616,
													"nodeType": "Block",
													"src": "12228:200:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 601,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 587,
																			"src": "12250:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 602,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 583,
																			"src": "12270:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12250:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12278:31:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 600,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "12242:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12242:68:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 606,
															"nodeType": "ExpressionStatement",
															"src": "12242:68:2"
														},
														{
															"id": 615,
															"nodeType": "UncheckedBlock",
															"src": "12324:94:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 608,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 579,
																				"src": "12361:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 609,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 581,
																				"src": "12368:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 612,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 610,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 587,
																					"src": "12377:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 611,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 583,
																					"src": "12396:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12377:25:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 607,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 576,
																			"src": "12352:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 613,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12352:51:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 614,
																	"nodeType": "ExpressionStatement",
																	"src": "12352:51:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "11718:270:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "12002:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12035:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "12027:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12027:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "12058:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "12050:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12050:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12083:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "12075:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12075:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12017:78:2"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12113:0:2"
									},
									"scope": 642,
									"src": "11993:441:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "13137:2:2",
										"statements": []
									},
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "12440:573:2",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "13027:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13065:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "13057:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13057:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13087:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "13079:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13079:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13107:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "13099:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13099:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13047:72:2"
									},
									"returnParameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13137:0:2"
									},
									"scope": 642,
									"src": "13018:121:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 640,
										"nodeType": "Block",
										"src": "13845:2:2",
										"statements": []
									},
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "13145:577:2",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 641,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "13736:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13773:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "13765:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13765:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13795:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "13787:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13787:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13815:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "13807:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13807:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13755:72:2"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13845:0:2"
									},
									"scope": 642,
									"src": "13727:120:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 643,
							"src": "2635:11214:2",
							"usedErrors": [],
							"usedEvents": [
								698,
								707
							]
						}
					],
					"src": "1358:12492:2"
				},
				"id": 2
			},
			"burnable-token/Discovery/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "burnable-token/Discovery/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							21
						],
						"ERC20": [
							642
						],
						"ERC20Burnable": [
							686
						],
						"IERC20": [
							764
						],
						"IERC20Metadata": [
							789
						]
					},
					"id": 687,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 644,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1377:23:3"
						},
						{
							"absolutePath": "burnable-token/Discovery/ERC20.sol",
							"file": "./ERC20.sol",
							"id": 645,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 687,
							"sourceUnit": 643,
							"src": "1402:21:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "burnable-token/Discovery/Context.sol",
							"file": "./Context.sol",
							"id": 646,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 687,
							"sourceUnit": 22,
							"src": "1424:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 648,
										"name": "Context",
										"nameLocations": [
											"1693:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "1693:7:3"
									},
									"id": 649,
									"nodeType": "InheritanceSpecifier",
									"src": "1693:7:3"
								},
								{
									"baseName": {
										"id": 650,
										"name": "ERC20",
										"nameLocations": [
											"1702:5:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 642,
										"src": "1702:5:3"
									},
									"id": 651,
									"nodeType": "InheritanceSpecifier",
									"src": "1702:5:3"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 647,
								"nodeType": "StructuredDocumentation",
								"src": "1449:208:3",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 686,
							"linearizedBaseContracts": [
								686,
								642,
								789,
								764,
								21
							],
							"name": "ERC20Burnable",
							"nameLocation": "1676:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 663,
										"nodeType": "Block",
										"src": "1862:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 658,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "1878:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1878:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 660,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "1892:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 657,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "1872:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1872:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 662,
												"nodeType": "ExpressionStatement",
												"src": "1872:27:3"
											}
										]
									},
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "1714:98:3",
										"text": " @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 664,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "1826:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1839:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "1831:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1831:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1830:16:3"
									},
									"returnParameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1862:0:3"
									},
									"scope": 686,
									"src": "1817:89:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 684,
										"nodeType": "Block",
										"src": "2278:95:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 673,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "2304:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 674,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "2313:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2313:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 676,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "2327:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 672,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "2288:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2288:46:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 678,
												"nodeType": "ExpressionStatement",
												"src": "2288:46:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 680,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "2350:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 681,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "2359:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 679,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "2344:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2344:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 683,
												"nodeType": "ExpressionStatement",
												"src": "2344:22:3"
											}
										]
									},
									"documentation": {
										"id": 665,
										"nodeType": "StructuredDocumentation",
										"src": "1912:295:3",
										"text": " @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."
									},
									"functionSelector": "79cc6790",
									"id": 685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "2221:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2238:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "2230:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2230:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2255:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "2247:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2247:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2229:33:3"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2278:0:3"
									},
									"scope": 686,
									"src": "2212:161:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 687,
							"src": "1658:717:3",
							"usedErrors": [],
							"usedEvents": [
								698,
								707
							]
						}
					],
					"src": "1377:999:3"
				},
				"id": 3
			},
			"burnable-token/Discovery/IERC20.sol": {
				"ast": {
					"absolutePath": "burnable-token/Discovery/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							764
						]
					},
					"id": 765,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 688,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1359:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 689,
								"nodeType": "StructuredDocumentation",
								"src": "1384:70:4",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 764,
							"linearizedBaseContracts": [
								764
							],
							"name": "IERC20",
							"nameLocation": "1465:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 690,
										"nodeType": "StructuredDocumentation",
										"src": "1478:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 698,
									"name": "Transfer",
									"nameLocation": "1647:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1672:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "1656:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1656:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1694:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "1678:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1678:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 696,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1706:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "1698:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1698:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1655:57:4"
									},
									"src": "1641:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 699,
										"nodeType": "StructuredDocumentation",
										"src": "1719:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 707,
									"name": "Approval",
									"nameLocation": "1878:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1903:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "1887:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1887:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 703,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1926:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "1910:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1910:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 705,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1943:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "1935:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1935:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1886:63:4"
									},
									"src": "1872:78:4"
								},
								{
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "1956:66:4",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 713,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2036:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2047:2:4"
									},
									"returnParameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "2073:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2073:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2072:9:4"
									},
									"scope": 764,
									"src": "2027:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "2088:72:4",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 721,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2174:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2192:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "2184:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2184:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2183:17:4"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "2224:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2224:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2223:9:4"
									},
									"scope": 764,
									"src": "2165:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 722,
										"nodeType": "StructuredDocumentation",
										"src": "2239:202:4",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 731,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2455:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2472:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "2464:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2464:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2484:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "2476:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2476:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2463:28:4"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "2510:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 728,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2510:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2509:6:4"
									},
									"scope": 764,
									"src": "2446:70:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 732,
										"nodeType": "StructuredDocumentation",
										"src": "2522:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 741,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "2800:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2818:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "2810:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2810:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2833:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "2825:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2825:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2809:32:4"
									},
									"returnParameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "2865:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2865:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2864:9:4"
									},
									"scope": 764,
									"src": "2791:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 742,
										"nodeType": "StructuredDocumentation",
										"src": "2880:642:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 751,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3536:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3552:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "3544:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3544:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3569:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "3561:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3561:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3543:33:4"
									},
									"returnParameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "3595:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 748,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3595:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3594:6:4"
									},
									"scope": 764,
									"src": "3527:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "3607:287:4",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 763,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3908:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3938:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "3930:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3960:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "3952:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3952:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3980:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "3972:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3972:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3920:72:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "4011:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 760,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4011:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4010:6:4"
									},
									"scope": 764,
									"src": "3899:118:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 765,
							"src": "1455:2564:4",
							"usedErrors": [],
							"usedEvents": [
								698,
								707
							]
						}
					],
					"src": "1359:2661:4"
				},
				"id": 4
			},
			"burnable-token/Discovery/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "burnable-token/Discovery/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							764
						],
						"IERC20Metadata": [
							789
						]
					},
					"id": 790,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 766,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1363:23:5"
						},
						{
							"absolutePath": "burnable-token/Discovery/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 767,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 790,
							"sourceUnit": 765,
							"src": "1388:22:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 769,
										"name": "IERC20",
										"nameLocations": [
											"1557:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 764,
										"src": "1557:6:5"
									},
									"id": 770,
									"nodeType": "InheritanceSpecifier",
									"src": "1557:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 768,
								"nodeType": "StructuredDocumentation",
								"src": "1412:116:5",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 789,
							"linearizedBaseContracts": [
								789,
								764
							],
							"name": "IERC20Metadata",
							"nameLocation": "1539:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 771,
										"nodeType": "StructuredDocumentation",
										"src": "1570:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 776,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1638:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1642:2:5"
									},
									"returnParameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "1668:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 773,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1668:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1667:15:5"
									},
									"scope": 789,
									"src": "1629:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "1689:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 782,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1759:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1765:2:5"
									},
									"returnParameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "1791:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 779,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1791:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1790:15:5"
									},
									"scope": 789,
									"src": "1750:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 783,
										"nodeType": "StructuredDocumentation",
										"src": "1812:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 788,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1891:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1899:2:5"
									},
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "1925:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 785,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1925:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1924:7:5"
									},
									"scope": 789,
									"src": "1882:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 790,
							"src": "1529:405:5",
							"usedErrors": [],
							"usedEvents": [
								698,
								707
							]
						}
					],
					"src": "1363:572:5"
				},
				"id": 5
			},
			"burnable-token/Discovery/Ownable.sol": {
				"ast": {
					"absolutePath": "burnable-token/Discovery/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							21
						],
						"Ownable": [
							937
						]
					},
					"id": 938,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 791,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:6"
						},
						{
							"absolutePath": "burnable-token/Discovery/Context.sol",
							"file": "./Context.sol",
							"id": 793,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 938,
							"sourceUnit": 22,
							"src": "128:38:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 792,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 21,
										"src": "136:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 795,
										"name": "Context",
										"nameLocations": [
											"685:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "685:7:6"
									},
									"id": 796,
									"nodeType": "InheritanceSpecifier",
									"src": "685:7:6"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 794,
								"nodeType": "StructuredDocumentation",
								"src": "168:487:6",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 937,
							"linearizedBaseContracts": [
								937,
								21
							],
							"name": "Ownable",
							"nameLocation": "674:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 798,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "715:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 937,
									"src": "699:22:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 797,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "699:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 799,
										"nodeType": "StructuredDocumentation",
										"src": "728:85:6",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 803,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "824:26:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "859:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "851:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "851:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "850:17:6"
									},
									"src": "818:50:6"
								},
								{
									"documentation": {
										"id": 804,
										"nodeType": "StructuredDocumentation",
										"src": "874:82:6",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 808,
									"name": "OwnableInvalidOwner",
									"nameLocation": "967:19:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "995:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "987:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "987:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "986:15:6"
									},
									"src": "961:41:6"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 814,
									"name": "OwnershipTransferred",
									"nameLocation": "1014:20:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1051:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "1035:29:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1082:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "1066:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1066:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1034:57:6"
									},
									"src": "1008:84:6"
								},
								{
									"body": {
										"id": 839,
										"nodeType": "Block",
										"src": "1252:153:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 820,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "1266:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1290:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1282:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 821,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1282:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1282:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1266:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 834,
												"nodeType": "IfStatement",
												"src": "1262:95:6",
												"trueBody": {
													"id": 833,
													"nodeType": "Block",
													"src": "1294:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 829,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1343:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 828,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1335:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 827,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1335:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1335:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 826,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 808,
																	"src": "1315:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1315:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 832,
															"nodeType": "RevertStatement",
															"src": "1308:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 836,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "1385:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 835,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "1366:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1366:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 838,
												"nodeType": "ExpressionStatement",
												"src": "1366:32:6"
											}
										]
									},
									"documentation": {
										"id": 815,
										"nodeType": "StructuredDocumentation",
										"src": "1098:115:6",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 840,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1238:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "1230:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1230:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1229:22:6"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1252:0:6"
									},
									"scope": 937,
									"src": "1218:187:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 847,
										"nodeType": "Block",
										"src": "1514:41:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 843,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "1524:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1524:13:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 845,
												"nodeType": "ExpressionStatement",
												"src": "1524:13:6"
											},
											{
												"id": 846,
												"nodeType": "PlaceholderStatement",
												"src": "1547:1:6"
											}
										]
									},
									"documentation": {
										"id": 841,
										"nodeType": "StructuredDocumentation",
										"src": "1411:77:6",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 848,
									"name": "onlyOwner",
									"nameLocation": "1502:9:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1511:2:6"
									},
									"src": "1493:62:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 856,
										"nodeType": "Block",
										"src": "1686:30:6",
										"statements": [
											{
												"expression": {
													"id": 854,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 798,
													"src": "1703:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 853,
												"id": 855,
												"nodeType": "Return",
												"src": "1696:13:6"
											}
										]
									},
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "1561:65:6",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1640:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1645:2:6"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "1677:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 851,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1677:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1676:9:6"
									},
									"scope": 937,
									"src": "1631:85:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 873,
										"nodeType": "Block",
										"src": "1834:117:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 861,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "1848:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 862,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1848:7:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 863,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "1859:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 864,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1859:12:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1848:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 872,
												"nodeType": "IfStatement",
												"src": "1844:101:6",
												"trueBody": {
													"id": 871,
													"nodeType": "Block",
													"src": "1873:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 867,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 11,
																			"src": "1921:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1921:12:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 866,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "1894:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1894:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 870,
															"nodeType": "RevertStatement",
															"src": "1887:47:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 858,
										"nodeType": "StructuredDocumentation",
										"src": "1722:62:6",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 874,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1798:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1809:2:6"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1834:0:6"
									},
									"scope": 937,
									"src": "1789:162:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 887,
										"nodeType": "Block",
										"src": "2340:47:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2377:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 882,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2369:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 881,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2369:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2369:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 880,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "2350:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2350:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 886,
												"nodeType": "ExpressionStatement",
												"src": "2350:30:6"
											}
										]
									},
									"documentation": {
										"id": 875,
										"nodeType": "StructuredDocumentation",
										"src": "1957:324:6",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 888,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 878,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 877,
												"name": "onlyOwner",
												"nameLocations": [
													"2330:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 848,
												"src": "2330:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2330:9:6"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2295:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2312:2:6"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2340:0:6"
									},
									"scope": 937,
									"src": "2286:101:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 915,
										"nodeType": "Block",
										"src": "2606:145:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 896,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 891,
														"src": "2620:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 899,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2640:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2632:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 897,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2632:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 900,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2632:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2620:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 910,
												"nodeType": "IfStatement",
												"src": "2616:91:6",
												"trueBody": {
													"id": 909,
													"nodeType": "Block",
													"src": "2644:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 905,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2693:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 904,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2685:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 903,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2685:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 906,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2685:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 902,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 808,
																	"src": "2665:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2665:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 908,
															"nodeType": "RevertStatement",
															"src": "2658:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 912,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "2735:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 911,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "2716:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2716:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 914,
												"nodeType": "ExpressionStatement",
												"src": "2716:28:6"
											}
										]
									},
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "2393:138:6",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 916,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 894,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 893,
												"name": "onlyOwner",
												"nameLocations": [
													"2596:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 848,
												"src": "2596:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2596:9:6"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2545:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2571:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "2563:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2563:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2562:18:6"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2606:0:6"
									},
									"scope": 937,
									"src": "2536:215:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 935,
										"nodeType": "Block",
										"src": "2968:124:6",
										"statements": [
											{
												"assignments": [
													923
												],
												"declarations": [
													{
														"constant": false,
														"id": 923,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2986:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 935,
														"src": "2978:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 922,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2978:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 925,
												"initialValue": {
													"id": 924,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 798,
													"src": "2997:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2978:25:6"
											},
											{
												"expression": {
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 926,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "3013:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 927,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "3022:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3013:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 929,
												"nodeType": "ExpressionStatement",
												"src": "3013:17:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 931,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "3066:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 932,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "3076:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 930,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "3045:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3045:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 934,
												"nodeType": "EmitStatement",
												"src": "3040:45:6"
											}
										]
									},
									"documentation": {
										"id": 917,
										"nodeType": "StructuredDocumentation",
										"src": "2757:143:6",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2914:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2941:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "2933:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2933:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2932:18:6"
									},
									"returnParameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2968:0:6"
									},
									"scope": 937,
									"src": "2905:187:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 938,
							"src": "656:2438:6",
							"usedErrors": [
								803,
								808
							],
							"usedEvents": [
								814
							]
						}
					],
					"src": "102:2993:6"
				},
				"id": 6
			}
		}
	}
}